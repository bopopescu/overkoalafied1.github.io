<?xml version="1.0" encoding="utf-8"?>
<!-- BINGIE -->
<includes>

    <!--Animation-->
    <include name="animation_view_change">
        <!--View Change -->
        <animation time="200" effect="fade">Visible</animation>
        <animation time="200" effect="fade">Hidden</animation>
    </include>
    <include name="animation_view_change_pvr">
        <!--View Change PVR-->
        <animation time="200" effect="fade">Visible</animation>
        <animation time="200" effect="fade">Hidden</animation>
    </include>

    <include name="BingieViews_WindowOpen_Fade">
        <animation type="WindowOpen" reversible="false">
            <effect type="fade" start="0" end="100" time="300"/>
        </animation>
    </include>

    <include name="Startup_Dialog_OpenClose">
        <animation type="WindowOpen" reversible="false">
            <effect type="zoom" start="80" end="100" center="960,540" delay="160" tween="circle" easing="out" time="240" />
            <effect type="fade" delay="160" end="100" time="240" />
        </animation>
        <animation type="WindowClose" reversible="false">
            <effect type="zoom" start="100" end="80" center="960,540" easing="in" tween="circle" time="240" />
            <effect type="fade" start="100" end="0" time="240" />
        </animation>
    </include>

    <include name="Visible_Fade">
        <animation effect="fade" end="100" time="200">WindowOpen</animation>
        <animation effect="fade" start="100" end="0" time="200">WindowClose</animation>
        <animation effect="fade" end="100" time="200">Visible</animation>
        <animation effect="fade" start="100" end="0" time="200">Hidden</animation>
    </include>

    <include name="animation_window_open_close">
        <!--Fade Open/Close normal-->
        <animation type="WindowOpen" reversible="false" condition="!Skin.HasSetting(LowPerformanceMode) + ![Control.IsVisible(525) | Control.IsVisible(523)]">
            <effect type="zoom" start="80" end="100" center="960,540" easing="out" tween="back" time="200"/>
            <effect type="fade" start="0" end="100" time="200"/>
        </animation>
        <animation type="WindowClose" reversible="false" condition="!Skin.HasSetting(LowPerformanceMode) + ![Control.IsVisible(525) | Control.IsVisible(523)]">
            <effect type="zoom" start="100" end="80" center="960,540" easing="in" tween="back" time="200"/>
            <effect type="fade" start="100" end="0" time="200"/>
        </animation>

        <!--Fade Open/Close slow systems-->
        <animation type="WindowOpen" reversible="false" condition="Skin.HasSetting(LowPerformanceMode) | [Control.IsVisible(525)]">
            <effect type="fade" start="0" end="100" time="150"/>
        </animation>
        <animation type="WindowClose" reversible="false" condition="Skin.HasSetting(LowPerformanceMode) | [Control.IsVisible(525)]">
            <effect type="fade" start="100" end="0" time="150"/>
        </animation>

        <animation time="150" effect="fade" reversible="true" easing="inout">Visible</animation>
    </include>

    <include name="InfoDialogWindowOpenAnim">
        <animation type="WindowOpen" reversible="false" condition="!Skin.HasSetting(LowPerformanceMode)">
            <effect type="slide" start="200" end="0" easing="out" tween="sine" time="250"/>
            <effect type="fade" start="0" end="100" time="300"/>
        </animation>
    </include>

    <include name="widgets_animation">
        <animation condition="Skin.HasSetting(Widgets_Animation)" reversible="false" type="Visible">
            <effect center="960,540" delay="280" easing="in" end="100" start="98" time="180" tween="sine" type="zoom" />
            <effect delay="280" easing="in" end="0,0" start="0,40" time="180" tween="sine" type="slide" />
            <effect delay="280" easing="in" end="100" start="0" time="180" tween="sine" type="fade" />
        </animation>
        <animation time="300" effect="fade" start="0" end="100" reversible="true" easing="inout" condition="!Skin.HasSetting(Widgets_Animation)">Visible</animation>
    </include>

    <include name="animation_fade_visible_hidden">
        <!--Visible/Hidden Aniamtion-->
        <animation time="125" effect="fade" delay="0">Visible</animation>
        <animation time="125" effect="fade" delay="0">Hidden</animation>
        <animation type="WindowOpen" reversible="false">
            <effect type="fade" start="0" end="100" time="200"/>
        </animation>
        <animation type="WindowClose" reversible="false">
            <effect type="fade" start="100" end="0" time="200"/>
        </animation>
    </include>

    <include name="animation_fade_visible">
        <!--Visible/Hidden Aniamtion-->
        <animation time="250" effect="fade" delay="350">Visible</animation>
        <animation time="0" effect="fade" delay="0">Hidden</animation>
        <animation type="WindowOpen" reversible="false">
            <effect type="fade" start="0" end="100" time="200"/>
        </animation>
        <animation type="WindowClose" reversible="false">
            <effect type="fade" start="100" end="0" time="0"/>
        </animation>
    </include>

    <include name="animation_fade_visible_hidden_delayed">
        <!--Visible/Hidden Aniamtion-->
        <animation time="125" effect="fade" delay="0">Visible</animation>
        <animation time="125" effect="fade" delay="300">Hidden</animation>
    </include>

    <include name="animation_dialog_button">
        <!--Shutdown Menu Open/Close-->
        <animation type="WindowOpen">
            <effect type="slide" start="0,200" end="0,-490" tween="cubic" easing="inout" time="550" />
            <effect type="fade" start="0" end="100" tween="sine" easing="inout" time="400" />
        </animation>
        <animation type="WindowClose">
            <effect type="slide" start="0,-490" end="0,200" tween="cubic" easing="inout" time="550" />
            <effect type="fade" start="100" end="0" tween="sine" easing="out" time="350" />
        </animation>
    </include>
    <include name="animation_dialog_button_modern">
        <!--Shutdown Menu Open/Close-->
        <animation type="WindowOpen">
            <effect type="slide" start="0,110" end="0,0" tween="cubic" easing="inout" time="550" />
            <effect type="fade" start="0" end="100" tween="sine" easing="inout" time="400" />
        </animation>
        <animation type="WindowClose">
            <effect type="slide" start="0,0" end="0,110" tween="cubic" easing="inout" time="550" />
            <effect type="fade" start="100" end="0" tween="sine" easing="out" time="300" />
        </animation>
    </include>

    <!-- unfocused widget fade on bingie layout -->
    <include name="BingieUnfocusedWidgetFade">
        <animation effect="fade" start="100" end="55" time="100" condition="!Control.HasFocus($PARAM[widgetid]) + ![Control.HasFocus(1508) | ControlGroup(505).HasFocus()]">Conditional</animation>
    </include>

    <include name="BingieNoCircularWidgetHeaderAnim">
        <animation effect="slide" time="0" delay="0" start="0" end="70" condition="true">Conditional</animation>
    </include>

    <!-- hide on info-dialog transition / startup-mask -->
    <include name="Hide_Window_Anim">
        <animation time="0" effect="fade" start="100" end="0" condition="System.HasAlarm(loadinfo) | System.HasAlarm(startup)">Conditional</animation>
    </include>

    <!-- dim on menu animation -->
    <include name="Dim_On_Menu_Animation">
        <animation time="300" effect="fade" start="100" end="20" reversible="true" easing="inout" condition="$EXP[IsMainMenuOpened]">Conditional</animation>
    </include>

    <include name="No_Circular_Slide_Animation">
        <animation effect="slide" time="0" delay="0" start="0" end="bingie_no_circular_left_diff" condition="true">Conditional</animation>
    </include>

    <include name="animation_sub_menu">
        <!--Sub Menu Slide Animation-->
        <animation type="Conditional" condition="[ControlGroup(9001).HasFocus() + Window.IsActive(Home)] | ControlGroup(9000).HasFocus() | String.IsEqual(Window(Home).Property(ShowViewSubMenu),show) | Control.HasFocus(9000)">
            <effect type="slide" start="0" end="660" time="300" delay="0" tween="cubic" easing="inout" />
        </animation>
    </include>

    <include name="SettingsFadeEffect">
        <animation effect="fade" time="100" delay="200">Visible</animation>
        <animation effect="fade" time="50">Hidden</animation>
    </include>

    <include name="backgroundfade">
        <animation effect="fade" time="150">Visible</animation>
        <animation effect="fade" time="150">Hidden</animation>
    </include>

    <include name="Frame_Scrolling_Fade">
        <animation effect="fade" start="100" end="80" time="200" condition="Container.Scrolling | Container.OnScrollNext | Container.OnScrollPrevious">Conditional</animation>
    </include>

    <!-- default fade animation -->
    <include name="Default_Visible_Fade">
        <animation effect="fade" time="350">Visible</animation>
    </include>

    <include name="SearchSuggestionsAnim">
        <animation effect="slide" start="0" end="0,-430" time="450" tween="sine" easing="inout" condition="Control.HasFocus(1007) | Control.IsVisible(500)">Conditional</animation>
    </include>

    <include name="WidgetsBaseAnimation">
        <include condition="!Skin.HasSetting(Widgets_Animation)">WidgetsBaseAnimationDefault</include>
        <include condition="Skin.HasSetting(Widgets_Animation)">WidgetsBaseAnimationAlt</include>
    </include>

    <include name="WidgetsBaseAnimationDefault">
        <animation time="100" effect="fade" start="0" end="100" reversible="false" easing="inout">Visible</animation>
    </include>
    <include name="WidgetsBaseAnimationAlt">
        <animation condition="!ControlGroup(77777).HasFocus()" reversible="false" type="Visible">
            <effect center="960,540" delay="280" easing="in" end="100" start="98" time="180" tween="sine" type="zoom"/>
            <effect delay="280" easing="in" end="0,0" start="0,40" time="180" tween="sine" type="slide"/>
            <effect delay="280" easing="in" end="100" start="0" time="180" tween="sine" type="fade"/>
        </animation>
    </include>

    <!-- widget layout animations -->
    <include name="widget_layout_landscape_animation">
        <animation effect="slide" delay="0" start="0" end="0,100" time="200" condition="!String.IsEqual(Skin.AspectRatio,16:10) + String.Contains(Skin.String(HomeLayout),horizontal) + Skin.HasSetting(AutoShowWidgets) + [String.IsEmpty(Window(Home).Property(ShowWidget)) | Skin.HasSetting(HideWidgetDetailsPanel)]">Conditional</animation>
        <animation effect="slide" delay="0" start="0" end="0,220" time="200" condition="String.IsEqual(Skin.AspectRatio,16:10) + String.Contains(Skin.String(HomeLayout),horizontal) + Skin.HasSetting(AutoShowWidgets) + [String.IsEmpty(Window(Home).Property(ShowWidget)) | Skin.HasSetting(HideWidgetDetailsPanel)]">Conditional</animation>
        <animation effect="slide" delay="0" start="0" end="0,0" time="200" condition="String.Contains(Skin.String(HomeLayout),simplehor) + Skin.HasSetting(AutoShowWidgets) + [String.IsEmpty(Window(Home).Property(ShowWidget)) | Skin.HasSetting(HideWidgetDetailsPanel)]">Conditional</animation>
        <animation effect="slide" delay="0" start="0" end="0,-370" time="200" condition="[[[String.IsEqual(Skin.String(HomeLayout),1) | String.IsEqual(Skin.String(HomeLayout),1small)] + !Skin.HasSetting(LowerWidgets)] | [String.IsEqual(Skin.String(HomeLayout),2) | String.IsEqual(Skin.String(HomeLayout),2small)]] + Skin.HasSetting(AutoShowWidgets) + [String.IsEmpty(Window(Home).Property(ShowWidget)) | Skin.HasSetting(HideWidgetDetailsPanel)]">Conditional</animation>
        <animation effect="slide" delay="0" start="0" end="0,-130" time="200" condition="!String.IsEqual(Skin.AspectRatio,16:10) + [String.IsEqual(Skin.String(HomeLayout),1) | String.IsEqual(Skin.String(HomeLayout),1small)] + Skin.HasSetting(LowerWidgets) + Skin.HasSetting(AutoShowWidgets) + [String.IsEmpty(Window(Home).Property(ShowWidget)) | Skin.HasSetting(HideWidgetDetailsPanel)]">Conditional</animation>
        <animation effect="slide" delay="0" start="0" end="0,-10" time="200" condition="String.IsEqual(Skin.AspectRatio,16:10) + [String.IsEqual(Skin.String(HomeLayout),1) | String.IsEqual(Skin.String(HomeLayout),1small)] + Skin.HasSetting(LowerWidgets) + Skin.HasSetting(AutoShowWidgets) + [String.IsEmpty(Window(Home).Property(ShowWidget)) | Skin.HasSetting(HideWidgetDetailsPanel)]">Conditional</animation>

        <animation effect="slide" start="0" end="140" time="0" condition="Skin.HasSetting(WidgetAlignRight) + $EXP[IsVerticalLayout] + Skin.HasSetting(VerticalHomeLargeWidget) + !Integer.IsGreater(Container($PARAM[widgetid]).NumItems,3)">Conditional</animation>

        <animation effect="slide" start="0" end="366" time="0" condition="Skin.HasSetting(WidgetAlignRight) + !$EXP[IsVerticalLayout] + !Integer.IsGreater(Container($PARAM[widgetid]).NumItems,4)">Conditional</animation>
        <animation effect="slide" start="0" end="366" time="0" condition="Skin.HasSetting(WidgetAlignRight) + !$EXP[IsVerticalLayout] + !Integer.IsGreater(Container($PARAM[widgetid]).NumItems,3)">Conditional</animation>
        <animation effect="slide" start="0" end="366" time="0" condition="Skin.HasSetting(WidgetAlignRight) + !$EXP[IsVerticalLayout] + !Integer.IsGreater(Container($PARAM[widgetid]).NumItems,2)">Conditional</animation>
        <animation effect="slide" start="0" end="366" time="0" condition="Skin.HasSetting(WidgetAlignRight) + !$EXP[IsVerticalLayout] + !Integer.IsGreater(Container($PARAM[widgetid]).NumItems,1)">Conditional</animation>
        <animation effect="slide" start="0" end="326" time="0" condition="Skin.HasSetting(WidgetAlignRight) + $EXP[IsVerticalLayout] + !Integer.IsGreater(Container($PARAM[widgetid]).NumItems,3)">Conditional</animation>
        <animation effect="slide" start="0" end="326" time="0" condition="Skin.HasSetting(WidgetAlignRight) + $EXP[IsVerticalLayout] + !Integer.IsGreater(Container($PARAM[widgetid]).NumItems,2)">Conditional</animation>
        <animation effect="slide" start="0" end="326" time="0" condition="Skin.HasSetting(WidgetAlignRight) + $EXP[IsVerticalLayout] + !Integer.IsGreater(Container($PARAM[widgetid]).NumItems,1)">Conditional</animation>
    </include>

    <include name="widget_layout_landscapelarge_animation">
        <animation effect="slide" delay="0" start="0" end="0,40" time="200" condition="!String.IsEqual(Skin.AspectRatio,16:10) + String.Contains(Skin.String(HomeLayout),horizontal) + Skin.HasSetting(AutoShowWidgets) + [String.IsEmpty(Window(Home).Property(ShowWidget)) | Skin.HasSetting(HideWidgetDetailsPanel)]">Conditional</animation>
        <animation effect="slide" delay="0" start="0" end="0,160" time="200" condition="String.IsEqual(Skin.AspectRatio,16:10) + String.Contains(Skin.String(HomeLayout),horizontal) + Skin.HasSetting(AutoShowWidgets) + [String.IsEmpty(Window(Home).Property(ShowWidget)) | Skin.HasSetting(HideWidgetDetailsPanel)]">Conditional</animation>
        <animation effect="slide" delay="0" start="0" end="0,-60" time="200" condition="String.Contains(Skin.String(HomeLayout),simplehor) + Skin.HasSetting(AutoShowWidgets) + [String.IsEmpty(Window(Home).Property(ShowWidget)) | Skin.HasSetting(HideWidgetDetailsPanel)]">Conditional</animation>
        <animation effect="slide" delay="0" start="0" end="0,-370" time="200" condition="[[[String.IsEqual(Skin.String(HomeLayout),1) | String.IsEqual(Skin.String(HomeLayout),1small)] + !Skin.HasSetting(LowerWidgets)] | [String.IsEqual(Skin.String(HomeLayout),2) | String.IsEqual(Skin.String(HomeLayout),2small)]] + Skin.HasSetting(AutoShowWidgets) + [String.IsEmpty(Window(Home).Property(ShowWidget)) | Skin.HasSetting(HideWidgetDetailsPanel)]">Conditional</animation>
        <animation effect="slide" delay="0" start="0" end="0,-190" time="200" condition="!String.IsEqual(Skin.AspectRatio,16:10) + [String.IsEqual(Skin.String(HomeLayout),1) | String.IsEqual(Skin.String(HomeLayout),1small)] + Skin.HasSetting(LowerWidgets) + Skin.HasSetting(AutoShowWidgets) + [String.IsEmpty(Window(Home).Property(ShowWidget)) | Skin.HasSetting(HideWidgetDetailsPanel)]">Conditional</animation>
        <animation effect="slide" delay="0" start="0" end="0,-70" time="200" condition="String.IsEqual(Skin.AspectRatio,16:10) + [String.IsEqual(Skin.String(HomeLayout),1) | String.IsEqual(Skin.String(HomeLayout),1small)] + Skin.HasSetting(LowerWidgets) + Skin.HasSetting(AutoShowWidgets) + [String.IsEmpty(Window(Home).Property(ShowWidget)) | Skin.HasSetting(HideWidgetDetailsPanel)]">Conditional</animation>
    </include>

    <include name="widget_layout_landscapedetails_animation">
        <animation effect="slide" delay="0" start="0" end="0,100" time="0" condition="!String.IsEqual(Skin.AspectRatio,16:10) + String.Contains(Skin.String(HomeLayout),horizontal) + Skin.HasSetting(AutoShowWidgets) + [String.IsEmpty(Window(Home).Property(ShowWidget)) | Skin.HasSetting(HideWidgetDetailsPanel)]">Conditional</animation>
        <animation effect="slide" delay="0" start="0" end="0,220" time="0" condition="String.IsEqual(Skin.AspectRatio,16:10) + String.Contains(Skin.String(HomeLayout),horizontal) + Skin.HasSetting(AutoShowWidgets) + [String.IsEmpty(Window(Home).Property(ShowWidget)) | Skin.HasSetting(HideWidgetDetailsPanel)]">Conditional</animation>
        <animation effect="slide" delay="0" start="0" end="0,0" time="0" condition="String.Contains(Skin.String(HomeLayout),simplehor) + Skin.HasSetting(AutoShowWidgets) + [String.IsEmpty(Window(Home).Property(ShowWidget)) | Skin.HasSetting(HideWidgetDetailsPanel)]">Conditional</animation>
        <animation effect="slide" delay="0" start="0" end="0,-370" time="0" condition="[[[String.IsEqual(Skin.String(HomeLayout),1) | String.IsEqual(Skin.String(HomeLayout),1small)] + !Skin.HasSetting(LowerWidgets)] | [String.IsEqual(Skin.String(HomeLayout),2) | String.IsEqual(Skin.String(HomeLayout),2small)]] + Skin.HasSetting(AutoShowWidgets) + [String.IsEmpty(Window(Home).Property(ShowWidget)) | Skin.HasSetting(HideWidgetDetailsPanel)]">Conditional</animation>
        <animation effect="slide" delay="0" start="0" end="0,-130" time="0" condition="!String.IsEqual(Skin.AspectRatio,16:10) + [String.IsEqual(Skin.String(HomeLayout),1) | String.IsEqual(Skin.String(HomeLayout),1small)] + Skin.HasSetting(LowerWidgets) + Skin.HasSetting(AutoShowWidgets) + [String.IsEmpty(Window(Home).Property(ShowWidget)) | Skin.HasSetting(HideWidgetDetailsPanel)]">Conditional</animation>
        <animation effect="slide" delay="0" start="0" end="0,-10" time="0" condition="String.IsEqual(Skin.AspectRatio,16:10) + [String.IsEqual(Skin.String(HomeLayout),1) | String.IsEqual(Skin.String(HomeLayout),1small)] + Skin.HasSetting(LowerWidgets) + Skin.HasSetting(AutoShowWidgets) + [String.IsEmpty(Window(Home).Property(ShowWidget)) | Skin.HasSetting(HideWidgetDetailsPanel)]">Conditional</animation>
    </include>

    <include name="widget_layout_banner_animation">
        <animation effect="slide" delay="0" start="0" end="0,165" time="200" condition="!String.IsEqual(Skin.AspectRatio,16:10) + String.Contains(Skin.String(HomeLayout),horizontal) + Skin.HasSetting(AutoShowWidgets) + [String.IsEmpty(Window(Home).Property(ShowWidget)) | Skin.HasSetting(HideWidgetDetailsPanel)]">Conditional</animation>
        <animation effect="slide" delay="0" start="0" end="0,285" time="200" condition="String.IsEqual(Skin.AspectRatio,16:10) + String.Contains(Skin.String(HomeLayout),horizontal) + Skin.HasSetting(AutoShowWidgets) + [String.IsEmpty(Window(Home).Property(ShowWidget)) | Skin.HasSetting(HideWidgetDetailsPanel)]">Conditional</animation>
        <animation effect="slide" delay="0" start="0" end="0,64" time="200" condition="String.Contains(Skin.String(HomeLayout),simplehor) + Skin.HasSetting(AutoShowWidgets) + [String.IsEmpty(Window(Home).Property(ShowWidget)) | Skin.HasSetting(HideWidgetDetailsPanel)]">Conditional</animation>
        <animation effect="slide" delay="0" start="0" end="0,-370" time="200" condition="[[[String.IsEqual(Skin.String(HomeLayout),1) | String.IsEqual(Skin.String(HomeLayout),1small)] + !Skin.HasSetting(LowerWidgets)] | [String.IsEqual(Skin.String(HomeLayout),2) | String.IsEqual(Skin.String(HomeLayout),2small)]] + Skin.HasSetting(AutoShowWidgets) + [String.IsEmpty(Window(Home).Property(ShowWidget)) | Skin.HasSetting(HideWidgetDetailsPanel)]">Conditional</animation>
        <animation effect="slide" delay="0" start="0" end="0,-66" time="200" condition="!String.IsEqual(Skin.AspectRatio,16:10) + [String.IsEqual(Skin.String(HomeLayout),1) | String.IsEqual(Skin.String(HomeLayout),1small)] + Skin.HasSetting(LowerWidgets) + Skin.HasSetting(AutoShowWidgets) + [String.IsEmpty(Window(Home).Property(ShowWidget)) | Skin.HasSetting(HideWidgetDetailsPanel)]">Conditional</animation>
        <animation effect="slide" delay="0" start="0" end="0,54" time="200" condition="String.IsEqual(Skin.AspectRatio,16:10) + [String.IsEqual(Skin.String(HomeLayout),1) | String.IsEqual(Skin.String(HomeLayout),1small)] + Skin.HasSetting(LowerWidgets) + Skin.HasSetting(AutoShowWidgets) + [String.IsEmpty(Window(Home).Property(ShowWidget)) | Skin.HasSetting(HideWidgetDetailsPanel)]">Conditional</animation>
    </include>

    <include name="widget_layout_landscapesmall_animation">
        <animation effect="slide" delay="0" start="0" end="0,162" time="200" condition="!String.IsEqual(Skin.AspectRatio,16:10) + String.Contains(Skin.String(HomeLayout),horizontal) + Skin.HasSetting(AutoShowWidgets) + [String.IsEmpty(Window(Home).Property(ShowWidget)) | Skin.HasSetting(HideWidgetDetailsPanel)]">Conditional</animation>
        <animation effect="slide" delay="0" start="0" end="0,282" time="200" condition="String.IsEqual(Skin.AspectRatio,16:10) + String.Contains(Skin.String(HomeLayout),horizontal) + Skin.HasSetting(AutoShowWidgets) + [String.IsEmpty(Window(Home).Property(ShowWidget)) | Skin.HasSetting(HideWidgetDetailsPanel)]">Conditional</animation>
        <animation effect="slide" delay="0" start="0" end="0,62" time="200" condition="String.Contains(Skin.String(HomeLayout),simplehor) + Skin.HasSetting(AutoShowWidgets) + [String.IsEmpty(Window(Home).Property(ShowWidget)) | Skin.HasSetting(HideWidgetDetailsPanel)]">Conditional</animation>
        <animation effect="slide" delay="0" start="0" end="0,-370" time="200" condition="[[[String.IsEqual(Skin.String(HomeLayout),1) | String.IsEqual(Skin.String(HomeLayout),1small)] + !Skin.HasSetting(LowerWidgets)] | [String.IsEqual(Skin.String(HomeLayout),2) | String.IsEqual(Skin.String(HomeLayout),2small)]] + Skin.HasSetting(AutoShowWidgets) + [String.IsEmpty(Window(Home).Property(ShowWidget)) | Skin.HasSetting(HideWidgetDetailsPanel)]">Conditional</animation>
        <animation effect="slide" delay="0" start="0" end="0,-68" time="200" condition="!String.IsEqual(Skin.AspectRatio,16:10) + [String.IsEqual(Skin.String(HomeLayout),1) | String.IsEqual(Skin.String(HomeLayout),1small)] + Skin.HasSetting(LowerWidgets) + Skin.HasSetting(AutoShowWidgets) + [String.IsEmpty(Window(Home).Property(ShowWidget)) | Skin.HasSetting(HideWidgetDetailsPanel)]">Conditional</animation>
        <animation effect="slide" delay="0" start="0" end="0,52" time="200" condition="String.IsEqual(Skin.AspectRatio,16:10) + [String.IsEqual(Skin.String(HomeLayout),1) | String.IsEqual(Skin.String(HomeLayout),1small)] + Skin.HasSetting(LowerWidgets) + Skin.HasSetting(AutoShowWidgets) + [String.IsEmpty(Window(Home).Property(ShowWidget)) | Skin.HasSetting(HideWidgetDetailsPanel)]">Conditional</animation>

        <animation effect="slide" start="0" end="140" time="0" condition="Skin.HasSetting(WidgetAlignRight) + $EXP[IsVerticalLayout] + Skin.HasSetting(VerticalHomeLargeWidget) + !Integer.IsGreater(Container($PARAM[widgetid]).NumItems,4)">Conditional</animation>

        <animation effect="slide" start="0" end="262" time="0" condition="Skin.HasSetting(WidgetAlignRight) + !$EXP[IsVerticalLayout] + !Integer.IsGreater(Container($PARAM[widgetid]).NumItems,6)">Conditional</animation>
        <animation effect="slide" start="0" end="262" time="0" condition="Skin.HasSetting(WidgetAlignRight) + !$EXP[IsVerticalLayout] + !Integer.IsGreater(Container($PARAM[widgetid]).NumItems,5)">Conditional</animation>
        <animation effect="slide" start="0" end="262" time="0" condition="Skin.HasSetting(WidgetAlignRight) + !$EXP[IsVerticalLayout] + !Integer.IsGreater(Container($PARAM[widgetid]).NumItems,4)">Conditional</animation>
        <animation effect="slide" start="0" end="262" time="0" condition="Skin.HasSetting(WidgetAlignRight) + !$EXP[IsVerticalLayout] + !Integer.IsGreater(Container($PARAM[widgetid]).NumItems,3)">Conditional</animation>
        <animation effect="slide" start="0" end="262" time="0" condition="Skin.HasSetting(WidgetAlignRight) + !$EXP[IsVerticalLayout] + !Integer.IsGreater(Container($PARAM[widgetid]).NumItems,2)">Conditional</animation>
        <animation effect="slide" start="0" end="262" time="0" condition="Skin.HasSetting(WidgetAlignRight) + !$EXP[IsVerticalLayout] + !Integer.IsGreater(Container($PARAM[widgetid]).NumItems,1)">Conditional</animation>

        <animation effect="slide" start="0" end="260" time="0" condition="Skin.HasSetting(WidgetAlignRight) + $EXP[IsVerticalLayout] + !Integer.IsGreater(Container($PARAM[widgetid]).NumItems,4)">Conditional</animation>
        <animation effect="slide" start="0" end="260" time="0" condition="Skin.HasSetting(WidgetAlignRight) + $EXP[IsVerticalLayout] + !Integer.IsGreater(Container($PARAM[widgetid]).NumItems,3)">Conditional</animation>
        <animation effect="slide" start="0" end="260" time="0" condition="Skin.HasSetting(WidgetAlignRight) + $EXP[IsVerticalLayout] + !Integer.IsGreater(Container($PARAM[widgetid]).NumItems,2)">Conditional</animation>
        <animation effect="slide" start="0" end="260" time="0" condition="Skin.HasSetting(WidgetAlignRight) + $EXP[IsVerticalLayout] + !Integer.IsGreater(Container($PARAM[widgetid]).NumItems,1)">Conditional</animation>
    </include>

    <include name="widget_layout_singlebox_animation">
        <animation effect="slide" delay="0" start="0" end="0,-30" time="0" condition="!String.IsEqual(Skin.AspectRatio,16:10) + String.Contains(Skin.String(HomeLayout),horizontal) + Skin.HasSetting(AutoShowWidgets) + [String.IsEmpty(Window(Home).Property(ShowWidget)) | Skin.HasSetting(HideWidgetDetailsPanel)]">Conditional</animation>
        <animation effect="slide" delay="0" start="0" end="0,90" time="0" condition="String.IsEqual(Skin.AspectRatio,16:10) + String.Contains(Skin.String(HomeLayout),horizontal) + Skin.HasSetting(AutoShowWidgets) + [String.IsEmpty(Window(Home).Property(ShowWidget)) | Skin.HasSetting(HideWidgetDetailsPanel)]">Conditional</animation>
        <animation effect="slide" delay="0" start="0" end="0,-130" time="0" condition="String.Contains(Skin.String(HomeLayout),simplehor) + Skin.HasSetting(AutoShowWidgets) + [String.IsEmpty(Window(Home).Property(ShowWidget)) | Skin.HasSetting(HideWidgetDetailsPanel)]">Conditional</animation>
        <animation effect="slide" delay="0" start="0" end="0,-370" time="0" condition="[[[String.IsEqual(Skin.String(HomeLayout),1) | String.IsEqual(Skin.String(HomeLayout),1small)] + !Skin.HasSetting(LowerWidgets)] | [String.IsEqual(Skin.String(HomeLayout),2) | String.IsEqual(Skin.String(HomeLayout),2small)]] + Skin.HasSetting(AutoShowWidgets) + [String.IsEmpty(Window(Home).Property(ShowWidget)) | Skin.HasSetting(HideWidgetDetailsPanel)]">Conditional</animation>
        <animation effect="slide" delay="0" start="0" end="0,-260" time="0" condition="!String.IsEqual(Skin.AspectRatio,16:10) + [String.IsEqual(Skin.String(HomeLayout),1) | String.IsEqual(Skin.String(HomeLayout),1small)] + Skin.HasSetting(LowerWidgets) + Skin.HasSetting(AutoShowWidgets) + [String.IsEmpty(Window(Home).Property(ShowWidget)) | Skin.HasSetting(HideWidgetDetailsPanel)]">Conditional</animation>
        <animation effect="slide" delay="0" start="0" end="0,-140" time="0" condition="String.IsEqual(Skin.AspectRatio,16:10) + [String.IsEqual(Skin.String(HomeLayout),1) | String.IsEqual(Skin.String(HomeLayout),1small)] + Skin.HasSetting(LowerWidgets) + Skin.HasSetting(AutoShowWidgets) + [String.IsEmpty(Window(Home).Property(ShowWidget)) | Skin.HasSetting(HideWidgetDetailsPanel)]">Conditional</animation>
    </include>

    <include name="widget_layout_landscapewidebox_animation">
        <animation effect="slide" delay="0" start="0" end="0,-70" time="200" condition="!String.IsEqual(Skin.AspectRatio,16:10) + String.Contains(Skin.String(HomeLayout),horizontal) + Skin.HasSetting(AutoShowWidgets) + [String.IsEmpty(Window(Home).Property(ShowWidget)) | Skin.HasSetting(HideWidgetDetailsPanel)]">Conditional</animation>
        <animation effect="slide" delay="0" start="0" end="0,50" time="200" condition="String.IsEqual(Skin.AspectRatio,16:10) + String.Contains(Skin.String(HomeLayout),horizontal) + Skin.HasSetting(AutoShowWidgets) + [String.IsEmpty(Window(Home).Property(ShowWidget)) | Skin.HasSetting(HideWidgetDetailsPanel)]">Conditional</animation>
        <animation effect="slide" delay="0" start="0" end="0,-170" time="200" condition="String.Contains(Skin.String(HomeLayout),simplehor) + Skin.HasSetting(AutoShowWidgets) + [String.IsEmpty(Window(Home).Property(ShowWidget)) | Skin.HasSetting(HideWidgetDetailsPanel)]">Conditional</animation>
        <animation effect="slide" delay="0" start="0" end="0,-370" time="200" condition="[[[String.IsEqual(Skin.String(HomeLayout),1) | String.IsEqual(Skin.String(HomeLayout),1small)] + !Skin.HasSetting(LowerWidgets)] | [String.IsEqual(Skin.String(HomeLayout),2) | String.IsEqual(Skin.String(HomeLayout),2small)]] + Skin.HasSetting(AutoShowWidgets) + [String.IsEmpty(Window(Home).Property(ShowWidget)) | Skin.HasSetting(HideWidgetDetailsPanel)]">Conditional</animation>
        <animation effect="slide" delay="0" start="0" end="0,-300" time="200" condition="!String.IsEqual(Skin.AspectRatio,16:10) + [String.IsEqual(Skin.String(HomeLayout),1) | String.IsEqual(Skin.String(HomeLayout),1small)] + Skin.HasSetting(LowerWidgets) + Skin.HasSetting(AutoShowWidgets) + [String.IsEmpty(Window(Home).Property(ShowWidget)) | Skin.HasSetting(HideWidgetDetailsPanel)]">Conditional</animation>
        <animation effect="slide" delay="0" start="0" end="0,-180" time="200" condition="String.IsEqual(Skin.AspectRatio,16:10) + [String.IsEqual(Skin.String(HomeLayout),1) | String.IsEqual(Skin.String(HomeLayout),1small)] + Skin.HasSetting(LowerWidgets) + Skin.HasSetting(AutoShowWidgets) + [String.IsEmpty(Window(Home).Property(ShowWidget)) | Skin.HasSetting(HideWidgetDetailsPanel)]">Conditional</animation>
    </include>

    <include name="widget_layout_widebox_animation">
        <animation effect="slide" delay="0" start="0" end="0,55" time="0" condition="!String.IsEqual(Skin.AspectRatio,16:10) + String.Contains(Skin.String(HomeLayout),horizontal) + Skin.HasSetting(AutoShowWidgets) + [String.IsEmpty(Window(Home).Property(ShowWidget)) | Skin.HasSetting(HideWidgetDetailsPanel)]">Conditional</animation>
        <animation effect="slide" delay="0" start="0" end="0,175" time="0" condition="String.IsEqual(Skin.AspectRatio,16:10) + String.Contains(Skin.String(HomeLayout),horizontal) + Skin.HasSetting(AutoShowWidgets) + [String.IsEmpty(Window(Home).Property(ShowWidget)) | Skin.HasSetting(HideWidgetDetailsPanel)]">Conditional</animation>
        <animation effect="slide" delay="0" start="0" end="0,-45" time="0" condition="String.Contains(Skin.String(HomeLayout),simplehor) + Skin.HasSetting(AutoShowWidgets) + [String.IsEmpty(Window(Home).Property(ShowWidget)) | Skin.HasSetting(HideWidgetDetailsPanel)]">Conditional</animation>
        <animation effect="slide" delay="0" start="0" end="0,-370" time="0" condition="[[[String.IsEqual(Skin.String(HomeLayout),1) | String.IsEqual(Skin.String(HomeLayout),1small)] + !Skin.HasSetting(LowerWidgets)] | [String.IsEqual(Skin.String(HomeLayout),2) | String.IsEqual(Skin.String(HomeLayout),2small)]] + Skin.HasSetting(AutoShowWidgets) + [String.IsEmpty(Window(Home).Property(ShowWidget)) | Skin.HasSetting(HideWidgetDetailsPanel)]">Conditional</animation>
        <animation effect="slide" delay="0" start="0" end="0,-175" time="0" condition="!String.IsEqual(Skin.AspectRatio,16:10) + [String.IsEqual(Skin.String(HomeLayout),1) | String.IsEqual(Skin.String(HomeLayout),1small)] + Skin.HasSetting(LowerWidgets) + Skin.HasSetting(AutoShowWidgets) + [String.IsEmpty(Window(Home).Property(ShowWidget)) | Skin.HasSetting(HideWidgetDetailsPanel)]">Conditional</animation>
        <animation effect="slide" delay="0" start="0" end="0,-55" time="0" condition="String.IsEqual(Skin.AspectRatio,16:10) + [String.IsEqual(Skin.String(HomeLayout),1) | String.IsEqual(Skin.String(HomeLayout),1small)] + Skin.HasSetting(LowerWidgets) + Skin.HasSetting(AutoShowWidgets) + [String.IsEmpty(Window(Home).Property(ShowWidget)) | Skin.HasSetting(HideWidgetDetailsPanel)]">Conditional</animation>
    </include>

    <include name="widget_layout_poster_animation">
        <animation effect="slide" delay="0" start="0" end="0,-70" time="200" condition="!String.IsEqual(Skin.AspectRatio,16:10) + String.Contains(Skin.String(HomeLayout),horizontal) + Skin.HasSetting(AutoShowWidgets) + [String.IsEmpty(Window(Home).Property(ShowWidget)) | Skin.HasSetting(HideWidgetDetailsPanel)]">Conditional</animation>
        <animation effect="slide" delay="0" start="0" end="0,50" time="200" condition="String.IsEqual(Skin.AspectRatio,16:10) + String.Contains(Skin.String(HomeLayout),horizontal) + Skin.HasSetting(AutoShowWidgets) + [String.IsEmpty(Window(Home).Property(ShowWidget)) | Skin.HasSetting(HideWidgetDetailsPanel)]">Conditional</animation>
        <animation effect="slide" delay="0" start="0" end="0,-170" time="200" condition="String.Contains(Skin.String(HomeLayout),simplehor) + Skin.HasSetting(AutoShowWidgets) + [String.IsEmpty(Window(Home).Property(ShowWidget)) | Skin.HasSetting(HideWidgetDetailsPanel)]">Conditional</animation>
        <animation effect="slide" delay="0" start="0" end="0,-410" time="200" condition="[[[String.IsEqual(Skin.String(HomeLayout),1) | String.IsEqual(Skin.String(HomeLayout),1small)] + !Skin.HasSetting(LowerWidgets)] | [String.IsEqual(Skin.String(HomeLayout),2) | String.IsEqual(Skin.String(HomeLayout),2small)]] + Skin.HasSetting(AutoShowWidgets) + [String.IsEmpty(Window(Home).Property(ShowWidget)) | Skin.HasSetting(HideWidgetDetailsPanel)]">Conditional</animation>
        <animation effect="slide" delay="0" start="0" end="0,-300" time="200" condition="!String.IsEqual(Skin.AspectRatio,16:10) + [String.IsEqual(Skin.String(HomeLayout),1) | String.IsEqual(Skin.String(HomeLayout),1small)] + Skin.HasSetting(LowerWidgets) + Skin.HasSetting(AutoShowWidgets) + [String.IsEmpty(Window(Home).Property(ShowWidget)) | Skin.HasSetting(HideWidgetDetailsPanel)]">Conditional</animation>
        <animation effect="slide" delay="0" start="0" end="0,-180" time="200" condition="String.IsEqual(Skin.AspectRatio,16:10) + [String.IsEqual(Skin.String(HomeLayout),1) | String.IsEqual(Skin.String(HomeLayout),1small)] + Skin.HasSetting(LowerWidgets) + Skin.HasSetting(AutoShowWidgets) + [String.IsEmpty(Window(Home).Property(ShowWidget)) | Skin.HasSetting(HideWidgetDetailsPanel)]">Conditional</animation>

        <animation effect="slide" start="0" end="140" time="0" condition="Skin.HasSetting(WidgetAlignRight) + $EXP[IsVerticalLayout] + Skin.HasSetting(VerticalHomeLargeWidget) + !Integer.IsGreater(Container($PARAM[widgetid]).NumItems,4)">Conditional</animation>
        <animation effect="slide" start="0" end="261" time="0" condition="Skin.HasSetting(WidgetAlignRight) + !Integer.IsGreater(Container($PARAM[widgetid]).NumItems,6) + !$EXP[IsVerticalLayout]">Conditional</animation>
        <animation effect="slide" start="0" end="261" time="0" condition="Skin.HasSetting(WidgetAlignRight) + !Integer.IsGreater(Container($PARAM[widgetid]).NumItems,5) + !$EXP[IsVerticalLayout]">Conditional</animation>
        <animation effect="slide" start="0" end="261" time="0" condition="Skin.HasSetting(WidgetAlignRight) + !Integer.IsGreater(Container($PARAM[widgetid]).NumItems,4)">Conditional</animation>
        <animation effect="slide" start="0" end="261" time="0" condition="Skin.HasSetting(WidgetAlignRight) + !Integer.IsGreater(Container($PARAM[widgetid]).NumItems,3)">Conditional</animation>
        <animation effect="slide" start="0" end="261" time="0" condition="Skin.HasSetting(WidgetAlignRight) + !Integer.IsGreater(Container($PARAM[widgetid]).NumItems,2)">Conditional</animation>
        <animation effect="slide" start="0" end="261" time="0" condition="Skin.HasSetting(WidgetAlignRight) + !Integer.IsGreater(Container($PARAM[widgetid]).NumItems,1)">Conditional</animation>
    </include>

    <include name="widget_layout_posterdetails_animation">
        <animation effect="slide" delay="0" start="0" end="0,-70" time="200" condition="!String.IsEqual(Skin.AspectRatio,16:10) + String.Contains(Skin.String(HomeLayout),horizontal) + Skin.HasSetting(AutoShowWidgets) + [String.IsEmpty(Window(Home).Property(ShowWidget)) | Skin.HasSetting(HideWidgetDetailsPanel)]">Conditional</animation>
        <animation effect="slide" delay="0" start="0" end="0,50" time="200" condition="String.IsEqual(Skin.AspectRatio,16:10) + String.Contains(Skin.String(HomeLayout),horizontal) + Skin.HasSetting(AutoShowWidgets) + [String.IsEmpty(Window(Home).Property(ShowWidget)) | Skin.HasSetting(HideWidgetDetailsPanel)]">Conditional</animation>
        <animation effect="slide" delay="0" start="0" end="0,-170" time="200" condition="String.Contains(Skin.String(HomeLayout),simplehor) + Skin.HasSetting(AutoShowWidgets) + [String.IsEmpty(Window(Home).Property(ShowWidget)) | Skin.HasSetting(HideWidgetDetailsPanel)]">Conditional</animation>
        <animation effect="slide" delay="0" start="0" end="0,-370" time="200" condition="[[[String.IsEqual(Skin.String(HomeLayout),1) | String.IsEqual(Skin.String(HomeLayout),1small)] + !Skin.HasSetting(LowerWidgets)] | [String.IsEqual(Skin.String(HomeLayout),2) | String.IsEqual(Skin.String(HomeLayout),2small)]] + Skin.HasSetting(AutoShowWidgets) + [String.IsEmpty(Window(Home).Property(ShowWidget)) | Skin.HasSetting(HideWidgetDetailsPanel)]">Conditional</animation>
        <animation effect="slide" delay="0" start="0" end="0,-300" time="200" condition="!String.IsEqual(Skin.AspectRatio,16:10) + [String.IsEqual(Skin.String(HomeLayout),1) | String.IsEqual(Skin.String(HomeLayout),1small)] + Skin.HasSetting(LowerWidgets) + Skin.HasSetting(AutoShowWidgets) + [String.IsEmpty(Window(Home).Property(ShowWidget)) | Skin.HasSetting(HideWidgetDetailsPanel)]">Conditional</animation>
        <animation effect="slide" delay="0" start="0" end="0,-180" time="200" condition="String.IsEqual(Skin.AspectRatio,16:10) + [String.IsEqual(Skin.String(HomeLayout),1) | String.IsEqual(Skin.String(HomeLayout),1small)] + Skin.HasSetting(LowerWidgets) + Skin.HasSetting(AutoShowWidgets) + [String.IsEmpty(Window(Home).Property(ShowWidget)) | Skin.HasSetting(HideWidgetDetailsPanel)]">Conditional</animation>
    </include>

    <include name="widget_layout_smallposter_animation">
        <animation effect="slide" delay="0" start="0" end="0,57" time="200" condition="!String.IsEqual(Skin.AspectRatio,16:10) + String.Contains(Skin.String(HomeLayout),horizontal) + Skin.HasSetting(AutoShowWidgets) + [String.IsEmpty(Window(Home).Property(ShowWidget)) | Skin.HasSetting(HideWidgetDetailsPanel)]">Conditional</animation>
        <animation effect="slide" delay="0" start="0" end="0,177" time="200" condition="String.IsEqual(Skin.AspectRatio,16:10) + String.Contains(Skin.String(HomeLayout),horizontal) + Skin.HasSetting(AutoShowWidgets) + [String.IsEmpty(Window(Home).Property(ShowWidget)) | Skin.HasSetting(HideWidgetDetailsPanel)]">Conditional</animation>
        <animation effect="slide" delay="0" start="0" end="0,-43" time="200" condition="String.Contains(Skin.String(HomeLayout),simplehor) + Skin.HasSetting(AutoShowWidgets) + [String.IsEmpty(Window(Home).Property(ShowWidget)) | Skin.HasSetting(HideWidgetDetailsPanel)]">Conditional</animation>
        <animation effect="slide" delay="0" start="0" end="0,-370" time="200" condition="[[[String.IsEqual(Skin.String(HomeLayout),1) | String.IsEqual(Skin.String(HomeLayout),1small)] + !Skin.HasSetting(LowerWidgets)] | [String.IsEqual(Skin.String(HomeLayout),2) | String.IsEqual(Skin.String(HomeLayout),2small)]] + Skin.HasSetting(AutoShowWidgets) + [String.IsEmpty(Window(Home).Property(ShowWidget)) | Skin.HasSetting(HideWidgetDetailsPanel)]">Conditional</animation>
        <animation effect="slide" delay="0" start="0" end="0,-173" time="200" condition="!String.IsEqual(Skin.AspectRatio,16:10) + [String.IsEqual(Skin.String(HomeLayout),1) | String.IsEqual(Skin.String(HomeLayout),1small)] + Skin.HasSetting(LowerWidgets) + Skin.HasSetting(AutoShowWidgets) + [String.IsEmpty(Window(Home).Property(ShowWidget)) | Skin.HasSetting(HideWidgetDetailsPanel)]">Conditional</animation>
        <animation effect="slide" delay="0" start="0" end="0,-53" time="200" condition="String.IsEqual(Skin.AspectRatio,16:10) + [String.IsEqual(Skin.String(HomeLayout),1) | String.IsEqual(Skin.String(HomeLayout),1small)] + Skin.HasSetting(LowerWidgets) + Skin.HasSetting(AutoShowWidgets) + [String.IsEmpty(Window(Home).Property(ShowWidget)) | Skin.HasSetting(HideWidgetDetailsPanel)]">Conditional</animation>
    </include>

    <include name="widget_layout_square_animation">
        <animation effect="slide" delay="0" start="0" end="0,65" time="200" condition="!String.IsEqual(Skin.AspectRatio,16:10) + String.Contains(Skin.String(HomeLayout),horizontal) + Skin.HasSetting(AutoShowWidgets) + [String.IsEmpty(Window(Home).Property(ShowWidget)) | Skin.HasSetting(HideWidgetDetailsPanel)]">Conditional</animation>
        <animation effect="slide" delay="0" start="0" end="0,185" time="200" condition="String.IsEqual(Skin.AspectRatio,16:10) + String.Contains(Skin.String(HomeLayout),horizontal) + Skin.HasSetting(AutoShowWidgets) + [String.IsEmpty(Window(Home).Property(ShowWidget)) | Skin.HasSetting(HideWidgetDetailsPanel)]">Conditional</animation>
        <animation effect="slide" delay="0" start="0" end="0,-35" time="200" condition="String.Contains(Skin.String(HomeLayout),simplehor) + Skin.HasSetting(AutoShowWidgets) + [String.IsEmpty(Window(Home).Property(ShowWidget)) | Skin.HasSetting(HideWidgetDetailsPanel)]">Conditional</animation>
        <animation effect="slide" delay="0" start="0" end="0,-370" time="200" condition="[[[String.IsEqual(Skin.String(HomeLayout),1) | String.IsEqual(Skin.String(HomeLayout),1small)] + !Skin.HasSetting(LowerWidgets)] | [String.IsEqual(Skin.String(HomeLayout),2) | String.IsEqual(Skin.String(HomeLayout),2small)]] + Skin.HasSetting(AutoShowWidgets) + [String.IsEmpty(Window(Home).Property(ShowWidget)) | Skin.HasSetting(HideWidgetDetailsPanel)]">Conditional</animation>
        <animation effect="slide" delay="0" start="0" end="0,-165" time="200" condition="!String.IsEqual(Skin.AspectRatio,16:10) + [String.IsEqual(Skin.String(HomeLayout),1) | String.IsEqual(Skin.String(HomeLayout),1small)] + Skin.HasSetting(LowerWidgets) + Skin.HasSetting(AutoShowWidgets) + [String.IsEmpty(Window(Home).Property(ShowWidget)) | Skin.HasSetting(HideWidgetDetailsPanel)]">Conditional</animation>
        <animation effect="slide" delay="0" start="0" end="0,-45" time="200" condition="String.IsEqual(Skin.AspectRatio,16:10) + [String.IsEqual(Skin.String(HomeLayout),1) | String.IsEqual(Skin.String(HomeLayout),1small)] + Skin.HasSetting(LowerWidgets) + Skin.HasSetting(AutoShowWidgets) + [String.IsEmpty(Window(Home).Property(ShowWidget)) | Skin.HasSetting(HideWidgetDetailsPanel)]">Conditional</animation>

        <animation effect="slide" start="0" end="140" time="0" condition="Skin.HasSetting(WidgetAlignRight) + $EXP[IsVerticalLayout] + Skin.HasSetting(VerticalHomeLargeWidget) + !Integer.IsGreater(Container($PARAM[widgetid]).NumItems,4)">Conditional</animation>
        <animation effect="slide" start="0" end="262" time="0" condition="Skin.HasSetting(WidgetAlignRight) + !Integer.IsGreater(Container($PARAM[widgetid]).NumItems,6) + !$EXP[IsVerticalLayout]">Conditional</animation>
        <animation effect="slide" start="0" end="262" time="0" condition="Skin.HasSetting(WidgetAlignRight) + !Integer.IsGreater(Container($PARAM[widgetid]).NumItems,5) + !$EXP[IsVerticalLayout]">Conditional</animation>
        <animation effect="slide" start="0" end="262" time="0" condition="Skin.HasSetting(WidgetAlignRight) +  !Integer.IsGreater(Container($PARAM[widgetid]).NumItems,4)">Conditional</animation>
        <animation effect="slide" start="0" end="262" time="0" condition="Skin.HasSetting(WidgetAlignRight) + !Integer.IsGreater(Container($PARAM[widgetid]).NumItems,3)">Conditional</animation>
        <animation effect="slide" start="0" end="262" time="0" condition="Skin.HasSetting(WidgetAlignRight) + !Integer.IsGreater(Container($PARAM[widgetid]).NumItems,2)">Conditional</animation>
        <animation effect="slide" start="0" end="262" time="0" condition="Skin.HasSetting(WidgetAlignRight) + !Integer.IsGreater(Container($PARAM[widgetid]).NumItems,1)">Conditional</animation>
    </include>

    <include name="widget_layout_minisquare_animation">
        <animation effect="slide" delay="0" start="0" end="0,180" time="200" condition="!String.IsEqual(Skin.AspectRatio,16:10) + String.Contains(Skin.String(HomeLayout),horizontal) + Skin.HasSetting(AutoShowWidgets) + [String.IsEmpty(Window(Home).Property(ShowWidget)) | Skin.HasSetting(HideWidgetDetailsPanel)]">Conditional</animation>
        <animation effect="slide" delay="0" start="0" end="0,300" time="200" condition="String.IsEqual(Skin.AspectRatio,16:10) + String.Contains(Skin.String(HomeLayout),horizontal) + Skin.HasSetting(AutoShowWidgets) + [String.IsEmpty(Window(Home).Property(ShowWidget)) | Skin.HasSetting(HideWidgetDetailsPanel)]">Conditional</animation>
        <animation effect="slide" delay="0" start="0" end="0,79" time="200" condition="String.Contains(Skin.String(HomeLayout),simplehor) + Skin.HasSetting(AutoShowWidgets) + [String.IsEmpty(Window(Home).Property(ShowWidget)) | Skin.HasSetting(HideWidgetDetailsPanel)]">Conditional</animation>
        <animation effect="slide" delay="0" start="0" end="0,-370" time="200" condition="[[[String.IsEqual(Skin.String(HomeLayout),1) | String.IsEqual(Skin.String(HomeLayout),1small)] + !Skin.HasSetting(LowerWidgets)] | [String.IsEqual(Skin.String(HomeLayout),2) | String.IsEqual(Skin.String(HomeLayout),2small)]] + Skin.HasSetting(AutoShowWidgets) + [String.IsEmpty(Window(Home).Property(ShowWidget)) | Skin.HasSetting(HideWidgetDetailsPanel)]">Conditional</animation>
        <animation effect="slide" delay="0" start="0" end="0,-51" time="200" condition="!String.IsEqual(Skin.AspectRatio,16:10) + [String.IsEqual(Skin.String(HomeLayout),1) | String.IsEqual(Skin.String(HomeLayout),1small)] + Skin.HasSetting(LowerWidgets) + Skin.HasSetting(AutoShowWidgets) + [String.IsEmpty(Window(Home).Property(ShowWidget)) | Skin.HasSetting(HideWidgetDetailsPanel)]">Conditional</animation>
        <animation effect="slide" delay="0" start="0" end="0,69" time="200" condition="String.IsEqual(Skin.AspectRatio,16:10) + [String.IsEqual(Skin.String(HomeLayout),1) | String.IsEqual(Skin.String(HomeLayout),1small)] + Skin.HasSetting(LowerWidgets) + Skin.HasSetting(AutoShowWidgets) + [String.IsEmpty(Window(Home).Property(ShowWidget)) | Skin.HasSetting(HideWidgetDetailsPanel)]">Conditional</animation>

        <animation effect="slide" start="0" end="130" time="0" condition="Skin.HasSetting(WidgetAlignRight) + !Integer.IsGreater(Container($PARAM[widgetid]).NumItems,13) + !$EXP[IsVerticalLayout]">Conditional</animation>
        <animation effect="slide" start="0" end="130" time="0" condition="Skin.HasSetting(WidgetAlignRight) + !Integer.IsGreater(Container($PARAM[widgetid]).NumItems,12) + !$EXP[IsVerticalLayout]">Conditional</animation>
        <animation effect="slide" start="0" end="130" time="0" condition="Skin.HasSetting(WidgetAlignRight) + !Integer.IsGreater(Container($PARAM[widgetid]).NumItems,11) + !$EXP[IsVerticalLayout]">Conditional</animation>
        <animation effect="slide" start="0" end="130" time="0" condition="Skin.HasSetting(WidgetAlignRight) + !Integer.IsGreater(Container($PARAM[widgetid]).NumItems,10) + !$EXP[IsVerticalLayout]">Conditional</animation>
        <animation effect="slide" start="0" end="130" time="0" condition="Skin.HasSetting(WidgetAlignRight) + !Integer.IsGreater(Container($PARAM[widgetid]).NumItems,9)">Conditional</animation>
        <animation effect="slide" start="0" end="130" time="0" condition="Skin.HasSetting(WidgetAlignRight) + !Integer.IsGreater(Container($PARAM[widgetid]).NumItems,8)">Conditional</animation>
        <animation effect="slide" start="0" end="130" time="0" condition="Skin.HasSetting(WidgetAlignRight) + !Integer.IsGreater(Container($PARAM[widgetid]).NumItems,7)">Conditional</animation>
        <animation effect="slide" start="0" end="130" time="0" condition="Skin.HasSetting(WidgetAlignRight) + !Integer.IsGreater(Container($PARAM[widgetid]).NumItems,6)">Conditional</animation>
        <animation effect="slide" start="0" end="130" time="0" condition="Skin.HasSetting(WidgetAlignRight) + !Integer.IsGreater(Container($PARAM[widgetid]).NumItems,5)">Conditional</animation>
        <animation effect="slide" start="0" end="130" time="0" condition="Skin.HasSetting(WidgetAlignRight) + !Integer.IsGreater(Container($PARAM[widgetid]).NumItems,4)">Conditional</animation>
        <animation effect="slide" start="0" end="130" time="0" condition="Skin.HasSetting(WidgetAlignRight) + !Integer.IsGreater(Container($PARAM[widgetid]).NumItems,3)">Conditional</animation>
        <animation effect="slide" start="0" end="130" time="0" condition="Skin.HasSetting(WidgetAlignRight) + !Integer.IsGreater(Container($PARAM[widgetid]).NumItems,2)">Conditional</animation>
        <animation effect="slide" start="0" end="130" time="0" condition="Skin.HasSetting(WidgetAlignRight) + !Integer.IsGreater(Container($PARAM[widgetid]).NumItems,1)">Conditional</animation>
    </include>

    <include name="snow">
        <control type="group">
            <visible>Skin.HasSetting(enablesnow)</visible>
            <control type="group">
                <posx>-100</posx>
                <animation effect="rotate" end="20" time="9000" delay="300" condition="true">Conditional</animation>
                <control type="image">
                    <posx>40</posx>
                    <posy>-180</posy>
                    <width>40</width>
                    <height>40</height>
                    <texture>special://skin/extras/media/snow/snow.png</texture>
                    <aspectratio scalediffuse="false">keep</aspectratio>
                    <animation effect="slide" start="0,0" end="0,820" time="11000" delay="1600" reversible="false" loop="true" condition="true">Conditional</animation>
                    <animation effect="slide" start="40,0" end="-40,0" time="5300" delay="300" reversible="false" condition="true">Conditional</animation>
                    <colordiffuse>C2FFFFFF</colordiffuse>
                </control>
                <control type="image">
                    <posx>100</posx>
                    <posy>-100</posy>
                    <width>32</width>
                    <height>32</height>
                    <texture>special://skin/extras/media/snow/snow1.png</texture>
                    <aspectratio scalediffuse="false">keep</aspectratio>
                    <animation effect="slide" start="0,0" end="0,1020" time="8000" delay="0" reversible="false" loop="true" condition="true">Conditional</animation>
                    <animation effect="slide" start="40,0" end="-20,0" time="3200" delay="300" reversible="false" condition="true">Conditional</animation>
                </control>
                <control type="image">
                    <posx>1000</posx>
                    <posy>-0</posy>
                    <width>30</width>
                    <height>30</height>
                    <texture>special://skin/extras/media/snow/snow2.png</texture>
                    <aspectratio scalediffuse="false">keep</aspectratio>
                    <animation effect="slide" start="0,0" end="0,1020" time="8000" delay="0" reversible="false" loop="true" condition="true">Conditional</animation>
                    <animation effect="slide" start="40,0" end="-20,0" time="3200" delay="300" reversible="false" condition="true">Conditional</animation>
                </control>
                <control type="image">
                    <posx>200</posx>
                    <posy>-40</posy>
                    <width>20</width>
                    <height>20</height>
                    <texture>special://skin/extras/media/snow/snow2.png</texture>
                    <aspectratio scalediffuse="false">keep</aspectratio>
                    <animation effect="slide" start="0,0" end="0,1120" time="12000" delay="1300" reversible="false" loop="true" condition="true">Conditional</animation>
                    <animation effect="slide" start="50,0" end="-10,0" time="4300" delay="220" reversible="false" condition="true">Conditional</animation>
                </control>
                <control type="image">
                    <posx>260</posx>
                    <posy>-80</posy>
                    <width>50</width>
                    <height>50</height>
                    <texture>special://skin/extras/media/snow/snow.png</texture>
                    <aspectratio scalediffuse="false">keep</aspectratio>
                    <animation effect="slide" start="0,0" end="0,1020" time="13000" delay="2200" reversible="false" loop="true" condition="true">Conditional</animation>
                    <animation effect="slide" start="40,0" end="-30,0" time="4000" delay="200" reversible="false" condition="true">Conditional</animation>
                </control>
                <control type="image">
                    <posx>390</posx>
                    <posy>-210</posy>
                    <width>40</width>
                    <height>40</height>
                    <texture>special://skin/extras/media/snow/snow2.png</texture>
                    <aspectratio scalediffuse="false">keep</aspectratio>
                    <animation effect="slide" start="0,0" end="0,1120" time="13000" delay="600" reversible="false" loop="true" condition="true">Conditional</animation>
                    <animation effect="slide" start="20,0" end="-60,0" time="5300" delay="300" reversible="false" condition="true">Conditional</animation>
                    <colordiffuse>C2FFFFFF</colordiffuse>
                </control>
            </control>
            <control type="group">
                <posx>100</posx>
                <animation effect="rotate" start="20" end="40" time="9000" delay="800" condition="true">Conditional</animation>
                <control type="image">
                    <posx>80</posx>
                    <posy>-100</posy>
                    <width>20</width>
                    <height>20</height>
                    <texture>special://skin/extras/media/snow/snow3.png</texture>
                    <aspectratio scalediffuse="false">keep</aspectratio>
                    <animation effect="slide" start="0,0" end="0,820" time="8000" delay="1000" reversible="false" loop="true" condition="true">Conditional</animation>
                    <animation effect="slide" start="40,0" end="-20,0" time="3200" delay="300" reversible="false" condition="true">Conditional</animation>
                </control>
                <control type="image">
                    <posx>240</posx>
                    <posy>-40</posy>
                    <width>50</width>
                    <height>50</height>
                    <texture>special://skin/extras/media/snow/snow5.png</texture>
                    <aspectratio scalediffuse="false">keep</aspectratio>
                    <animation effect="slide" start="0,0" end="0,1020" time="8000" delay="1800" reversible="false" loop="true" condition="true">Conditional</animation>
                    <animation effect="slide" start="40,0" end="-30,0" time="4000" delay="200" reversible="false" condition="true">Conditional</animation>
                </control>
                <control type="image">
                    <posx>390</posx>
                    <posy>-210</posy>
                    <width>30</width>
                    <height>30</height>
                    <texture>special://skin/extras/media/snow/snow4.png</texture>
                    <aspectratio scalediffuse="false">keep</aspectratio>
                    <animation effect="slide" start="0,0" end="0,1120" time="12000" delay="1500" reversible="false" loop="true" condition="true">Conditional</animation>
                    <animation effect="slide" start="20,0" end="-60,0" time="5300" delay="300" reversible="false" condition="true">Conditional</animation>
                    <colordiffuse>C2FFFFFF</colordiffuse>
                </control>
            </control>
            <control type="group">
                <posx>600</posx>
                <posy>-200</posy>
                <animation effect="rotate" end="15" time="7000" delay="500" condition="true">Conditional</animation>
                <control type="image">
                    <posx>20</posx>
                    <posy>-60</posy>
                    <width>40</width>
                    <height>40</height>
                    <texture>special://skin/extras/media/snow/snow3.png</texture>
                    <aspectratio scalediffuse="false">keep</aspectratio>
                    <animation effect="slide" start="0,0" end="0,1120" time="12000" delay="1300" reversible="false" loop="true" condition="true">Conditional</animation>
                    <animation effect="slide" start="50,0" end="-10,0" time="4300" delay="220" reversible="false" condition="true">Conditional</animation>
                </control>
                <control type="image">
                    <posx>100</posx>
                    <posy>-190</posy>
                    <width>32</width>
                    <height>32</height>
                    <texture>special://skin/extras/media/snow/snow3.png</texture>
                    <aspectratio scalediffuse="false">keep</aspectratio>
                    <animation effect="slide" start="0,0" end="0,1020" time="9000" delay="2000" reversible="false" loop="true" condition="true">Conditional</animation>
                    <animation effect="slide" start="40,0" end="-50,0" time="3200" delay="300" reversible="false" condition="true">Conditional</animation>
                </control>
                <control type="image">
                    <posx>260</posx>
                    <posy>-80</posy>
                    <width>50</width>
                    <height>50</height>
                    <texture>special://skin/extras/media/snow/snow.png</texture>
                    <aspectratio scalediffuse="false">keep</aspectratio>
                    <animation effect="slide" start="0,0" end="0,1120" time="8000" delay="2300" reversible="false" loop="true" condition="true">Conditional</animation>
                    <animation effect="slide" start="40,0" end="-30,0" time="4000" delay="200" reversible="false" condition="true">Conditional</animation>
                </control>
                <control type="image">
                    <posx>660</posx>
                    <posy>-10</posy>
                    <width>32</width>
                    <height>32</height>
                    <texture>special://skin/extras/media/snow/snow5.png</texture>
                    <aspectratio scalediffuse="false">keep</aspectratio>
                    <animation effect="slide" start="0,0" end="0,1120" time="8000" delay="2300" reversible="false" loop="true" condition="true">Conditional</animation>
                    <animation effect="slide" start="40,0" end="-30,0" time="4000" delay="200" reversible="false" condition="true">Conditional</animation>
                </control>
                <control type="image">
                    <posx>330</posx>
                    <posy>-110</posy>
                    <width>40</width>
                    <height>40</height>
                    <texture>special://skin/extras/media/snow/snow.png</texture>
                    <aspectratio scalediffuse="false">keep</aspectratio>
                    <animation effect="slide" start="0,0" end="0,1020" time="11000" delay="1600" reversible="false" loop="true" condition="true">Conditional</animation>
                    <animation effect="slide" start="40,0" end="-40,0" time="5300" delay="300" reversible="false" condition="true">Conditional</animation>
                    <colordiffuse>C2FFFFFF</colordiffuse>
                </control>
                <control type="image">
                    <posx>390</posx>
                    <posy>-110</posy>
                    <width>30</width>
                    <height>30</height>
                    <texture>special://skin/extras/media/snow/snow4.png</texture>
                    <aspectratio scalediffuse="false">keep</aspectratio>
                    <animation effect="slide" start="0,0" end="0,820" time="12000" delay="2200" reversible="false" loop="true" condition="true">Conditional</animation>
                    <animation effect="slide" start="-20,0" end="50,0" time="3300" delay="300" reversible="false" condition="true">Conditional</animation>
                    <colordiffuse>C2FFFFFF</colordiffuse>
                </control>
            </control>
            <control type="group">
                <posx>900</posx>
                <animation effect="rotate" start="15" end="30" time="12000" delay="300" condition="true">Conditional</animation>
                <control type="image">
                    <posx>100</posx>
                    <posy>-200</posy>
                    <width>20</width>
                    <height>20</height>
                    <texture>special://skin/extras/media/snow/snow.png</texture>
                    <aspectratio scalediffuse="false">keep</aspectratio>
                    <animation effect="slide" start="0,0" end="0,1020" time="8000" delay="3000" reversible="false" loop="true" condition="true">Conditional</animation>
                    <animation effect="slide" start="40,0" end="-20,0" time="3200" delay="300" reversible="false" condition="true">Conditional</animation>
                </control>
                <control type="image">
                    <posx>1100</posx>
                    <posy>-40</posy>
                    <width>40</width>
                    <height>40</height>
                    <texture>special://skin/extras/media/snow/snow2.png</texture>
                    <aspectratio scalediffuse="false">keep</aspectratio>
                    <animation effect="slide" start="0,0" end="0,1120" time="13000" delay="1300" reversible="false" loop="true" condition="true">Conditional</animation>
                    <animation effect="slide" start="50,0" end="-10,0" time="4300" delay="220" reversible="false" condition="true">Conditional</animation>
                </control>
                <control type="image">
                    <posx>260</posx>
                    <posy>-80</posy>
                    <width>50</width>
                    <height>50</height>
                    <texture>special://skin/extras/media/snow/snow5.png</texture>
                    <aspectratio scalediffuse="false">keep</aspectratio>
                    <animation effect="slide" start="0,0" end="0,820" time="8000" delay="3300" reversible="false" loop="true" condition="true">Conditional</animation>
                    <animation effect="slide" start="40,0" end="-30,0" time="4000" delay="200" reversible="false" condition="true">Conditional</animation>
                </control>
                <control type="image">
                    <posx>390</posx>
                    <posy>-110</posy>
                    <width>20</width>
                    <height>20</height>
                    <texture>special://skin/extras/media/snow/snow2.png</texture>
                    <aspectratio scalediffuse="false">keep</aspectratio>
                    <animation effect="slide" start="0,0" end="0,1020" time="12000" delay="3500" reversible="false" loop="true" condition="true">Conditional</animation>
                    <animation effect="slide" start="20,0" end="-60,0" time="5300" delay="300" reversible="false" condition="true">Conditional</animation>
                    <colordiffuse>C2FFFFFF</colordiffuse>
                </control>
            </control>

            <control type="group">
                <posx>700</posx>
                <posy>80</posy>

                <control type="group">
                    <posx>-100</posx>
                    <animation effect="rotate" end="20" time="9000" delay="300" condition="true">Conditional</animation>
                    <control type="image">
                        <posx>40</posx>
                        <posy>-180</posy>
                        <width>40</width>
                        <height>40</height>
                        <texture>special://skin/extras/media/snow/snow.png</texture>
                        <aspectratio scalediffuse="false">keep</aspectratio>
                        <animation effect="slide" start="0,0" end="0,820" time="11000" delay="1600" reversible="false" loop="true" condition="true">Conditional</animation>
                        <animation effect="slide" start="40,0" end="-40,0" time="5300" delay="300" reversible="false" condition="true">Conditional</animation>
                        <colordiffuse>C2FFFFFF</colordiffuse>
                    </control>
                    <control type="image">
                        <posx>100</posx>
                        <posy>-100</posy>
                        <width>32</width>
                        <height>32</height>
                        <texture>special://skin/extras/media/snow/snow1.png</texture>
                        <aspectratio scalediffuse="false">keep</aspectratio>
                        <animation effect="slide" start="0,0" end="0,1020" time="8000" delay="0" reversible="false" loop="true" condition="true">Conditional</animation>
                        <animation effect="slide" start="40,0" end="-20,0" time="3200" delay="300" reversible="false" condition="true">Conditional</animation>
                    </control>
                    <control type="image">
                        <posx>200</posx>
                        <posy>-40</posy>
                        <width>40</width>
                        <height>40</height>
                        <texture>special://skin/extras/media/snow/snow5.png</texture>
                        <aspectratio scalediffuse="false">keep</aspectratio>
                        <animation effect="slide" start="0,0" end="0,1120" time="12000" delay="1300" reversible="false" loop="true" condition="true">Conditional</animation>
                        <animation effect="slide" start="50,0" end="-10,0" time="4300" delay="220" reversible="false" condition="true">Conditional</animation>
                    </control>
                    <control type="image">
                        <posx>260</posx>
                        <posy>-80</posy>
                        <width>50</width>
                        <height>50</height>
                        <texture>special://skin/extras/media/snow/snow3.png</texture>
                        <aspectratio scalediffuse="false">keep</aspectratio>
                        <animation effect="slide" start="0,0" end="0,1020" time="13000" delay="2200" reversible="false" loop="true" condition="true">Conditional</animation>
                        <animation effect="slide" start="40,0" end="-30,0" time="4000" delay="200" reversible="false" condition="true">Conditional</animation>
                    </control>
                    <control type="image">
                        <posx>390</posx>
                        <posy>-210</posy>
                        <width>40</width>
                        <height>40</height>
                        <texture>special://skin/extras/media/snow/snow.png</texture>
                        <aspectratio scalediffuse="false">keep</aspectratio>
                        <animation effect="slide" start="0,0" end="0,1120" time="13000" delay="600" reversible="false" loop="true" condition="true">Conditional</animation>
                        <animation effect="slide" start="20,0" end="-60,0" time="5300" delay="300" reversible="false" condition="true">Conditional</animation>
                        <colordiffuse>C2FFFFFF</colordiffuse>
                    </control>
                </control>
                <control type="group">
                    <posx>100</posx>
                    <animation effect="rotate" start="20" end="40" time="9000" delay="800" condition="true">Conditional</animation>
                    <control type="image">
                        <posx>80</posx>
                        <posy>-100</posy>
                        <width>20</width>
                        <height>20</height>
                        <texture>special://skin/extras/media/snow/snow4.png</texture>
                        <aspectratio scalediffuse="false">keep</aspectratio>
                        <animation effect="slide" start="0,0" end="0,820" time="8000" delay="1000" reversible="false" loop="true" condition="true">Conditional</animation>
                        <animation effect="slide" start="40,0" end="-20,0" time="3200" delay="300" reversible="false" condition="true">Conditional</animation>
                    </control>
                    <control type="image">
                        <posx>240</posx>
                        <posy>-40</posy>
                        <width>50</width>
                        <height>50</height>
                        <texture>special://skin/extras/media/snow/snow4.png</texture>
                        <aspectratio scalediffuse="false">keep</aspectratio>
                        <animation effect="slide" start="0,0" end="0,1020" time="8000" delay="1800" reversible="false" loop="true" condition="true">Conditional</animation>
                        <animation effect="slide" start="40,0" end="-30,0" time="4000" delay="200" reversible="false" condition="true">Conditional</animation>
                    </control>
                    <control type="image">
                        <posx>390</posx>
                        <posy>-210</posy>
                        <width>30</width>
                        <height>30</height>
                        <texture>special://skin/extras/media/snow/snow.png</texture>
                        <aspectratio scalediffuse="false">keep</aspectratio>
                        <animation effect="slide" start="0,0" end="0,1120" time="12000" delay="1500" reversible="false" loop="true" condition="true">Conditional</animation>
                        <animation effect="slide" start="20,0" end="-60,0" time="5300" delay="300" reversible="false" condition="true">Conditional</animation>
                        <colordiffuse>C2FFFFFF</colordiffuse>
                    </control>
                </control>
                <control type="group">
                    <posx>600</posx>
                    <posy>-200</posy>
                    <animation effect="rotate" end="15" time="7000" delay="500" condition="true">Conditional</animation>
                    <control type="image">
                        <posx>20</posx>
                        <posy>-60</posy>
                        <width>24</width>
                        <height>24</height>
                        <texture>special://skin/extras/media/snow/snow1.png</texture>
                        <aspectratio scalediffuse="false">keep</aspectratio>
                        <animation effect="slide" start="0,0" end="0,1120" time="12000" delay="1300" reversible="false" loop="true" condition="true">Conditional</animation>
                        <animation effect="slide" start="50,0" end="-10,0" time="4300" delay="220" reversible="false" condition="true">Conditional</animation>
                    </control>
                    <control type="image">
                        <posx>100</posx>
                        <posy>-190</posy>
                        <width>32</width>
                        <height>32</height>
                        <texture>special://skin/extras/media/snow/snow5.png</texture>
                        <aspectratio scalediffuse="false">keep</aspectratio>
                        <animation effect="slide" start="0,0" end="0,1020" time="9000" delay="2000" reversible="false" loop="true" condition="true">Conditional</animation>
                        <animation effect="slide" start="40,0" end="-50,0" time="3200" delay="300" reversible="false" condition="true">Conditional</animation>
                    </control>
                    <control type="image">
                        <posx>260</posx>
                        <posy>-80</posy>
                        <width>50</width>
                        <height>50</height>
                        <texture>special://skin/extras/media/snow/snow3.png</texture>
                        <aspectratio scalediffuse="false">keep</aspectratio>
                        <animation effect="slide" start="0,0" end="0,1120" time="8000" delay="2300" reversible="false" loop="true" condition="true">Conditional</animation>
                        <animation effect="slide" start="40,0" end="-30,0" time="4000" delay="200" reversible="false" condition="true">Conditional</animation>
                    </control>
                    <control type="image">
                        <posx>330</posx>
                        <posy>-110</posy>
                        <width>40</width>
                        <height>40</height>
                        <texture>special://skin/extras/media/snow/snow3.png</texture>
                        <aspectratio scalediffuse="false">keep</aspectratio>
                        <animation effect="slide" start="0,0" end="0,1020" time="11000" delay="1600" reversible="false" loop="true" condition="true">Conditional</animation>
                        <animation effect="slide" start="40,0" end="-40,0" time="5300" delay="300" reversible="false" condition="true">Conditional</animation>
                        <colordiffuse>C2FFFFFF</colordiffuse>
                    </control>
                    <control type="image">
                        <posx>390</posx>
                        <posy>-110</posy>
                        <width>32</width>
                        <height>32</height>
                        <texture>special://skin/extras/media/snow/snow2.png</texture>
                        <aspectratio scalediffuse="false">keep</aspectratio>
                        <animation effect="slide" start="0,0" end="0,820" time="12000" delay="2200" reversible="false" loop="true" condition="true">Conditional</animation>
                        <animation effect="slide" start="-20,0" end="50,0" time="3300" delay="300" reversible="false" condition="true">Conditional</animation>
                        <colordiffuse>C2FFFFFF</colordiffuse>
                    </control>
                </control>
                <control type="group">
                    <posx>900</posx>
                    <animation effect="rotate" start="15" end="30" time="12000" delay="300" condition="true">Conditional</animation>
                    <control type="image">
                        <posx>100</posx>
                        <posy>-200</posy>
                        <width>20</width>
                        <height>20</height>
                        <texture>special://skin/extras/media/snow/snow.png</texture>
                        <aspectratio scalediffuse="false">keep</aspectratio>
                        <animation effect="slide" start="0,0" end="0,1020" time="8000" delay="3000" reversible="false" loop="true" condition="true">Conditional</animation>
                        <animation effect="slide" start="40,0" end="-20,0" time="3200" delay="300" reversible="false" condition="true">Conditional</animation>
                    </control>
                    <control type="image">
                        <posx>200</posx>
                        <posy>-40</posy>
                        <width>40</width>
                        <height>40</height>
                        <texture>special://skin/extras/media/snow/snow.png</texture>
                        <aspectratio scalediffuse="false">keep</aspectratio>
                        <animation effect="slide" start="0,0" end="0,1120" time="13000" delay="1300" reversible="false" loop="true" condition="true">Conditional</animation>
                        <animation effect="slide" start="50,0" end="-10,0" time="4300" delay="220" reversible="false" condition="true">Conditional</animation>
                    </control>
                    <control type="image">
                        <posx>260</posx>
                        <posy>-80</posy>
                        <width>50</width>
                        <height>50</height>
                        <texture>special://skin/extras/media/snow/snow1.png</texture>
                        <aspectratio scalediffuse="false">keep</aspectratio>
                        <animation effect="slide" start="0,0" end="0,920" time="8000" delay="3300" reversible="false" loop="true" condition="true">Conditional</animation>
                        <animation effect="slide" start="40,0" end="-30,0" time="4000" delay="200" reversible="false" condition="true">Conditional</animation>
                    </control>
                    <control type="image">
                        <posx>390</posx>
                        <posy>-110</posy>
                        <width>32</width>
                        <height>32</height>
                        <texture>special://skin/extras/media/snow/snow2.png</texture>
                        <aspectratio scalediffuse="false">keep</aspectratio>
                        <animation effect="slide" start="0,0" end="0,1020" time="12000" delay="3500" reversible="false" loop="true" condition="true">Conditional</animation>
                        <animation effect="slide" start="20,0" end="-60,0" time="5300" delay="300" reversible="false" condition="true">Conditional</animation>
                        <colordiffuse>C2FFFFFF</colordiffuse>
                    </control>
                </control>
            </control>
        </control>
    </include>

    <include name="AutoTrailerButton">
        <include content="AutoTrailerButtonDef">
            <param name="interval" value="$INFO[Skin.String(details_auto_trailer_interval)]" />
        </include>
    </include>

    <include name="AutoTrailerButtonDef">
        <control type="button">
            <visible>false</visible>
            <!-- movie -->
            <onfocus condition="!Player.HasVideo + Skin.HasSetting(DetailsAutoTrailer) + !String.IsEmpty(ListItem.DBID) + [String.IsEqual(ListItem.DBType,movie) | Container.Content(movies)] + !String.IsEqual(Window(Home).Property(LastPlayedTrailer),ListItem.DBID)">AlarmClock(trailer_delay,RunScript(script.skin.helper.service,ACTION=playtrailer,MODE=windowed,YOUTUBE=$INFO[Skin.String(AutoYoutubeTrailer)]),00:$PARAM[interval],silent)</onfocus>
            <!-- tvshow -->
            <onfocus condition="!Player.HasVideo  + Skin.HasSetting(DetailsAutoTrailer) + !String.IsEmpty(ListItem.DBID) + Skin.HasSetting(AllowTVShowsTrailer) + [String.IsEqual(ListItem.DBType,tvshow) | Container.Content(tvshows)] + !String.IsEqual(Window(Home).Property(LastPlayedTrailer),ListItem.DBID)">AlarmClock(trailer_delay,RunScript(script.bingie.helper,action=playtrailer,title=$VAR[TVShowTitle],tvshow=true,youtube=$INFO[Skin.String(AutoYoutubeTrailer)]),00:$PARAM[interval],silent)</onfocus>
            <!-- non-library -->
            <onfocus condition="!Player.HasVideo  + Skin.HasSetting(DetailsAutoTrailer) + String.IsEmpty(ListItem.DBID) + Skin.HasSetting(AllowAddonTrailer) + String.IsEqual(Skin.String(AutoYoutubeTrailer),true) + [String.IsEqual(ListItem.DBType,movie) | Container.Content(movies) | String.IsEqual(ListItem.DBType,tvshow) | Container.Content(tvshows)] + !String.IsEqual(Window(Home).Property(LastPlayedTrailer),ListItem.Label)">AlarmClock(trailer_delay,RunScript(script.bingie.helper,action=playtrailer,title=$INFO[ListItem.Title]),00:$PARAM[interval],silent)</onfocus>
            <onfocus condition="System.HasAlarm(trailer_delay) + !String.IsEmpty(ListItem.DBID)">SetProperty(LastPlayedTrailer, $INFO[ListItem.DBID],Home)</onfocus>
            <onfocus condition="System.HasAlarm(trailer_delay) + String.IsEmpty(ListItem.DBID)">SetProperty(LastPlayedTrailer, $INFO[ListItem.Label],Home)</onfocus>
            <onunfocus>ClearProperty(LastPlayedTrailer,Home)</onunfocus>
            <onunfocus condition="System.HasAlarm(trailer_delay)">CancelAlarm(trailer_delay,silent)</onunfocus>
            <onunfocus condition="$EXP[IsPlayingUnrecognizedContent]">PlayerControl(Stop)</onunfocus>
        </control>
    </include>

    <include name="HiddenHomeMenuButtonEnhancedHome">
        <control type="button">
            <visible>false</visible>
            <onfocus condition="!String.IsEmpty(Container(900).ListItem.Property(widgetPath.99))">SetProperty(SkinHelper.WidgetContainer,1508)</onfocus>
            <onfocus condition="String.IsEmpty(Container(900).ListItem.Property(widgetPath.99)) + !String.IsEmpty(Container(900).ListItem.Property(widgetPath))">$VAR[SetWidgetContainer]</onfocus>
            <onfocus condition="String.IsEmpty(Container(900).ListItem.property(widgetPath)) + String.IsEmpty(Container(900).ListItem.property(widgetPath.99))">ClearProperty(SkinHelper.WidgetContainer)</onfocus>
            <include content="WidgetsAutoRotate" condition="!String.IsEmpty(Skin.String(widgets_rotate_delay)) + !String.IsEqual(Skin.String(widgets_rotate),disabled)">
                <param name="interval" value="$INFO[Skin.String(widgets_rotate_delay)]" />
            </include>
            <include content="WidgetProperties">
                <param name="widgetid" value="999" />
            </include>
            <onunfocus>ClearProperty(SkinHelper.WidgetContainer)</onunfocus>
        </control>
    </include>

    <include name="HiddenHomeMenuButton">
        <control type="button">
            <visible>false</visible>
            <onfocus condition="String.IsEqual(Skin.String(HomeLayout),win10) | String.IsEqual(Skin.String(HomeLayout),bingie)">SetProperty(ShowViewSubMenu,show,Home)</onfocus>
            <onfocus condition="!String.IsEmpty(Container(900).ListItem.Property(widgetPath)) + !Skin.HasSetting(DisableAllWidgets) + [!String.IsEqual(Skin.String(HomeLayout),bingie) | Skin.HasSetting(UseSectionBackground)]">$VAR[SetWidgetContainer]</onfocus>
            <onfocus condition="!String.IsEmpty(Window.Property(SkinHelper.WidgetContainer)) + String.IsEmpty(Container(900).ListItem.property(widgetPath)) + [!String.IsEqual(Skin.String(HomeLayout),bingie) | Skin.HasSetting(UseSectionBackground)]">ClearProperty(SkinHelper.WidgetContainer)</onfocus>
            <onfocus condition="!Skin.HasSetting(DisableAllSubmenus)">SetProperty(submenupos,$INFO[Container(900).Position],Home)</onfocus>
            <onfocus condition="!Skin.HasSetting(DisableAllSubmenus) + Skin.HasSetting(AutoShowSubmenu) + Integer.IsGreater(Container(4445).NumItems,0) + !Control.IsVisible(4446)">SetProperty(submenu,show,Home)</onfocus>
            <onfocus condition="!Skin.HasSetting(DisableAllSubmenus) + Skin.HasSetting(AutoShowSubmenu) + Integer.IsGreater(Container(4445).NumItems,0) + !Control.IsVisible(4446) + Skin.String(SubmenuLayout, vertical)">SetFocus(4444,0)</onfocus>
            <onfocus condition="!Skin.HasSetting(AutoShowSubmenu) | Control.IsVisible(4446) | !Integer.IsGreater(Container(4445).NumItems,0)">ClearProperty(submenu,Home)</onfocus>
            <onfocus condition="String.IsEqual(Skin.String(HomeLayout),bingie) + !String.IsEmpty(Window(Home).Property(KeepPlayingTrailer))">ClearProperty(KeepPlayingTrailer,Home)</onfocus>
            <onfocus>SetProperty(widgetstyle, $INFO[Skin.String(widgetstyle)])</onfocus>
            <onfocus condition="!String.IsEqual(Skin.String(HomeLayout),bingie) | Skin.HasSetting(UseSectionBackground)">SetProperty(flushWidgetProps,1,Home)</onfocus>
            <include content="WidgetsAutoRotate" condition="!String.IsEmpty(Skin.String(widgets_rotate_delay)) + !String.IsEqual(Skin.String(widgets_rotate),disabled)">
                <param name="interval" value="$INFO[Skin.String(widgets_rotate_delay)]" />
            </include>
        </control>
    </include>

    <variable name="SetWidgetContainer">
        <value condition="Control.IsVisible(1510)">SetProperty(SkinHelper.WidgetContainer,1510)</value>
        <value condition="Control.IsVisible(1520)">SetProperty(SkinHelper.WidgetContainer,1520)</value>
        <value condition="Control.IsVisible(1530)">SetProperty(SkinHelper.WidgetContainer,1530)</value>
        <value condition="Control.IsVisible(1540)">SetProperty(SkinHelper.WidgetContainer,1540)</value>
        <value condition="Control.IsVisible(1550)">SetProperty(SkinHelper.WidgetContainer,1550)</value>
        <value condition="Control.IsVisible(1560)">SetProperty(SkinHelper.WidgetContainer,1560)</value>
        <value condition="Control.IsVisible(1570)">SetProperty(SkinHelper.WidgetContainer,1570)</value>
        <value condition="Control.IsVisible(1580)">SetProperty(SkinHelper.WidgetContainer,1580)</value>
        <value condition="Control.IsVisible(2510)">SetProperty(SkinHelper.WidgetContainer,2510)</value>
        <value condition="Control.IsVisible(2520)">SetProperty(SkinHelper.WidgetContainer,2520)</value>
        <value condition="Control.IsVisible(2530)">SetProperty(SkinHelper.WidgetContainer,2530)</value>
        <value condition="Control.IsVisible(2540)">SetProperty(SkinHelper.WidgetContainer,2540)</value>
        <value condition="Control.IsVisible(2550)">SetProperty(SkinHelper.WidgetContainer,2550)</value>
        <value condition="Control.IsVisible(2560)">SetProperty(SkinHelper.WidgetContainer,2560)</value>
        <value condition="Control.IsVisible(2570)">SetProperty(SkinHelper.WidgetContainer,2570)</value>
        <value condition="Control.IsVisible(2580)">SetProperty(SkinHelper.WidgetContainer,2580)</value>
        <value condition="Control.IsVisible(3510)">SetProperty(SkinHelper.WidgetContainer,3510)</value>
        <value condition="Control.IsVisible(3520)">SetProperty(SkinHelper.WidgetContainer,3520)</value>
        <value condition="Control.IsVisible(3530)">SetProperty(SkinHelper.WidgetContainer,3530)</value>
        <value condition="Control.IsVisible(3540)">SetProperty(SkinHelper.WidgetContainer,3540)</value>
        <value condition="Control.IsVisible(3550)">SetProperty(SkinHelper.WidgetContainer,3550)</value>
        <value condition="Control.IsVisible(3560)">SetProperty(SkinHelper.WidgetContainer,3560)</value>
        <value condition="Control.IsVisible(3570)">SetProperty(SkinHelper.WidgetContainer,3570)</value>
        <value condition="Control.IsVisible(3580)">SetProperty(SkinHelper.WidgetContainer,3580)</value>
        <value condition="Control.IsVisible(4510)">SetProperty(SkinHelper.WidgetContainer,4510)</value>
        <value condition="Control.IsVisible(4520)">SetProperty(SkinHelper.WidgetContainer,4520)</value>
        <value condition="Control.IsVisible(4530)">SetProperty(SkinHelper.WidgetContainer,4530)</value>
        <value condition="Control.IsVisible(4540)">SetProperty(SkinHelper.WidgetContainer,4540)</value>
        <value condition="Control.IsVisible(4550)">SetProperty(SkinHelper.WidgetContainer,4550)</value>
        <value condition="Control.IsVisible(4560)">SetProperty(SkinHelper.WidgetContainer,4560)</value>
        <value condition="Control.IsVisible(4570)">SetProperty(SkinHelper.WidgetContainer,4570)</value>
        <value condition="Control.IsVisible(4580)">SetProperty(SkinHelper.WidgetContainer,4580)</value>
        <value condition="Control.IsVisible(5510)">SetProperty(SkinHelper.WidgetContainer,5510)</value>
        <value condition="Control.IsVisible(5520)">SetProperty(SkinHelper.WidgetContainer,5520)</value>
        <value condition="Control.IsVisible(5530)">SetProperty(SkinHelper.WidgetContainer,5530)</value>
        <value condition="Control.IsVisible(5540)">SetProperty(SkinHelper.WidgetContainer,5540)</value>
        <value condition="Control.IsVisible(5550)">SetProperty(SkinHelper.WidgetContainer,5550)</value>
        <value condition="Control.IsVisible(5560)">SetProperty(SkinHelper.WidgetContainer,5560)</value>
        <value condition="Control.IsVisible(5570)">SetProperty(SkinHelper.WidgetContainer,5570)</value>
        <value condition="Control.IsVisible(5580)">SetProperty(SkinHelper.WidgetContainer,5580)</value>
        <value condition="Control.IsVisible(6510)">SetProperty(SkinHelper.WidgetContainer,6510)</value>
        <value condition="Control.IsVisible(6520)">SetProperty(SkinHelper.WidgetContainer,6520)</value>
        <value condition="Control.IsVisible(6530)">SetProperty(SkinHelper.WidgetContainer,6530)</value>
        <value condition="Control.IsVisible(6540)">SetProperty(SkinHelper.WidgetContainer,6540)</value>
        <value condition="Control.IsVisible(6550)">SetProperty(SkinHelper.WidgetContainer,6550)</value>
        <value condition="Control.IsVisible(6560)">SetProperty(SkinHelper.WidgetContainer,6560)</value>
        <value condition="Control.IsVisible(6570)">SetProperty(SkinHelper.WidgetContainer,6570)</value>
        <value condition="Control.IsVisible(6580)">SetProperty(SkinHelper.WidgetContainer,6580)</value>
        <value condition="Control.IsVisible(6510)">SetProperty(SkinHelper.WidgetContainer,6510)</value>
        <value condition="Control.IsVisible(6520)">SetProperty(SkinHelper.WidgetContainer,6520)</value>
        <value condition="Control.IsVisible(6530)">SetProperty(SkinHelper.WidgetContainer,6530)</value>
        <value condition="Control.IsVisible(6540)">SetProperty(SkinHelper.WidgetContainer,6540)</value>
        <value condition="Control.IsVisible(6550)">SetProperty(SkinHelper.WidgetContainer,6550)</value>
        <value condition="Control.IsVisible(6560)">SetProperty(SkinHelper.WidgetContainer,6560)</value>
        <value condition="Control.IsVisible(6570)">SetProperty(SkinHelper.WidgetContainer,6570)</value>
        <value condition="Control.IsVisible(6580)">SetProperty(SkinHelper.WidgetContainer,6580)</value>
        <value condition="Control.IsVisible(8510)">SetProperty(SkinHelper.WidgetContainer,8510)</value>
        <value condition="Control.IsVisible(8520)">SetProperty(SkinHelper.WidgetContainer,8520)</value>
        <value condition="Control.IsVisible(8530)">SetProperty(SkinHelper.WidgetContainer,8530)</value>
        <value condition="Control.IsVisible(8540)">SetProperty(SkinHelper.WidgetContainer,8540)</value>
        <value condition="Control.IsVisible(8550)">SetProperty(SkinHelper.WidgetContainer,8550)</value>
        <value condition="Control.IsVisible(8560)">SetProperty(SkinHelper.WidgetContainer,8560)</value>
        <value condition="Control.IsVisible(8570)">SetProperty(SkinHelper.WidgetContainer,8570)</value>
        <value condition="Control.IsVisible(8580)">SetProperty(SkinHelper.WidgetContainer,8580)</value>
        <value>RunScript(script.skin.helper.service,ACTION=SETWIDGETCONTAINER,CONTROLS=$INFO[Container(900).ListItem.Property(id)]510-$INFO[Container(900).ListItem.Property(id)]520-$INFO[Container(900).ListItem.Property(id)]530-$INFO[Container(900).ListItem.Property(id)]540-$INFO[Container(900).ListItem.Property(id)]550-$INFO[Container(900).ListItem.Property(id)]560-$INFO[Container(900).ListItem.Property(id)]570-$INFO[Container(900).ListItem.Property(id)]580)</value>
    </variable>

    <include name="HiddenWidgetButton">
        <control type="button">
            <visible>false</visible>
            <onfocus condition="!Skin.HasSetting(AutoShowSubmenu)">ClearProperty(submenu,Home)</onfocus>
            <onfocus>ClearProperty(ShowViewSubMenu,Home)</onfocus>
            <onfocus>SetProperty(ShowWidget,1,Home)</onfocus>
            <onfocus>SetProperty(widgetstyle,$PARAM[widgetstyle],Home)</onfocus>
            <onfocus>SetProperty(SkinHelper.WidgetContainer,$PARAM[widgetid])</onfocus>
            <onfocus>SetProperty(LastFocusWidgetPos,$INFO[Container($PARAM[widgetid]).CurrentItem],Home)</onfocus>
            <include content="Bingie_AutoTrailer" condition="String.IsEqual(Skin.String(HomeLayout),bingie) + Skin.HasSetting(BingieAutoTrailer)">
                <param name="widgetid" value="$PARAM[widgetid]" />
            </include>
            <include content="WidgetProperties">
                <param name="widgetid" value="$PARAM[widgetid]" />
            </include>
            <onfocus condition="System.HasAlarm(WidgetRotate$PARAM[widgetid]) + [Skin.HasSetting(widgets_rotate_pause) | $EXP[IsPlayingUnrecognizedContent]])">CancelAlarm(WidgetRotate$PARAM[widgetid],true)</onfocus>
        </control>
    </include>

    <!-- bingie auto-trailer hidden button-->
    <include name="Bingie_AutoTrailer">
        <include content="Bingie_Trailer_Action">
            <param name="interval" value="$INFO[Skin.String(main_auto_trailer_interval)]" />
            <param name="widgetid" value="$PARAM[widgetid]" />
        </include>
        <onfocus condition="String.IsEmpty(Window(Home).Property(KeepPlayingTrailer))">ClearProperty(KeepPlayingTrailer,Home)</onfocus>
        <onfocus condition="System.HasAlarm(trailer_delay) + !String.IsEmpty(Container($PARAM[widgetid]).ListItem.DBID)">SetProperty(LastPlayedTrailer, $INFO[Container($PARAM[widgetid]).ListItem.DBID],Home)</onfocus>
        <onfocus condition="System.HasAlarm(trailer_delay) + String.IsEmpty(Container($PARAM[widgetid]).ListItem.DBID)">SetProperty(LastPlayedTrailer, $INFO[Container($PARAM[widgetid]).ListItem.Label],Home)</onfocus>
        <onunfocus condition="System.HasAlarm(trailer_delay)">CancelAlarm(trailer_delay,silent)</onunfocus>
        <onunfocus condition="$EXP[IsPlayingUnrecognizedContent] + String.IsEmpty(Window(Home).Property(KeepPlayingTrailer))">PlayerControl(Stop)</onunfocus>
        <onunfocus>ClearProperty(LastPlayedTrailer,Home)</onunfocus>
    </include>

    <!-- 1,2) movie trailer local/plugin with fallback 3) tvshow trailer local/youtube 4) non-library movie/tvshow trailer -->
    <include name="Bingie_Trailer_Action">
        <onfocus condition="ControlGroup(77777).HasFocus() + !Window.IsActive(extendedprogressdialog) + !Player.HasVideo + !String.IsEmpty(ListItem.Trailer) + [String.IsEqual(Skin.String(AutoYoutubeTrailer),true) | !String.Contains(ListItem.Trailer, plugin)] + !String.IsEmpty(Container($PARAM[widgetid]).ListItem.DBID) + !String.IsEqual(Window(Home).Property(LastPlayedTrailer),Container($PARAM[widgetid]).ListItem.DBID)">
            AlarmClock(trailer_delay,PlayMedia($ESCINFO[ListItem.Trailer],1),00:$PARAM[interval],silent)</onfocus>
        <onfocus condition="ControlGroup(77777).HasFocus() + !Window.IsActive(extendedprogressdialog) + !Player.HasVideo + String.IsEmpty(ListItem.Trailer) + String.IsEqual(ListItem.DBType,movie) + String.IsEqual(Skin.String(AutoYoutubeTrailer),true) + !String.IsEmpty(Container($PARAM[widgetid]).ListItem.DBID) + !String.IsEmpty(Container($PARAM[widgetid]).ListItem.DBID) + !String.IsEqual(Window(Home).Property(LastPlayedTrailer),Container($PARAM[widgetid]).ListItem.DBID)">
            AlarmClock(trailer_delay,RunScript(script.bingie.helper,action=playtrailer,title=$INFO[ListItem.Title]),00:$PARAM[interval],silent)</onfocus>
        <onfocus condition="ControlGroup(77777).HasFocus() + !Window.IsActive(extendedprogressdialog) + !Player.HasVideo + Skin.HasSetting(AllowTVShowsTrailer) + [String.IsEqual(ListItem.DBType,tvshow) | String.IsEqual(ListItem.DBType,episode)] + !String.IsEmpty(Container($PARAM[widgetid]).ListItem.DBID) + !String.IsEqual(Window(Home).Property(LastPlayedTrailer),Container($PARAM[widgetid]).ListItem.DBID)">
            AlarmClock(trailer_delay,RunScript(script.bingie.helper,action=playtrailer,title=$VAR[TVShowTitle],tvshow=true,youtube=$INFO[Skin.String(AutoYoutubeTrailer)]),00:$PARAM[interval],silent)</onfocus>
        <onfocus condition="ControlGroup(77777).HasFocus() + !Window.IsActive(extendedprogressdialog) + !Player.HasVideo + Skin.HasSetting(AllowAddonTrailer) + String.IsEqual(Skin.String(AutoYoutubeTrailer),true) + [String.IsEqual(ListItem.DBType,movie) | String.IsEqual(ListItem.DBType,tvshow) | String.IsEqual(ListItem.DBType,episode)] + String.IsEmpty(Container($PARAM[widgetid]).ListItem.DBID) + !String.IsEqual(Window(Home).Property(LastPlayedTrailer),Container($PARAM[widgetid]).ListItem.Label)">
            AlarmClock(trailer_delay,RunScript(script.bingie.helper,action=playtrailer,title=$INFO[ListItem.Title]),00:$PARAM[interval],silent)</onfocus>
    </include>

    <!-- IMPORTANT - USE ESCINFO TO AVOID COMMAS IN INFOLABEL -->
    <include name="WidgetProperties">
        <description>copy infolabels to winprops for widget details panel</description>
        <onfocus>SetProperty(ListItem.Plot, $ESCINFO[Container($PARAM[widgetid]).ListItem.Plot],Home)</onfocus>
        <onfocus>SetProperty(ListItem.PlotOutline, $ESCINFO[Container($PARAM[widgetid]).ListItem.PlotOutline],Home)</onfocus>
        <onfocus>SetProperty(ListItem.Title, $ESCINFO[Container($PARAM[widgetid]).ListItem.Title],Home)</onfocus>
        <onfocus>SetProperty(ListItem.Year, $ESCINFO[Container($PARAM[widgetid]).ListItem.Year],Home)</onfocus>
        <onfocus>SetProperty(ListItem.Genre, $ESCINFO[Container($PARAM[widgetid]).ListItem.Genre],Home)</onfocus>
        <onfocus>SetProperty(ListItem.Label, $ESCINFO[Container($PARAM[widgetid]).ListItem.Label],Home)</onfocus>
        <onfocus>SetProperty(ListItem.Duration, $ESCINFO[Container($PARAM[widgetid]).ListItem.Duration],Home)</onfocus>
        <onfocus>SetProperty(ListItem.Duration.Mins, $ESCINFO[Container($PARAM[widgetid]).ListItem.Duration(mins)],Home)</onfocus>
        <onfocus>SetProperty(ListItem.Duration.M, $ESCINFO[Container($PARAM[widgetid]).ListItem.Duration(m)],Home)</onfocus>
        <onfocus>SetProperty(ListItem.Duration.Hours, $ESCINFO[Container($PARAM[widgetid]).ListItem.Duration(h)],Home)</onfocus>
        <onfocus>SetProperty(ListItem.Label2, $ESCINFO[Container($PARAM[widgetid]).ListItem.Label2],Home)</onfocus>
        <onfocus>SetProperty(ListItem.DBTYPE, $ESCINFO[Container($PARAM[widgetid]).ListItem.DBTYPE],Home)</onfocus>
        <onfocus>SetProperty(ListItem.TvShowTitle, $ESCINFO[Container($PARAM[widgetid]).ListItem.TvShowTitle],Home)</onfocus>
        <onfocus>SetProperty(ListItem.Premiered, $ESCINFO[Container($PARAM[widgetid]).ListItem.Premiered],Home)</onfocus>
        <onfocus>SetProperty(ListItem.VideoResolution, $ESCINFO[Container($PARAM[widgetid]).ListItem.VideoResolution],Home)</onfocus>
        <onfocus>SetProperty(ListItem.AudioChannels, $ESCINFO[Container($PARAM[widgetid]).ListItem.AudioChannels],Home)</onfocus>
        <onfocus>SetProperty(ListItem.Art.fanart, $ESCINFO[Container($PARAM[widgetid]).ListItem.Art(fanart)],Home)</onfocus>
        <onfocus>SetProperty(ListItem.Art.ClearLogo, $ESCINFO[Container($PARAM[widgetid]).ListItem.Art(clearlogo)],Home)</onfocus>
        <onfocus>SetProperty(ListItem.TotalEpisodes, $ESCINFO[Container($PARAM[widgetid]).ListItem.Property(TotalEpisodes)],Home)</onfocus>
        <onfocus>SetProperty(ListItem.TotalSeasons, $ESCINFO[Container($PARAM[widgetid]).ListItem.Property(TotalSeasons)],Home)</onfocus>
        <onfocus>SetProperty(ListItem.VideoCodec, $ESCINFO[Container($PARAM[widgetid]).ListItem.VideoCodec],Home)</onfocus>
        <onfocus>SetProperty(ListItem.VideoAspect, $ESCINFO[Container($PARAM[widgetid]).ListItem.VideoAspect],Home)</onfocus>
        <onfocus>SetProperty(ListItem.SubtitleLanguage, $ESCINFO[Container($PARAM[widgetid]).ListItem.SubtitleLanguage],Home)</onfocus>
        <onfocus>SetProperty(ListItem.FileExtension, $ESCINFO[Container($PARAM[widgetid]).ListItem.FileExtension],Home)</onfocus>
        <onfocus>SetProperty(ListItem.AudioCodec, $ESCINFO[Container($PARAM[widgetid]).ListItem.AudioCodec],Home)</onfocus>
        <onfocus>SetProperty(ListItem.AudioLanguage, $ESCINFO[Container($PARAM[widgetid]).ListItem.AudioLanguage],Home)</onfocus>
        <onfocus>SetProperty(ListItem.MPAA, $ESCINFO[Container($PARAM[widgetid]).ListItem.MPAA],Home)</onfocus>
        <onfocus>SetProperty(ListItem.IsStereoScopic, $ESCINFO[Container($PARAM[widgetid]).ListItem.IsStereoScopic],Home)</onfocus>
        <onfocus>SetProperty(ListItem.TagLine, $ESCINFO[Container($PARAM[widgetid]).ListItem.TagLine],Home)</onfocus>
        <onfocus>SetProperty(ListItem.Rating, $ESCINFO[Container($PARAM[widgetid]).ListItem.Rating],Home)</onfocus>
        <onfocus>SetProperty(ListItem.UserRating, $ESCINFO[Container($PARAM[widgetid]).ListItem.UserRating],Home)</onfocus>
        <onfocus>SetProperty(ListItem.Season, $ESCINFO[Container($PARAM[widgetid]).ListItem.Season],Home)</onfocus>
        <onfocus>SetProperty(ListItem.Episode, $ESCINFO[Container($PARAM[widgetid]).ListItem.Episode],Home)</onfocus>
        <onfocus>SetProperty(ListItem.Artist, $ESCINFO[Container($PARAM[widgetid]).ListItem.Artist],Home)</onfocus>
        <onfocus>SetProperty(ListItem.Album, $ESCINFO[Container($PARAM[widgetid]).ListItem.Album],Home)</onfocus>
        <onfocus>SetProperty(ListItem.StartDateTime, $ESCINFO[Container($PARAM[widgetid]).ListItem.Property(StartDateTime)],Home)</onfocus>
        <onfocus>SetProperty(ListItem.StartTime, $ESCINFO[Container($PARAM[widgetid]).ListItem.StartTime],Home)</onfocus>
        <onfocus>SetProperty(ListItem.StartDate, $ESCINFO[Container($PARAM[widgetid]).ListItem.StartDate],Home)</onfocus>
        <onfocus>SetProperty(ListItem.Art.Poster, $ESCINFO[Container($PARAM[widgetid]).ListItem.Art(poster)],Home)</onfocus>
        <onfocus>SetProperty(ListItem.Art.tvshow.clearlogo, $ESCINFO[Container($PARAM[widgetid]).ListItem.Art(tvshow.clearlogo)],Home)</onfocus>
        <onfocus>SetProperty(ListItem.Art.landscape, $ESCINFO[Container($PARAM[widgetid]).ListItem.Art(landscape)],Home)</onfocus>
        <onfocus>SetProperty(ListItem.Thumb, $ESCINFO[Container($PARAM[widgetid]).ListItem.Art(thumb)],Home)</onfocus>
        <onfocus>SetProperty(ListItem.Icon, $ESCINFO[Container($PARAM[widgetid]).ListItem.Icon],Home)</onfocus>
        <onfocus>SetProperty(ListItem.ChannelLogo, $ESCINFO[Container($PARAM[widgetid]).ListItem.Property(ChannelLogo)],Home)</onfocus>
        <onfocus condition="String.IsEmpty(Window(Home).Property(ListItem.Plot))">SetProperty(ListItem.Plot, $ESCINFO[Container($PARAM[widgetid]).ListItem.Property(Plot)],Home)</onfocus>
        <onfocus condition="String.IsEmpty(Window(Home).Property(ListItem.DBTYPE))">SetProperty(ListItem.DBTYPE, $ESCINFO[Container($PARAM[widgetid]).ListItem.Property(dbtype)],Home)</onfocus>
        <onfocus condition="String.IsEmpty(Window(Home).Property(ListItem.Art.Poster))">SetProperty(ListItem.Art.Poster, $ESCINFO[Container($PARAM[widgetid]).ListItem.Property(Poster)],Home)</onfocus>
        <onfocus condition="String.IsEmpty(Window(Home).Property(ListItem.Art.ClearLogo))">SetProperty(ListItem.Art.ClearLogo, $ESCINFO[Container($PARAM[widgetid]).ListItem.Property(logo)],Home)</onfocus>
        <onfocus condition="String.IsEmpty(Window(Home).Property(ListItem.Art.fanart))">SetProperty(ListItem.Art.fanart, $ESCINFO[Container($PARAM[widgetid]).ListItem.Property(fanart)],Home)</onfocus>
    </include>

    <include name="WidgetsAutoRotate">
        <onfocus condition="!System.HasAlarm(WidgetRotate1508) + Control.IsVisible(1508) + !Control.HasFocus(1508) + [Skin.String(widgets_rotate,all) | Skin.String(widgets_rotate,spotlight) | [Skin.String(widgets_rotate,override) + !String.IsEmpty(Container(900).ListItem.Property(widgetAutoRotate.99))]]">AlarmClock(WidgetRotate1508,Control.Move(1508,1),00:$PARAM[interval],silent,loop)</onfocus>
        <onfocus condition="System.HasAlarm(WidgetRotate1508) + ![Control.IsVisible(1508) + !Control.HasFocus(1508) + [Skin.String(widgets_rotate,all) | Skin.String(widgets_rotate,spotlight) | [Skin.String(widgets_rotate,override) + !String.IsEmpty(Container(900).ListItem.Property(widgetAutoRotate.99))]]]">CancelAlarm(WidgetRotate1508,true)</onfocus>

        <onfocus condition="!System.HasAlarm(WidgetRotate510) + Control.IsVisible(510) + !Control.HasFocus(510) + [Skin.String(widgets_rotate,all) | Skin.String(widgets_rotate,510) | [Skin.String(widgets_rotate,override) + !String.IsEmpty(Container(900).ListItem.Property(widgetAutoRotate))]]">AlarmClock(WidgetRotate510,Control.Move(510,1),00:$PARAM[interval],silent,loop)</onfocus>
        <onfocus condition="System.HasAlarm(WidgetRotate510) + ![Control.IsVisible(510) + !Control.HasFocus(510) + [Skin.String(widgets_rotate,all) | Skin.String(widgets_rotate,510) | [Skin.String(widgets_rotate,override) + !String.IsEmpty(Container(900).ListItem.Property(widgetAutoRotate))]]]">CancelAlarm(WidgetRotate510,true)</onfocus>
        <onfocus condition="!System.HasAlarm(WidgetRotate1510) + Control.IsVisible(1510) + !Control.HasFocus(1510) + [Skin.String(widgets_rotate,all) | Skin.String(widgets_rotate,510) | [Skin.String(widgets_rotate,override) + !String.IsEmpty(Container(900).ListItem.Property(widgetAutoRotate))]]">AlarmClock(WidgetRotate1510,Control.Move(1510,1),00:$PARAM[interval],silent,loop)</onfocus>
        <onfocus condition="System.HasAlarm(WidgetRotate1510) + ![Control.IsVisible(1510) + !Control.HasFocus(1510) + [Skin.String(widgets_rotate,all) | Skin.String(widgets_rotate,510) | [Skin.String(widgets_rotate,override) + !String.IsEmpty(Container(900).ListItem.Property(widgetAutoRotate))]]]">CancelAlarm(WidgetRotate1510,true)</onfocus>
        <onfocus condition="!System.HasAlarm(WidgetRotate2510) + Control.IsVisible(2510) + !Control.HasFocus(2510) + [Skin.String(widgets_rotate,all) | Skin.String(widgets_rotate,510) | [Skin.String(widgets_rotate,override) + !String.IsEmpty(Container(900).ListItem.Property(widgetAutoRotate))]]">AlarmClock(WidgetRotate2510,Control.Move(2510,1),00:$PARAM[interval],silent,loop)</onfocus>
        <onfocus condition="System.HasAlarm(WidgetRotate2510) + ![Control.IsVisible(2510) + !Control.HasFocus(2510) + [Skin.String(widgets_rotate,all) | Skin.String(widgets_rotate,510) | [Skin.String(widgets_rotate,override) + !String.IsEmpty(Container(900).ListItem.Property(widgetAutoRotate))]]]">CancelAlarm(WidgetRotate2510,true)</onfocus>
        <onfocus condition="!System.HasAlarm(WidgetRotate3510) + Control.IsVisible(3510) + !Control.HasFocus(3510) + [Skin.String(widgets_rotate,all) | Skin.String(widgets_rotate,510) | [Skin.String(widgets_rotate,override) + !String.IsEmpty(Container(900).ListItem.Property(widgetAutoRotate))]]">AlarmClock(WidgetRotate3510,Control.Move(3510,1),00:$PARAM[interval],silent,loop)</onfocus>
        <onfocus condition="System.HasAlarm(WidgetRotate3510) + ![Control.IsVisible(3510) + !Control.HasFocus(3510) + [Skin.String(widgets_rotate,all) | Skin.String(widgets_rotate,510) | [Skin.String(widgets_rotate,override) + !String.IsEmpty(Container(900).ListItem.Property(widgetAutoRotate))]]]">CancelAlarm(WidgetRotate3510,true)</onfocus>
        <onfocus condition="!System.HasAlarm(WidgetRotate4510) + Control.IsVisible(4510) + !Control.HasFocus(4510) + [Skin.String(widgets_rotate,all) | Skin.String(widgets_rotate,510) | [Skin.String(widgets_rotate,override) + !String.IsEmpty(Container(900).ListItem.Property(widgetAutoRotate))]]">AlarmClock(WidgetRotate4510,Control.Move(4510,1),00:$PARAM[interval],silent,loop)</onfocus>
        <onfocus condition="System.HasAlarm(WidgetRotate4510) + ![Control.IsVisible(4510) + !Control.HasFocus(4510) + [Skin.String(widgets_rotate,all) | Skin.String(widgets_rotate,510) | [Skin.String(widgets_rotate,override) + !String.IsEmpty(Container(900).ListItem.Property(widgetAutoRotate))]]]">CancelAlarm(WidgetRotate4510,true)</onfocus>
        <onfocus condition="!System.HasAlarm(WidgetRotate5510) + Control.IsVisible(5510) + !Control.HasFocus(5510) + [Skin.String(widgets_rotate,all) | Skin.String(widgets_rotate,510) | [Skin.String(widgets_rotate,override) + !String.IsEmpty(Container(900).ListItem.Property(widgetAutoRotate))]]">AlarmClock(WidgetRotate5510,Control.Move(5510,1),00:$PARAM[interval],silent,loop)</onfocus>
        <onfocus condition="System.HasAlarm(WidgetRotate5510) + ![Control.IsVisible(5510) + !Control.HasFocus(5510) + [Skin.String(widgets_rotate,all) | Skin.String(widgets_rotate,510) | [Skin.String(widgets_rotate,override) + !String.IsEmpty(Container(900).ListItem.Property(widgetAutoRotate))]]]">CancelAlarm(WidgetRotate5510,true)</onfocus>
        <onfocus condition="!System.HasAlarm(WidgetRotate6510) + Control.IsVisible(6510) + !Control.HasFocus(6510) + [Skin.String(widgets_rotate,all) | Skin.String(widgets_rotate,510) | [Skin.String(widgets_rotate,override) + !String.IsEmpty(Container(900).ListItem.Property(widgetAutoRotate))]]">AlarmClock(WidgetRotate6510,Control.Move(6510,1),00:$PARAM[interval],silent,loop)</onfocus>
        <onfocus condition="System.HasAlarm(WidgetRotate6510) + ![Control.IsVisible(6510) + !Control.HasFocus(6510) + [Skin.String(widgets_rotate,all) | Skin.String(widgets_rotate,510) | [Skin.String(widgets_rotate,override) + !String.IsEmpty(Container(900).ListItem.Property(widgetAutoRotate))]]]">CancelAlarm(WidgetRotate6510,true)</onfocus>
        <onfocus condition="!System.HasAlarm(WidgetRotate7510) + Control.IsVisible(7510) + !Control.HasFocus(7510) + [Skin.String(widgets_rotate,all) | Skin.String(widgets_rotate,510) | [Skin.String(widgets_rotate,override) + !String.IsEmpty(Container(900).ListItem.Property(widgetAutoRotate))]]">AlarmClock(WidgetRotate7510,Control.Move(7510,1),00:$PARAM[interval],silent,loop)</onfocus>
        <onfocus condition="System.HasAlarm(WidgetRotate7510) + ![Control.IsVisible(7510) + !Control.HasFocus(7510) + [Skin.String(widgets_rotate,all) | Skin.String(widgets_rotate,510) | [Skin.String(widgets_rotate,override) + !String.IsEmpty(Container(900).ListItem.Property(widgetAutoRotate))]]]">CancelAlarm(WidgetRotate7510,true)</onfocus>
        <onfocus condition="!System.HasAlarm(WidgetRotate8510) + Control.IsVisible(8510) + !Control.HasFocus(8510) + [Skin.String(widgets_rotate,all) | Skin.String(widgets_rotate,510) | [Skin.String(widgets_rotate,override) + !String.IsEmpty(Container(900).ListItem.Property(widgetAutoRotate))]]">AlarmClock(WidgetRotate8510,Control.Move(8510,1),00:$PARAM[interval],silent,loop)</onfocus>
        <onfocus condition="System.HasAlarm(WidgetRotate8510) + ![Control.IsVisible(8510) + !Control.HasFocus(8510) + [Skin.String(widgets_rotate,all) | Skin.String(widgets_rotate,510) | [Skin.String(widgets_rotate,override) + !String.IsEmpty(Container(900).ListItem.Property(widgetAutoRotate))]]]">CancelAlarm(WidgetRotate8510,true)</onfocus>
        <onfocus condition="!System.HasAlarm(WidgetRotate9510) + Control.IsVisible(9510) + !Control.HasFocus(9510) + [Skin.String(widgets_rotate,all) | Skin.String(widgets_rotate,510) | [Skin.String(widgets_rotate,override) + !String.IsEmpty(Container(900).ListItem.Property(widgetAutoRotate))]]">AlarmClock(WidgetRotate9510,Control.Move(9510,1),00:$PARAM[interval],silent,loop)</onfocus>
        <onfocus condition="System.HasAlarm(WidgetRotate9510) + ![Control.IsVisible(9510) + !Control.HasFocus(9510) + [Skin.String(widgets_rotate,all) | Skin.String(widgets_rotate,510) | [Skin.String(widgets_rotate,override) + !String.IsEmpty(Container(900).ListItem.Property(widgetAutoRotate))]]]">CancelAlarm(WidgetRotate9510,true)</onfocus>
        <onfocus condition="!System.HasAlarm(WidgetRotate10510) + Control.IsVisible(10510) + !Control.HasFocus(10510) + [Skin.String(widgets_rotate,all) | Skin.String(widgets_rotate,510) | [Skin.String(widgets_rotate,override) + !String.IsEmpty(Container(900).ListItem.Property(widgetAutoRotate))]]">AlarmClock(WidgetRotate10510,Control.Move(10510,1),00:$PARAM[interval],silent,loop)</onfocus>
        <onfocus condition="System.HasAlarm(WidgetRotate10510) + ![Control.IsVisible(10510) + !Control.HasFocus(10510) + [Skin.String(widgets_rotate,all) | Skin.String(widgets_rotate,510) | [Skin.String(widgets_rotate,override) + !String.IsEmpty(Container(900).ListItem.Property(widgetAutoRotate))]]]">CancelAlarm(WidgetRotate10510,true)</onfocus>
        <onfocus condition="!System.HasAlarm(WidgetRotate11510) + Control.IsVisible(11510) + !Control.HasFocus(11510) + [Skin.String(widgets_rotate,all) | Skin.String(widgets_rotate,510) | [Skin.String(widgets_rotate,override) + !String.IsEmpty(Container(900).ListItem.Property(widgetAutoRotate))]]">AlarmClock(WidgetRotate11510,Control.Move(11510,1),00:$PARAM[interval],silent,loop)</onfocus>
        <onfocus condition="System.HasAlarm(WidgetRotate11510) + ![Control.IsVisible(11510) + !Control.HasFocus(11510) + [Skin.String(widgets_rotate,all) | Skin.String(widgets_rotate,510) | [Skin.String(widgets_rotate,override) + !String.IsEmpty(Container(900).ListItem.Property(widgetAutoRotate))]]]">CancelAlarm(WidgetRotate11510,true)</onfocus>
        <onfocus condition="!System.HasAlarm(WidgetRotate12510) + Control.IsVisible(12510) + !Control.HasFocus(12510) + [Skin.String(widgets_rotate,all) | Skin.String(widgets_rotate,510) | [Skin.String(widgets_rotate,override) + !String.IsEmpty(Container(900).ListItem.Property(widgetAutoRotate))]]">AlarmClock(WidgetRotate12510,Control.Move(12510,1),00:$PARAM[interval],silent,loop)</onfocus>
        <onfocus condition="System.HasAlarm(WidgetRotate12510) + ![Control.IsVisible(12510) + !Control.HasFocus(12510) + [Skin.String(widgets_rotate,all) | Skin.String(widgets_rotate,510) | [Skin.String(widgets_rotate,override) + !String.IsEmpty(Container(900).ListItem.Property(widgetAutoRotate))]]]">CancelAlarm(WidgetRotate12510,true)</onfocus>
        <onfocus condition="!System.HasAlarm(WidgetRotate13510) + Control.IsVisible(13510) + !Control.HasFocus(13510) + [Skin.String(widgets_rotate,all) | Skin.String(widgets_rotate,510) | [Skin.String(widgets_rotate,override) + !String.IsEmpty(Container(900).ListItem.Property(widgetAutoRotate))]]">AlarmClock(WidgetRotate13510,Control.Move(13510,1),00:$PARAM[interval],silent,loop)</onfocus>
        <onfocus condition="System.HasAlarm(WidgetRotate13510) + ![Control.IsVisible(13510) + !Control.HasFocus(13510) + [Skin.String(widgets_rotate,all) | Skin.String(widgets_rotate,510) | [Skin.String(widgets_rotate,override) + !String.IsEmpty(Container(900).ListItem.Property(widgetAutoRotate))]]]">CancelAlarm(WidgetRotate13510,true)</onfocus>
        <onfocus condition="!System.HasAlarm(WidgetRotate14510) + Control.IsVisible(14510) + !Control.HasFocus(14510) + [Skin.String(widgets_rotate,all) | Skin.String(widgets_rotate,510) | [Skin.String(widgets_rotate,override) + !String.IsEmpty(Container(900).ListItem.Property(widgetAutoRotate))]]">AlarmClock(WidgetRotate14510,Control.Move(14510,1),00:$PARAM[interval],silent,loop)</onfocus>
        <onfocus condition="System.HasAlarm(WidgetRotate14510) + ![Control.IsVisible(14510) + !Control.HasFocus(14510) + [Skin.String(widgets_rotate,all) | Skin.String(widgets_rotate,510) | [Skin.String(widgets_rotate,override) + !String.IsEmpty(Container(900).ListItem.Property(widgetAutoRotate))]]]">CancelAlarm(WidgetRotate14510,true)</onfocus>
        <onfocus condition="!System.HasAlarm(WidgetRotate15510) + Control.IsVisible(15510) + !Control.HasFocus(15510) + [Skin.String(widgets_rotate,all) | Skin.String(widgets_rotate,510) | [Skin.String(widgets_rotate,override) + !String.IsEmpty(Container(900).ListItem.Property(widgetAutoRotate))]]">AlarmClock(WidgetRotate15510,Control.Move(15510,1),00:$PARAM[interval],silent,loop)</onfocus>
        <onfocus condition="System.HasAlarm(WidgetRotate15510) + ![Control.IsVisible(15510) + !Control.HasFocus(15510) + [Skin.String(widgets_rotate,all) | Skin.String(widgets_rotate,510) | [Skin.String(widgets_rotate,override) + !String.IsEmpty(Container(900).ListItem.Property(widgetAutoRotate))]]]">CancelAlarm(WidgetRotate15510,true)</onfocus>

        <onfocus condition="!System.HasAlarm(WidgetRotate520) + Control.IsVisible(520) + !Control.HasFocus(520) + [Skin.String(widgets_rotate,all) | Skin.String(widgets_rotate,520) | [Skin.String(widgets_rotate,override) + !String.IsEmpty(Container(900).ListItem.Property(widgetAutoRotate.1))]]">AlarmClock(WidgetRotate520,Control.Move(520,1),00:$PARAM[interval],silent,loop)</onfocus>
        <onfocus condition="System.HasAlarm(WidgetRotate520) + ![Control.IsVisible(520) + !Control.HasFocus(520) + [Skin.String(widgets_rotate,all) | Skin.String(widgets_rotate,520) | [Skin.String(widgets_rotate,override) + !String.IsEmpty(Container(900).ListItem.Property(widgetAutoRotate.1))]]]">CancelAlarm(WidgetRotate520,true)</onfocus>
        <onfocus condition="!System.HasAlarm(WidgetRotate1520) + Control.IsVisible(1520) + !Control.HasFocus(1520) + [Skin.String(widgets_rotate,all) | Skin.String(widgets_rotate,520) | [Skin.String(widgets_rotate,override) + !String.IsEmpty(Container(900).ListItem.Property(widgetAutoRotate.1))]]">AlarmClock(WidgetRotate1520,Control.Move(1520,1),00:$PARAM[interval],silent,loop)</onfocus>
        <onfocus condition="System.HasAlarm(WidgetRotate1520) + ![Control.IsVisible(1520) + !Control.HasFocus(1520) + [Skin.String(widgets_rotate,all) | Skin.String(widgets_rotate,520) | [Skin.String(widgets_rotate,override) + !String.IsEmpty(Container(900).ListItem.Property(widgetAutoRotate.1))]]]">CancelAlarm(WidgetRotate1520,true)</onfocus>
        <onfocus condition="!System.HasAlarm(WidgetRotate2520) + Control.IsVisible(2520) + !Control.HasFocus(2520) + [Skin.String(widgets_rotate,all) | Skin.String(widgets_rotate,520) | [Skin.String(widgets_rotate,override) + !String.IsEmpty(Container(900).ListItem.Property(widgetAutoRotate.1))]]">AlarmClock(WidgetRotate2520,Control.Move(2520,1),00:$PARAM[interval],silent,loop)</onfocus>
        <onfocus condition="System.HasAlarm(WidgetRotate2520) + ![Control.IsVisible(2520) + !Control.HasFocus(2520) + [Skin.String(widgets_rotate,all) | Skin.String(widgets_rotate,520) | [Skin.String(widgets_rotate,override) + !String.IsEmpty(Container(900).ListItem.Property(widgetAutoRotate.1))]]]">CancelAlarm(WidgetRotate2520,true)</onfocus>
        <onfocus condition="!System.HasAlarm(WidgetRotate3520) + Control.IsVisible(3520) + !Control.HasFocus(3520) + [Skin.String(widgets_rotate,all) | Skin.String(widgets_rotate,520) | [Skin.String(widgets_rotate,override) + !String.IsEmpty(Container(900).ListItem.Property(widgetAutoRotate.1))]]">AlarmClock(WidgetRotate3520,Control.Move(3520,1),00:$PARAM[interval],silent,loop)</onfocus>
        <onfocus condition="System.HasAlarm(WidgetRotate3520) + ![Control.IsVisible(3520) + !Control.HasFocus(3520) + [Skin.String(widgets_rotate,all) | Skin.String(widgets_rotate,520) | [Skin.String(widgets_rotate,override) + !String.IsEmpty(Container(900).ListItem.Property(widgetAutoRotate.1))]]]">CancelAlarm(WidgetRotate3520,true)</onfocus>
        <onfocus condition="!System.HasAlarm(WidgetRotate4520) + Control.IsVisible(4520) + !Control.HasFocus(4520) + [Skin.String(widgets_rotate,all) | Skin.String(widgets_rotate,520) | [Skin.String(widgets_rotate,override) + !String.IsEmpty(Container(900).ListItem.Property(widgetAutoRotate.1))]]">AlarmClock(WidgetRotate4520,Control.Move(4520,1),00:$PARAM[interval],silent,loop)</onfocus>
        <onfocus condition="System.HasAlarm(WidgetRotate4520) + ![Control.IsVisible(4520) + !Control.HasFocus(4520) + [Skin.String(widgets_rotate,all) | Skin.String(widgets_rotate,520) | [Skin.String(widgets_rotate,override) + !String.IsEmpty(Container(900).ListItem.Property(widgetAutoRotate.1))]]]">CancelAlarm(WidgetRotate4520,true)</onfocus>
        <onfocus condition="!System.HasAlarm(WidgetRotate5520) + Control.IsVisible(5520) + !Control.HasFocus(5520) + [Skin.String(widgets_rotate,all) | Skin.String(widgets_rotate,520) | [Skin.String(widgets_rotate,override) + !String.IsEmpty(Container(900).ListItem.Property(widgetAutoRotate.1))]]">AlarmClock(WidgetRotate5520,Control.Move(5520,1),00:$PARAM[interval],silent,loop)</onfocus>
        <onfocus condition="System.HasAlarm(WidgetRotate5520) + ![Control.IsVisible(5520) + !Control.HasFocus(5520) + [Skin.String(widgets_rotate,all) | Skin.String(widgets_rotate,520) | [Skin.String(widgets_rotate,override) + !String.IsEmpty(Container(900).ListItem.Property(widgetAutoRotate.1))]]]">CancelAlarm(WidgetRotate5520,true)</onfocus>
        <onfocus condition="!System.HasAlarm(WidgetRotate6520) + Control.IsVisible(6520) + !Control.HasFocus(6520) + [Skin.String(widgets_rotate,all) | Skin.String(widgets_rotate,520) | [Skin.String(widgets_rotate,override) + !String.IsEmpty(Container(900).ListItem.Property(widgetAutoRotate.1))]]">AlarmClock(WidgetRotate6520,Control.Move(6520,1),00:$PARAM[interval],silent,loop)</onfocus>
        <onfocus condition="System.HasAlarm(WidgetRotate6520) + ![Control.IsVisible(6520) + !Control.HasFocus(6520) + [Skin.String(widgets_rotate,all) | Skin.String(widgets_rotate,520) | [Skin.String(widgets_rotate,override) + !String.IsEmpty(Container(900).ListItem.Property(widgetAutoRotate.1))]]]">CancelAlarm(WidgetRotate6520,true)</onfocus>
        <onfocus condition="!System.HasAlarm(WidgetRotate7520) + Control.IsVisible(7520) + !Control.HasFocus(7520) + [Skin.String(widgets_rotate,all) | Skin.String(widgets_rotate,520) | [Skin.String(widgets_rotate,override) + !String.IsEmpty(Container(900).ListItem.Property(widgetAutoRotate.1))]]">AlarmClock(WidgetRotate7520,Control.Move(7520,1),00:$PARAM[interval],silent,loop)</onfocus>
        <onfocus condition="System.HasAlarm(WidgetRotate7520) + ![Control.IsVisible(7520) + !Control.HasFocus(7520) + [Skin.String(widgets_rotate,all) | Skin.String(widgets_rotate,520) | [Skin.String(widgets_rotate,override) + !String.IsEmpty(Container(900).ListItem.Property(widgetAutoRotate.1))]]]">CancelAlarm(WidgetRotate7520,true)</onfocus>
        <onfocus condition="!System.HasAlarm(WidgetRotate8520) + Control.IsVisible(8520) + !Control.HasFocus(8520) + [Skin.String(widgets_rotate,all) | Skin.String(widgets_rotate,520) | [Skin.String(widgets_rotate,override) + !String.IsEmpty(Container(900).ListItem.Property(widgetAutoRotate.1))]]">AlarmClock(WidgetRotate8520,Control.Move(8520,1),00:$PARAM[interval],silent,loop)</onfocus>
        <onfocus condition="System.HasAlarm(WidgetRotate8520) + ![Control.IsVisible(8520) + !Control.HasFocus(8520) + [Skin.String(widgets_rotate,all) | Skin.String(widgets_rotate,520) | [Skin.String(widgets_rotate,override) + !String.IsEmpty(Container(900).ListItem.Property(widgetAutoRotate.1))]]]">CancelAlarm(WidgetRotate8520,true)</onfocus>
        <onfocus condition="!System.HasAlarm(WidgetRotate9520) + Control.IsVisible(9520) + !Control.HasFocus(9520) + [Skin.String(widgets_rotate,all) | Skin.String(widgets_rotate,520) | [Skin.String(widgets_rotate,override) + !String.IsEmpty(Container(900).ListItem.Property(widgetAutoRotate.1))]]">AlarmClock(WidgetRotate9520,Control.Move(9520,1),00:$PARAM[interval],silent,loop)</onfocus>
        <onfocus condition="System.HasAlarm(WidgetRotate9520) + ![Control.IsVisible(9520) + !Control.HasFocus(9520) + [Skin.String(widgets_rotate,all) | Skin.String(widgets_rotate,520) | [Skin.String(widgets_rotate,override) + !String.IsEmpty(Container(900).ListItem.Property(widgetAutoRotate.1))]]]">CancelAlarm(WidgetRotate9520,true)</onfocus>
        <onfocus condition="!System.HasAlarm(WidgetRotate10520) + Control.IsVisible(10520) + !Control.HasFocus(10520) + [Skin.String(widgets_rotate,all) | Skin.String(widgets_rotate,520) | [Skin.String(widgets_rotate,override) + !String.IsEmpty(Container(900).ListItem.Property(widgetAutoRotate.1))]]">AlarmClock(WidgetRotate10520,Control.Move(10520,1),00:$PARAM[interval],silent,loop)</onfocus>
        <onfocus condition="System.HasAlarm(WidgetRotate10520) + ![Control.IsVisible(10520) + !Control.HasFocus(10520) + [Skin.String(widgets_rotate,all) | Skin.String(widgets_rotate,520) | [Skin.String(widgets_rotate,override) + !String.IsEmpty(Container(900).ListItem.Property(widgetAutoRotate.1))]]]">CancelAlarm(WidgetRotate10520,true)</onfocus>
        <onfocus condition="!System.HasAlarm(WidgetRotate11520) + Control.IsVisible(11520) + !Control.HasFocus(11520) + [Skin.String(widgets_rotate,all) | Skin.String(widgets_rotate,520) | [Skin.String(widgets_rotate,override) + !String.IsEmpty(Container(900).ListItem.Property(widgetAutoRotate.1))]]">AlarmClock(WidgetRotate11520,Control.Move(11520,1),00:$PARAM[interval],silent,loop)</onfocus>
        <onfocus condition="System.HasAlarm(WidgetRotate11520) + ![Control.IsVisible(11520) + !Control.HasFocus(11520) + [Skin.String(widgets_rotate,all) | Skin.String(widgets_rotate,520) | [Skin.String(widgets_rotate,override) + !String.IsEmpty(Container(900).ListItem.Property(widgetAutoRotate.1))]]]">CancelAlarm(WidgetRotate11520,true)</onfocus>
        <onfocus condition="!System.HasAlarm(WidgetRotate12520) + Control.IsVisible(12520) + !Control.HasFocus(12520) + [Skin.String(widgets_rotate,all) | Skin.String(widgets_rotate,520) | [Skin.String(widgets_rotate,override) + !String.IsEmpty(Container(900).ListItem.Property(widgetAutoRotate.1))]]">AlarmClock(WidgetRotate12520,Control.Move(12520,1),00:$PARAM[interval],silent,loop)</onfocus>
        <onfocus condition="System.HasAlarm(WidgetRotate12520) + ![Control.IsVisible(12520) + !Control.HasFocus(12520) + [Skin.String(widgets_rotate,all) | Skin.String(widgets_rotate,520) | [Skin.String(widgets_rotate,override) + !String.IsEmpty(Container(900).ListItem.Property(widgetAutoRotate.1))]]]">CancelAlarm(WidgetRotate12520,true)</onfocus>
        <onfocus condition="!System.HasAlarm(WidgetRotate13520) + Control.IsVisible(13520) + !Control.HasFocus(13520) + [Skin.String(widgets_rotate,all) | Skin.String(widgets_rotate,520) | [Skin.String(widgets_rotate,override) + !String.IsEmpty(Container(900).ListItem.Property(widgetAutoRotate.1))]]">AlarmClock(WidgetRotate13520,Control.Move(13520,1),00:$PARAM[interval],silent,loop)</onfocus>
        <onfocus condition="System.HasAlarm(WidgetRotate13520) + ![Control.IsVisible(13520) + !Control.HasFocus(13520) + [Skin.String(widgets_rotate,all) | Skin.String(widgets_rotate,520) | [Skin.String(widgets_rotate,override) + !String.IsEmpty(Container(900).ListItem.Property(widgetAutoRotate.1))]]]">CancelAlarm(WidgetRotate13520,true)</onfocus>
        <onfocus condition="!System.HasAlarm(WidgetRotate14520) + Control.IsVisible(14520) + !Control.HasFocus(14520) + [Skin.String(widgets_rotate,all) | Skin.String(widgets_rotate,520) | [Skin.String(widgets_rotate,override) + !String.IsEmpty(Container(900).ListItem.Property(widgetAutoRotate.1))]]">AlarmClock(WidgetRotate14520,Control.Move(14520,1),00:$PARAM[interval],silent,loop)</onfocus>
        <onfocus condition="System.HasAlarm(WidgetRotate14520) + ![Control.IsVisible(14520) + !Control.HasFocus(14520) + [Skin.String(widgets_rotate,all) | Skin.String(widgets_rotate,520) | [Skin.String(widgets_rotate,override) + !String.IsEmpty(Container(900).ListItem.Property(widgetAutoRotate.1))]]]">CancelAlarm(WidgetRotate14520,true)</onfocus>
        <onfocus condition="!System.HasAlarm(WidgetRotate15520) + Control.IsVisible(15520) + !Control.HasFocus(15520) + [Skin.String(widgets_rotate,all) | Skin.String(widgets_rotate,520) | [Skin.String(widgets_rotate,override) + !String.IsEmpty(Container(900).ListItem.Property(widgetAutoRotate.1))]]">AlarmClock(WidgetRotate15520,Control.Move(15520,1),00:$PARAM[interval],silent,loop)</onfocus>
        <onfocus condition="System.HasAlarm(WidgetRotate15520) + ![Control.IsVisible(15520) + !Control.HasFocus(15520) + [Skin.String(widgets_rotate,all) | Skin.String(widgets_rotate,520) | [Skin.String(widgets_rotate,override) + !String.IsEmpty(Container(900).ListItem.Property(widgetAutoRotate.1))]]]">CancelAlarm(WidgetRotate15520,true)</onfocus>

        <onfocus condition="!System.HasAlarm(WidgetRotate530) + Control.IsVisible(530) + !Control.HasFocus(530) + [Skin.String(widgets_rotate,all) | Skin.String(widgets_rotate,530) | [Skin.String(widgets_rotate,override) + !String.IsEmpty(Container(900).ListItem.Property(widgetAutoRotate.2))]]">AlarmClock(WidgetRotate530,Control.Move(530,1),00:$PARAM[interval],silent,loop)</onfocus>
        <onfocus condition="System.HasAlarm(WidgetRotate530) + ![Control.IsVisible(530) + !Control.HasFocus(530) + [Skin.String(widgets_rotate,all) | Skin.String(widgets_rotate,530) | [Skin.String(widgets_rotate,override) + !String.IsEmpty(Container(900).ListItem.Property(widgetAutoRotate.2))]]]">CancelAlarm(WidgetRotate530,true)</onfocus>
        <onfocus condition="!System.HasAlarm(WidgetRotate1530) + Control.IsVisible(1530) + !Control.HasFocus(1530) + [Skin.String(widgets_rotate,all) | Skin.String(widgets_rotate,530) | [Skin.String(widgets_rotate,override) + !String.IsEmpty(Container(900).ListItem.Property(widgetAutoRotate.2))]]">AlarmClock(WidgetRotate1530,Control.Move(1530,1),00:$PARAM[interval],silent,loop)</onfocus>
        <onfocus condition="System.HasAlarm(WidgetRotate1530) + ![Control.IsVisible(1530) + !Control.HasFocus(1530) + [Skin.String(widgets_rotate,all) | Skin.String(widgets_rotate,530) | [Skin.String(widgets_rotate,override) + !String.IsEmpty(Container(900).ListItem.Property(widgetAutoRotate.2))]]]">CancelAlarm(WidgetRotate1530,true)</onfocus>
        <onfocus condition="!System.HasAlarm(WidgetRotate2530) + Control.IsVisible(2530) + !Control.HasFocus(2530) + [Skin.String(widgets_rotate,all) | Skin.String(widgets_rotate,530) | [Skin.String(widgets_rotate,override) + !String.IsEmpty(Container(900).ListItem.Property(widgetAutoRotate.2))]]">AlarmClock(WidgetRotate2530,Control.Move(2530,1),00:$PARAM[interval],silent,loop)</onfocus>
        <onfocus condition="System.HasAlarm(WidgetRotate2530) + ![Control.IsVisible(2530) + !Control.HasFocus(2530) + [Skin.String(widgets_rotate,all) | Skin.String(widgets_rotate,530) | [Skin.String(widgets_rotate,override) + !String.IsEmpty(Container(900).ListItem.Property(widgetAutoRotate.2))]]]">CancelAlarm(WidgetRotate2530,true)</onfocus>
        <onfocus condition="!System.HasAlarm(WidgetRotate3530) + Control.IsVisible(3530) + !Control.HasFocus(3530) + [Skin.String(widgets_rotate,all) | Skin.String(widgets_rotate,530) | [Skin.String(widgets_rotate,override) + !String.IsEmpty(Container(900).ListItem.Property(widgetAutoRotate.2))]]">AlarmClock(WidgetRotate3530,Control.Move(3530,1),00:$PARAM[interval],silent,loop)</onfocus>
        <onfocus condition="System.HasAlarm(WidgetRotate3530) + ![Control.IsVisible(3530) + !Control.HasFocus(3530) + [Skin.String(widgets_rotate,all) | Skin.String(widgets_rotate,530) | [Skin.String(widgets_rotate,override) + !String.IsEmpty(Container(900).ListItem.Property(widgetAutoRotate.2))]]]">CancelAlarm(WidgetRotate3530,true)</onfocus>
        <onfocus condition="!System.HasAlarm(WidgetRotate4530) + Control.IsVisible(4530) + !Control.HasFocus(4530) + [Skin.String(widgets_rotate,all) | Skin.String(widgets_rotate,530) | [Skin.String(widgets_rotate,override) + !String.IsEmpty(Container(900).ListItem.Property(widgetAutoRotate.2))]]">AlarmClock(WidgetRotate4530,Control.Move(4530,1),00:$PARAM[interval],silent,loop)</onfocus>
        <onfocus condition="System.HasAlarm(WidgetRotate4530) + ![Control.IsVisible(4530) + !Control.HasFocus(4530) + [Skin.String(widgets_rotate,all) | Skin.String(widgets_rotate,530) | [Skin.String(widgets_rotate,override) + !String.IsEmpty(Container(900).ListItem.Property(widgetAutoRotate.2))]]]">CancelAlarm(WidgetRotate4530,true)</onfocus>
        <onfocus condition="!System.HasAlarm(WidgetRotate5530) + Control.IsVisible(5530) + !Control.HasFocus(5530) + [Skin.String(widgets_rotate,all) | Skin.String(widgets_rotate,530) | [Skin.String(widgets_rotate,override) + !String.IsEmpty(Container(900).ListItem.Property(widgetAutoRotate.2))]]">AlarmClock(WidgetRotate5530,Control.Move(5530,1),00:$PARAM[interval],silent,loop)</onfocus>
        <onfocus condition="System.HasAlarm(WidgetRotate5530) + ![Control.IsVisible(5530) + !Control.HasFocus(5530) + [Skin.String(widgets_rotate,all) | Skin.String(widgets_rotate,530) | [Skin.String(widgets_rotate,override) + !String.IsEmpty(Container(900).ListItem.Property(widgetAutoRotate.2))]]]">CancelAlarm(WidgetRotate5530,true)</onfocus>
        <onfocus condition="!System.HasAlarm(WidgetRotate6530) + Control.IsVisible(6530) + !Control.HasFocus(6530) + [Skin.String(widgets_rotate,all) | Skin.String(widgets_rotate,530) | [Skin.String(widgets_rotate,override) + !String.IsEmpty(Container(900).ListItem.Property(widgetAutoRotate.2))]]">AlarmClock(WidgetRotate6530,Control.Move(6530,1),00:$PARAM[interval],silent,loop)</onfocus>
        <onfocus condition="System.HasAlarm(WidgetRotate6530) + ![Control.IsVisible(6530) + !Control.HasFocus(6530) + [Skin.String(widgets_rotate,all) | Skin.String(widgets_rotate,530) | [Skin.String(widgets_rotate,override) + !String.IsEmpty(Container(900).ListItem.Property(widgetAutoRotate.2))]]]">CancelAlarm(WidgetRotate6530,true)</onfocus>
        <onfocus condition="!System.HasAlarm(WidgetRotate7530) + Control.IsVisible(7530) + !Control.HasFocus(7530) + [Skin.String(widgets_rotate,all) | Skin.String(widgets_rotate,530) | [Skin.String(widgets_rotate,override) + !String.IsEmpty(Container(900).ListItem.Property(widgetAutoRotate.2))]]">AlarmClock(WidgetRotate7530,Control.Move(7530,1),00:$PARAM[interval],silent,loop)</onfocus>
        <onfocus condition="System.HasAlarm(WidgetRotate7530) + ![Control.IsVisible(7530) + !Control.HasFocus(7530) + [Skin.String(widgets_rotate,all) | Skin.String(widgets_rotate,530) | [Skin.String(widgets_rotate,override) + !String.IsEmpty(Container(900).ListItem.Property(widgetAutoRotate.2))]]]">CancelAlarm(WidgetRotate7530,true)</onfocus>
        <onfocus condition="!System.HasAlarm(WidgetRotate8530) + Control.IsVisible(8530) + !Control.HasFocus(8530) + [Skin.String(widgets_rotate,all) | Skin.String(widgets_rotate,530) | [Skin.String(widgets_rotate,override) + !String.IsEmpty(Container(900).ListItem.Property(widgetAutoRotate.2))]]">AlarmClock(WidgetRotate8530,Control.Move(8530,1),00:$PARAM[interval],silent,loop)</onfocus>
        <onfocus condition="System.HasAlarm(WidgetRotate8530) + ![Control.IsVisible(8530) + !Control.HasFocus(8530) + [Skin.String(widgets_rotate,all) | Skin.String(widgets_rotate,530) | [Skin.String(widgets_rotate,override) + !String.IsEmpty(Container(900).ListItem.Property(widgetAutoRotate.2))]]]">CancelAlarm(WidgetRotate8530,true)</onfocus>
        <onfocus condition="!System.HasAlarm(WidgetRotate9530) + Control.IsVisible(9530) + !Control.HasFocus(9530) + [Skin.String(widgets_rotate,all) | Skin.String(widgets_rotate,530) | [Skin.String(widgets_rotate,override) + !String.IsEmpty(Container(900).ListItem.Property(widgetAutoRotate.2))]]">AlarmClock(WidgetRotate9530,Control.Move(9530,1),00:$PARAM[interval],silent,loop)</onfocus>
        <onfocus condition="System.HasAlarm(WidgetRotate9530) + ![Control.IsVisible(9530) + !Control.HasFocus(9530) + [Skin.String(widgets_rotate,all) | Skin.String(widgets_rotate,530) | [Skin.String(widgets_rotate,override) + !String.IsEmpty(Container(900).ListItem.Property(widgetAutoRotate.2))]]]">CancelAlarm(WidgetRotate9530,true)</onfocus>
        <onfocus condition="!System.HasAlarm(WidgetRotate10530) + Control.IsVisible(10530) + !Control.HasFocus(10530) + [Skin.String(widgets_rotate,all) | Skin.String(widgets_rotate,530) | [Skin.String(widgets_rotate,override) + !String.IsEmpty(Container(900).ListItem.Property(widgetAutoRotate.2))]]">AlarmClock(WidgetRotate10530,Control.Move(10530,1),00:$PARAM[interval],silent,loop)</onfocus>
        <onfocus condition="System.HasAlarm(WidgetRotate10530) + ![Control.IsVisible(10530) + !Control.HasFocus(10530) + [Skin.String(widgets_rotate,all) | Skin.String(widgets_rotate,530) | [Skin.String(widgets_rotate,override) + !String.IsEmpty(Container(900).ListItem.Property(widgetAutoRotate.2))]]]">CancelAlarm(WidgetRotate10530,true)</onfocus>
        <onfocus condition="!System.HasAlarm(WidgetRotate11530) + Control.IsVisible(11530) + !Control.HasFocus(11530) + [Skin.String(widgets_rotate,all) | Skin.String(widgets_rotate,530) | [Skin.String(widgets_rotate,override) + !String.IsEmpty(Container(900).ListItem.Property(widgetAutoRotate.2))]]">AlarmClock(WidgetRotate11530,Control.Move(11530,1),00:$PARAM[interval],silent,loop)</onfocus>
        <onfocus condition="System.HasAlarm(WidgetRotate11530) + ![Control.IsVisible(11530) + !Control.HasFocus(11530) + [Skin.String(widgets_rotate,all) | Skin.String(widgets_rotate,530) | [Skin.String(widgets_rotate,override) + !String.IsEmpty(Container(900).ListItem.Property(widgetAutoRotate.2))]]]">CancelAlarm(WidgetRotate11530,true)</onfocus>
        <onfocus condition="!System.HasAlarm(WidgetRotate12530) + Control.IsVisible(12530) + !Control.HasFocus(12530) + [Skin.String(widgets_rotate,all) | Skin.String(widgets_rotate,530) | [Skin.String(widgets_rotate,override) + !String.IsEmpty(Container(900).ListItem.Property(widgetAutoRotate.2))]]">AlarmClock(WidgetRotate12530,Control.Move(12530,1),00:$PARAM[interval],silent,loop)</onfocus>
        <onfocus condition="System.HasAlarm(WidgetRotate12530) + ![Control.IsVisible(12530) + !Control.HasFocus(12530) + [Skin.String(widgets_rotate,all) | Skin.String(widgets_rotate,530) | [Skin.String(widgets_rotate,override) + !String.IsEmpty(Container(900).ListItem.Property(widgetAutoRotate.2))]]]">CancelAlarm(WidgetRotate12530,true)</onfocus>
        <onfocus condition="!System.HasAlarm(WidgetRotate13530) + Control.IsVisible(13530) + !Control.HasFocus(13530) + [Skin.String(widgets_rotate,all) | Skin.String(widgets_rotate,530) | [Skin.String(widgets_rotate,override) + !String.IsEmpty(Container(900).ListItem.Property(widgetAutoRotate.2))]]">AlarmClock(WidgetRotate13530,Control.Move(13530,1),00:$PARAM[interval],silent,loop)</onfocus>
        <onfocus condition="System.HasAlarm(WidgetRotate13530) + ![Control.IsVisible(13530) + !Control.HasFocus(13530) + [Skin.String(widgets_rotate,all) | Skin.String(widgets_rotate,530) | [Skin.String(widgets_rotate,override) + !String.IsEmpty(Container(900).ListItem.Property(widgetAutoRotate.2))]]]">CancelAlarm(WidgetRotate13530,true)</onfocus>
        <onfocus condition="!System.HasAlarm(WidgetRotate14530) + Control.IsVisible(14530) + !Control.HasFocus(14530) + [Skin.String(widgets_rotate,all) | Skin.String(widgets_rotate,530) | [Skin.String(widgets_rotate,override) + !String.IsEmpty(Container(900).ListItem.Property(widgetAutoRotate.2))]]">AlarmClock(WidgetRotate14530,Control.Move(14530,1),00:$PARAM[interval],silent,loop)</onfocus>
        <onfocus condition="System.HasAlarm(WidgetRotate14530) + ![Control.IsVisible(14530) + !Control.HasFocus(14530) + [Skin.String(widgets_rotate,all) | Skin.String(widgets_rotate,530) | [Skin.String(widgets_rotate,override) + !String.IsEmpty(Container(900).ListItem.Property(widgetAutoRotate.2))]]]">CancelAlarm(WidgetRotate14530,true)</onfocus>
        <onfocus condition="!System.HasAlarm(WidgetRotate15530) + Control.IsVisible(15530) + !Control.HasFocus(15530) + [Skin.String(widgets_rotate,all) | Skin.String(widgets_rotate,530) | [Skin.String(widgets_rotate,override) + !String.IsEmpty(Container(900).ListItem.Property(widgetAutoRotate.2))]]">AlarmClock(WidgetRotate15530,Control.Move(15530,1),00:$PARAM[interval],silent,loop)</onfocus>
        <onfocus condition="System.HasAlarm(WidgetRotate15530) + ![Control.IsVisible(15530) + !Control.HasFocus(15530) + [Skin.String(widgets_rotate,all) | Skin.String(widgets_rotate,530) | [Skin.String(widgets_rotate,override) + !String.IsEmpty(Container(900).ListItem.Property(widgetAutoRotate.2))]]]">CancelAlarm(WidgetRotate15530,true)</onfocus>

        <onfocus condition="!System.HasAlarm(WidgetRotate540) + Control.IsVisible(540) + !Control.HasFocus(540) + [Skin.String(widgets_rotate,all) | Skin.String(widgets_rotate,540) | [Skin.String(widgets_rotate,override) + !String.IsEmpty(Container(900).ListItem.Property(widgetAutoRotate.3))]]">AlarmClock(WidgetRotate540,Control.Move(540,1),00:$PARAM[interval],silent,loop)</onfocus>
        <onfocus condition="System.HasAlarm(WidgetRotate540) + ![Control.IsVisible(540) + !Control.HasFocus(540) + [Skin.String(widgets_rotate,all) | Skin.String(widgets_rotate,540) | [Skin.String(widgets_rotate,override) + !String.IsEmpty(Container(900).ListItem.Property(widgetAutoRotate.3))]]]">CancelAlarm(WidgetRotate540,true)</onfocus>
        <onfocus condition="!System.HasAlarm(WidgetRotate1540) + Control.IsVisible(1540) + !Control.HasFocus(1540) + [Skin.String(widgets_rotate,all) | Skin.String(widgets_rotate,540) | [Skin.String(widgets_rotate,override) + !String.IsEmpty(Container(900).ListItem.Property(widgetAutoRotate.3))]]">AlarmClock(WidgetRotate1540,Control.Move(1540,1),00:$PARAM[interval],silent,loop)</onfocus>
        <onfocus condition="System.HasAlarm(WidgetRotate1540) + ![Control.IsVisible(1540) + !Control.HasFocus(1540) + [Skin.String(widgets_rotate,all) | Skin.String(widgets_rotate,540) | [Skin.String(widgets_rotate,override) + !String.IsEmpty(Container(900).ListItem.Property(widgetAutoRotate.3))]]]">CancelAlarm(WidgetRotate1540,true)</onfocus>
        <onfocus condition="!System.HasAlarm(WidgetRotate2540) + Control.IsVisible(2540) + !Control.HasFocus(2540) + [Skin.String(widgets_rotate,all) | Skin.String(widgets_rotate,540) | [Skin.String(widgets_rotate,override) + !String.IsEmpty(Container(900).ListItem.Property(widgetAutoRotate.3))]]">AlarmClock(WidgetRotate2540,Control.Move(2540,1),00:$PARAM[interval],silent,loop)</onfocus>
        <onfocus condition="System.HasAlarm(WidgetRotate2540) + ![Control.IsVisible(2540) + !Control.HasFocus(2540) + [Skin.String(widgets_rotate,all) | Skin.String(widgets_rotate,540) | [Skin.String(widgets_rotate,override) + !String.IsEmpty(Container(900).ListItem.Property(widgetAutoRotate.3))]]]">CancelAlarm(WidgetRotate2540,true)</onfocus>
        <onfocus condition="!System.HasAlarm(WidgetRotate3540) + Control.IsVisible(3540) + !Control.HasFocus(3540) + [Skin.String(widgets_rotate,all) | Skin.String(widgets_rotate,540) | [Skin.String(widgets_rotate,override) + !String.IsEmpty(Container(900).ListItem.Property(widgetAutoRotate.3))]]">AlarmClock(WidgetRotate3540,Control.Move(3540,1),00:$PARAM[interval],silent,loop)</onfocus>
        <onfocus condition="System.HasAlarm(WidgetRotate3540) + ![Control.IsVisible(3540) + !Control.HasFocus(3540) + [Skin.String(widgets_rotate,all) | Skin.String(widgets_rotate,540) | [Skin.String(widgets_rotate,override) + !String.IsEmpty(Container(900).ListItem.Property(widgetAutoRotate.3))]]]">CancelAlarm(WidgetRotate3540,true)</onfocus>
        <onfocus condition="!System.HasAlarm(WidgetRotate4540) + Control.IsVisible(4540) + !Control.HasFocus(4540) + [Skin.String(widgets_rotate,all) | Skin.String(widgets_rotate,540) | [Skin.String(widgets_rotate,override) + !String.IsEmpty(Container(900).ListItem.Property(widgetAutoRotate.3))]]">AlarmClock(WidgetRotate4540,Control.Move(4540,1),00:$PARAM[interval],silent,loop)</onfocus>
        <onfocus condition="System.HasAlarm(WidgetRotate4540) + ![Control.IsVisible(4540) + !Control.HasFocus(4540) + [Skin.String(widgets_rotate,all) | Skin.String(widgets_rotate,540) | [Skin.String(widgets_rotate,override) + !String.IsEmpty(Container(900).ListItem.Property(widgetAutoRotate.3))]]]">CancelAlarm(WidgetRotate4540,true)</onfocus>
        <onfocus condition="!System.HasAlarm(WidgetRotate5540) + Control.IsVisible(5540) + !Control.HasFocus(5540) + [Skin.String(widgets_rotate,all) | Skin.String(widgets_rotate,540) | [Skin.String(widgets_rotate,override) + !String.IsEmpty(Container(900).ListItem.Property(widgetAutoRotate.3))]]">AlarmClock(WidgetRotate5540,Control.Move(5540,1),00:$PARAM[interval],silent,loop)</onfocus>
        <onfocus condition="System.HasAlarm(WidgetRotate5540) + ![Control.IsVisible(5540) + !Control.HasFocus(5540) + [Skin.String(widgets_rotate,all) | Skin.String(widgets_rotate,540) | [Skin.String(widgets_rotate,override) + !String.IsEmpty(Container(900).ListItem.Property(widgetAutoRotate.3))]]]">CancelAlarm(WidgetRotate5540,true)</onfocus>
        <onfocus condition="!System.HasAlarm(WidgetRotate6540) + Control.IsVisible(6540) + !Control.HasFocus(6540) + [Skin.String(widgets_rotate,all) | Skin.String(widgets_rotate,540) | [Skin.String(widgets_rotate,override) + !String.IsEmpty(Container(900).ListItem.Property(widgetAutoRotate.3))]]">AlarmClock(WidgetRotate6540,Control.Move(6540,1),00:$PARAM[interval],silent,loop)</onfocus>
        <onfocus condition="System.HasAlarm(WidgetRotate6540) + ![Control.IsVisible(6540) + !Control.HasFocus(6540) + [Skin.String(widgets_rotate,all) | Skin.String(widgets_rotate,540) | [Skin.String(widgets_rotate,override) + !String.IsEmpty(Container(900).ListItem.Property(widgetAutoRotate.3))]]]">CancelAlarm(WidgetRotate6540,true)</onfocus>
        <onfocus condition="!System.HasAlarm(WidgetRotate7540) + Control.IsVisible(7540) + !Control.HasFocus(7540) + [Skin.String(widgets_rotate,all) | Skin.String(widgets_rotate,540) | [Skin.String(widgets_rotate,override) + !String.IsEmpty(Container(900).ListItem.Property(widgetAutoRotate.3))]]">AlarmClock(WidgetRotate7540,Control.Move(7540,1),00:$PARAM[interval],silent,loop)</onfocus>
        <onfocus condition="System.HasAlarm(WidgetRotate7540) + ![Control.IsVisible(7540) + !Control.HasFocus(7540) + [Skin.String(widgets_rotate,all) | Skin.String(widgets_rotate,540) | [Skin.String(widgets_rotate,override) + !String.IsEmpty(Container(900).ListItem.Property(widgetAutoRotate.3))]]]">CancelAlarm(WidgetRotate7540,true)</onfocus>
        <onfocus condition="!System.HasAlarm(WidgetRotate8540) + Control.IsVisible(8540) + !Control.HasFocus(8540) + [Skin.String(widgets_rotate,all) | Skin.String(widgets_rotate,540) | [Skin.String(widgets_rotate,override) + !String.IsEmpty(Container(900).ListItem.Property(widgetAutoRotate.3))]]">AlarmClock(WidgetRotate8540,Control.Move(8540,1),00:$PARAM[interval],silent,loop)</onfocus>
        <onfocus condition="System.HasAlarm(WidgetRotate8540) + ![Control.IsVisible(8540) + !Control.HasFocus(8540) + [Skin.String(widgets_rotate,all) | Skin.String(widgets_rotate,540) | [Skin.String(widgets_rotate,override) + !String.IsEmpty(Container(900).ListItem.Property(widgetAutoRotate.3))]]]">CancelAlarm(WidgetRotate8540,true)</onfocus>
        <onfocus condition="!System.HasAlarm(WidgetRotate9540) + Control.IsVisible(9540) + !Control.HasFocus(9540) + [Skin.String(widgets_rotate,all) | Skin.String(widgets_rotate,540) | [Skin.String(widgets_rotate,override) + !String.IsEmpty(Container(900).ListItem.Property(widgetAutoRotate.3))]]">AlarmClock(WidgetRotate9540,Control.Move(9540,1),00:$PARAM[interval],silent,loop)</onfocus>
        <onfocus condition="System.HasAlarm(WidgetRotate9540) + ![Control.IsVisible(9540) + !Control.HasFocus(9540) + [Skin.String(widgets_rotate,all) | Skin.String(widgets_rotate,540) | [Skin.String(widgets_rotate,override) + !String.IsEmpty(Container(900).ListItem.Property(widgetAutoRotate.3))]]]">CancelAlarm(WidgetRotate9540,true)</onfocus>
        <onfocus condition="!System.HasAlarm(WidgetRotate10540) + Control.IsVisible(10540) + !Control.HasFocus(10540) + [Skin.String(widgets_rotate,all) | Skin.String(widgets_rotate,540) | [Skin.String(widgets_rotate,override) + !String.IsEmpty(Container(900).ListItem.Property(widgetAutoRotate.3))]]">AlarmClock(WidgetRotate10540,Control.Move(10540,1),00:$PARAM[interval],silent,loop)</onfocus>
        <onfocus condition="System.HasAlarm(WidgetRotate10540) + ![Control.IsVisible(10540) + !Control.HasFocus(10540) + [Skin.String(widgets_rotate,all) | Skin.String(widgets_rotate,540) | [Skin.String(widgets_rotate,override) + !String.IsEmpty(Container(900).ListItem.Property(widgetAutoRotate.3))]]]">CancelAlarm(WidgetRotate10540,true)</onfocus>
        <onfocus condition="!System.HasAlarm(WidgetRotate11540) + Control.IsVisible(11540) + !Control.HasFocus(11540) + [Skin.String(widgets_rotate,all) | Skin.String(widgets_rotate,540) | [Skin.String(widgets_rotate,override) + !String.IsEmpty(Container(900).ListItem.Property(widgetAutoRotate.3))]]">AlarmClock(WidgetRotate11540,Control.Move(11540,1),00:$PARAM[interval],silent,loop)</onfocus>
        <onfocus condition="System.HasAlarm(WidgetRotate11540) + ![Control.IsVisible(11540) + !Control.HasFocus(11540) + [Skin.String(widgets_rotate,all) | Skin.String(widgets_rotate,540) | [Skin.String(widgets_rotate,override) + !String.IsEmpty(Container(900).ListItem.Property(widgetAutoRotate.3))]]]">CancelAlarm(WidgetRotate11540,true)</onfocus>
        <onfocus condition="!System.HasAlarm(WidgetRotate12540) + Control.IsVisible(12540) + !Control.HasFocus(12540) + [Skin.String(widgets_rotate,all) | Skin.String(widgets_rotate,540) | [Skin.String(widgets_rotate,override) + !String.IsEmpty(Container(900).ListItem.Property(widgetAutoRotate.3))]]">AlarmClock(WidgetRotate12540,Control.Move(12540,1),00:$PARAM[interval],silent,loop)</onfocus>
        <onfocus condition="System.HasAlarm(WidgetRotate12540) + ![Control.IsVisible(12540) + !Control.HasFocus(12540) + [Skin.String(widgets_rotate,all) | Skin.String(widgets_rotate,540) | [Skin.String(widgets_rotate,override) + !String.IsEmpty(Container(900).ListItem.Property(widgetAutoRotate.3))]]]">CancelAlarm(WidgetRotate12540,true)</onfocus>
        <onfocus condition="!System.HasAlarm(WidgetRotate13540) + Control.IsVisible(13540) + !Control.HasFocus(13540) + [Skin.String(widgets_rotate,all) | Skin.String(widgets_rotate,540) | [Skin.String(widgets_rotate,override) + !String.IsEmpty(Container(900).ListItem.Property(widgetAutoRotate.3))]]">AlarmClock(WidgetRotate13540,Control.Move(13540,1),00:$PARAM[interval],silent,loop)</onfocus>
        <onfocus condition="System.HasAlarm(WidgetRotate13540) + ![Control.IsVisible(13540) + !Control.HasFocus(13540) + [Skin.String(widgets_rotate,all) | Skin.String(widgets_rotate,540) | [Skin.String(widgets_rotate,override) + !String.IsEmpty(Container(900).ListItem.Property(widgetAutoRotate.3))]]]">CancelAlarm(WidgetRotate13540,true)</onfocus>
        <onfocus condition="!System.HasAlarm(WidgetRotate14540) + Control.IsVisible(14540) + !Control.HasFocus(14540) + [Skin.String(widgets_rotate,all) | Skin.String(widgets_rotate,540) | [Skin.String(widgets_rotate,override) + !String.IsEmpty(Container(900).ListItem.Property(widgetAutoRotate.3))]]">AlarmClock(WidgetRotate14540,Control.Move(14540,1),00:$PARAM[interval],silent,loop)</onfocus>
        <onfocus condition="System.HasAlarm(WidgetRotate14540) + ![Control.IsVisible(14540) + !Control.HasFocus(14540) + [Skin.String(widgets_rotate,all) | Skin.String(widgets_rotate,540) | [Skin.String(widgets_rotate,override) + !String.IsEmpty(Container(900).ListItem.Property(widgetAutoRotate.3))]]]">CancelAlarm(WidgetRotate14540,true)</onfocus>
        <onfocus condition="!System.HasAlarm(WidgetRotate15540) + Control.IsVisible(15540) + !Control.HasFocus(15540) + [Skin.String(widgets_rotate,all) | Skin.String(widgets_rotate,540) | [Skin.String(widgets_rotate,override) + !String.IsEmpty(Container(900).ListItem.Property(widgetAutoRotate.3))]]">AlarmClock(WidgetRotate15540,Control.Move(15540,1),00:$PARAM[interval],silent,loop)</onfocus>
        <onfocus condition="System.HasAlarm(WidgetRotate15540) + ![Control.IsVisible(15540) + !Control.HasFocus(15540) + [Skin.String(widgets_rotate,all) | Skin.String(widgets_rotate,540) | [Skin.String(widgets_rotate,override) + !String.IsEmpty(Container(900).ListItem.Property(widgetAutoRotate.3))]]]">CancelAlarm(WidgetRotate15540,true)</onfocus>

    </include>

    <include name="WidgetsAutoRotateUnload">
        <onunload condition="System.HasAlarm(WidgetRotate1508)">CancelAlarm(WidgetRotate1508,true)</onunload>

        <onunload condition="System.HasAlarm(WidgetRotate510)">CancelAlarm(WidgetRotate510,true)</onunload>
        <onunload condition="System.HasAlarm(WidgetRotate1510)">CancelAlarm(WidgetRotate1510,true)</onunload>
        <onunload condition="System.HasAlarm(WidgetRotate2510)">CancelAlarm(WidgetRotate2510,true)</onunload>
        <onunload condition="System.HasAlarm(WidgetRotate3510)">CancelAlarm(WidgetRotate3510,true)</onunload>
        <onunload condition="System.HasAlarm(WidgetRotate4510)">CancelAlarm(WidgetRotate4510,true)</onunload>
        <onunload condition="System.HasAlarm(WidgetRotate5510)">CancelAlarm(WidgetRotate5510,true)</onunload>
        <onunload condition="System.HasAlarm(WidgetRotate6510)">CancelAlarm(WidgetRotate6510,true)</onunload>
        <onunload condition="System.HasAlarm(WidgetRotate7510)">CancelAlarm(WidgetRotate7510,true)</onunload>
        <onunload condition="System.HasAlarm(WidgetRotate8510)">CancelAlarm(WidgetRotate8510,true)</onunload>
        <onunload condition="System.HasAlarm(WidgetRotate9510)">CancelAlarm(WidgetRotate9510,true)</onunload>
        <onunload condition="System.HasAlarm(WidgetRotate10510)">CancelAlarm(WidgetRotate10510,true)</onunload>
        <onunload condition="System.HasAlarm(WidgetRotate11510)">CancelAlarm(WidgetRotate11510,true)</onunload>
        <onunload condition="System.HasAlarm(WidgetRotate12510)">CancelAlarm(WidgetRotate12510,true)</onunload>
        <onunload condition="System.HasAlarm(WidgetRotate13510)">CancelAlarm(WidgetRotate13510,true)</onunload>
        <onunload condition="System.HasAlarm(WidgetRotate14510)">CancelAlarm(WidgetRotate14510,true)</onunload>
        <onunload condition="System.HasAlarm(WidgetRotate15510)">CancelAlarm(WidgetRotate15510,true)</onunload>

        <onunload condition="System.HasAlarm(WidgetRotate520)">CancelAlarm(WidgetRotate520,true)</onunload>
        <onunload condition="System.HasAlarm(WidgetRotate1520)">CancelAlarm(WidgetRotate1520,true)</onunload>
        <onunload condition="System.HasAlarm(WidgetRotate2520)">CancelAlarm(WidgetRotate2520,true)</onunload>
        <onunload condition="System.HasAlarm(WidgetRotate3520)">CancelAlarm(WidgetRotate3520,true)</onunload>
        <onunload condition="System.HasAlarm(WidgetRotate4520)">CancelAlarm(WidgetRotate4520,true)</onunload>
        <onunload condition="System.HasAlarm(WidgetRotate5520)">CancelAlarm(WidgetRotate5520,true)</onunload>
        <onunload condition="System.HasAlarm(WidgetRotate6520)">CancelAlarm(WidgetRotate6520,true)</onunload>
        <onunload condition="System.HasAlarm(WidgetRotate7520)">CancelAlarm(WidgetRotate7520,true)</onunload>
        <onunload condition="System.HasAlarm(WidgetRotate8520)">CancelAlarm(WidgetRotate8520,true)</onunload>
        <onunload condition="System.HasAlarm(WidgetRotate9520)">CancelAlarm(WidgetRotate9520,true)</onunload>
        <onunload condition="System.HasAlarm(WidgetRotate10520)">CancelAlarm(WidgetRotate10520,true)</onunload>
        <onunload condition="System.HasAlarm(WidgetRotate11520)">CancelAlarm(WidgetRotate11520,true)</onunload>
        <onunload condition="System.HasAlarm(WidgetRotate12520)">CancelAlarm(WidgetRotate12520,true)</onunload>
        <onunload condition="System.HasAlarm(WidgetRotate13520)">CancelAlarm(WidgetRotate13520,true)</onunload>
        <onunload condition="System.HasAlarm(WidgetRotate14520)">CancelAlarm(WidgetRotate14520,true)</onunload>
        <onunload condition="System.HasAlarm(WidgetRotate15520)">CancelAlarm(WidgetRotate15520,true)</onunload>

        <onunload condition="System.HasAlarm(WidgetRotate530)">CancelAlarm(WidgetRotate530,true)</onunload>
        <onunload condition="System.HasAlarm(WidgetRotate1530)">CancelAlarm(WidgetRotate1530,true)</onunload>
        <onunload condition="System.HasAlarm(WidgetRotate2530)">CancelAlarm(WidgetRotate2530,true)</onunload>
        <onunload condition="System.HasAlarm(WidgetRotate3530)">CancelAlarm(WidgetRotate3530,true)</onunload>
        <onunload condition="System.HasAlarm(WidgetRotate4530)">CancelAlarm(WidgetRotate4530,true)</onunload>
        <onunload condition="System.HasAlarm(WidgetRotate5530)">CancelAlarm(WidgetRotate5530,true)</onunload>
        <onunload condition="System.HasAlarm(WidgetRotate6530)">CancelAlarm(WidgetRotate6530,true)</onunload>
        <onunload condition="System.HasAlarm(WidgetRotate7530)">CancelAlarm(WidgetRotate7530,true)</onunload>
        <onunload condition="System.HasAlarm(WidgetRotate8530)">CancelAlarm(WidgetRotate8530,true)</onunload>
        <onunload condition="System.HasAlarm(WidgetRotate9530)">CancelAlarm(WidgetRotate9530,true)</onunload>
        <onunload condition="System.HasAlarm(WidgetRotate10530)">CancelAlarm(WidgetRotate10530,true)</onunload>
        <onunload condition="System.HasAlarm(WidgetRotate11530)">CancelAlarm(WidgetRotate11530,true)</onunload>
        <onunload condition="System.HasAlarm(WidgetRotate12530)">CancelAlarm(WidgetRotate12530,true)</onunload>
        <onunload condition="System.HasAlarm(WidgetRotate13530)">CancelAlarm(WidgetRotate13530,true)</onunload>
        <onunload condition="System.HasAlarm(WidgetRotate14530)">CancelAlarm(WidgetRotate14530,true)</onunload>
        <onunload condition="System.HasAlarm(WidgetRotate15530)">CancelAlarm(WidgetRotate15530,true)</onunload>

        <onunload condition="System.HasAlarm(WidgetRotate540)">CancelAlarm(WidgetRotate540,true)</onunload>
        <onunload condition="System.HasAlarm(WidgetRotate1540)">CancelAlarm(WidgetRotate1540,true)</onunload>
        <onunload condition="System.HasAlarm(WidgetRotate2540)">CancelAlarm(WidgetRotate2540,true)</onunload>
        <onunload condition="System.HasAlarm(WidgetRotate3540)">CancelAlarm(WidgetRotate3540,true)</onunload>
        <onunload condition="System.HasAlarm(WidgetRotate4540)">CancelAlarm(WidgetRotate4540,true)</onunload>
        <onunload condition="System.HasAlarm(WidgetRotate5540)">CancelAlarm(WidgetRotate5540,true)</onunload>
        <onunload condition="System.HasAlarm(WidgetRotate6540)">CancelAlarm(WidgetRotate6540,true)</onunload>
        <onunload condition="System.HasAlarm(WidgetRotate7540)">CancelAlarm(WidgetRotate7540,true)</onunload>
        <onunload condition="System.HasAlarm(WidgetRotate8540)">CancelAlarm(WidgetRotate8540,true)</onunload>
        <onunload condition="System.HasAlarm(WidgetRotate9540)">CancelAlarm(WidgetRotate9540,true)</onunload>
        <onunload condition="System.HasAlarm(WidgetRotate10540)">CancelAlarm(WidgetRotate10540,true)</onunload>
        <onunload condition="System.HasAlarm(WidgetRotate11540)">CancelAlarm(WidgetRotate11540,true)</onunload>
        <onunload condition="System.HasAlarm(WidgetRotate12540)">CancelAlarm(WidgetRotate12540,true)</onunload>
        <onunload condition="System.HasAlarm(WidgetRotate13540)">CancelAlarm(WidgetRotate13540,true)</onunload>
        <onunload condition="System.HasAlarm(WidgetRotate14540)">CancelAlarm(WidgetRotate14540,true)</onunload>
        <onunload condition="System.HasAlarm(WidgetRotate15540)">CancelAlarm(WidgetRotate15540,true)</onunload>

    </include>

    <include name="WidgetPlaybackFocus">
        <onload condition="!String.IsEmpty(Window(Home).Property(LastFocusWidget))">RunScript(script.skin.helper.service,action=setfocus,control=$INFO[Window(Home).Property(LastFocusWidget)],relativeposition=$INFO[Window(Home).Property(LastFocusWidgetPos)],fallback=300)</onload>
        <onunload condition="Control.HasFocus(77777) | ControlGroup(77777).HasFocus()">SetProperty(LastFocusWidget,$INFO[Window(Home).Property(SkinHelper.WidgetContainer)],Home)</onunload>
        <onunload condition="!Control.HasFocus(77777) + !ControlGroup(77777).HasFocus()">ClearProperty(LastFocusWidget,Home)</onunload>
    </include>

    <include name="Fade10">
        <animation effect="fade" end="10" time="0" condition="true">Conditional</animation>
    </include>
    <include name="Fade20">
        <animation effect="fade" end="20" time="0" condition="true">Conditional</animation>
    </include>
    <include name="Fade30">
        <animation effect="fade" end="30" time="0" condition="true">Conditional</animation>
    </include>
    <include name="Fade40">
        <animation effect="fade" end="40" time="0" condition="true">Conditional</animation>
    </include>
    <include name="Fade50">
        <animation effect="fade" end="50" time="0" condition="true">Conditional</animation>
    </include>
    <include name="Fade60">
        <animation effect="fade" end="60" time="0" condition="true">Conditional</animation>
    </include>
    <include name="Fade70">
        <animation effect="fade" end="70" time="0" condition="true">Conditional</animation>
    </include>
    <include name="Fade80">
        <animation effect="fade" end="80" time="0" condition="true">Conditional</animation>
    </include>
    <include name="Fade90">
        <animation effect="fade" end="90" time="0" condition="true">Conditional</animation>
    </include>
    <include name="Fade100">
        <animation effect="fade" end="100" time="0" condition="true">Conditional</animation>
    </include>

</includes>
