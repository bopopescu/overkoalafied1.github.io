<?xml version="1.0" encoding="utf-8"?>
<!-- BINGIE -->
<includes>
    <!-- includes -->

    <!-- Fixed Focus Navigation -->
    <include name="Fixed_Focus_Navigation">
        <!-- set current/previous properties -->
        <onfocus condition="!String.IsEqual(Window(Home).Property(CurrentWidgetID),$PARAM[widgetid])">SetProperty(PrevWidgetID,$INFO[Window(Home).Property(CurrentWidgetID)],Home)</onfocus>
        <onfocus condition="!String.IsEqual(Window(Home).Property(CurrentWidgetID),$PARAM[widgetid])">SetProperty(PrevWidgetPos,$INFO[Window(Home).Property(CurrentWidgetPos)],Home)</onfocus>
        <onfocus>SetProperty(CurrentWidgetID,$PARAM[widgetid],Home)</onfocus>
        <!-- work-around kodi bug? current widget position is not updated consistently - recheck with kodi updates -->
        <onfocus condition="!String.IsEqual(Window(Home).Property(CurrentWidgetID),$PARAM[widgetid])">SetProperty(CurrentWidgetPos,$INFO[Container(77777).Position],Home)</onfocus>
        <onfocus condition="!String.IsEmpty(Window(Home).Property(goToWidgetsStart))">SetProperty(CurrentWidgetPos,2,Home)</onfocus>
        <!-- animations -->
        <animation effect="slide" end="0,$PARAM[FixedAnimationHeight]" condition="Integer.IsGreater(Container(77777).Position,2)">Conditional</animation>
        <animation effect="slide" end="0,$PARAM[FixedAnimationHeight]" condition="Integer.IsGreater(Container(77777).Position,4)">Conditional</animation>
        <animation effect="slide" end="0,$PARAM[FixedAnimationHeight]" condition="Integer.IsGreater(Container(77777).Position,6)">Conditional</animation>
        <animation effect="slide" end="0,$PARAM[FixedAnimationHeight]" condition="Integer.IsGreater(Container(77777).Position,8)">Conditional</animation>
        <animation effect="slide" end="0,$PARAM[FixedAnimationHeight]" condition="Integer.IsGreater(Container(77777).Position,10)">Conditional</animation>
        <animation effect="slide" end="0,$PARAM[FixedAnimationHeight]" condition="Integer.IsGreater(Container(77777).Position,12)">Conditional</animation>
        <animation effect="slide" end="0,$PARAM[FixedAnimationHeight]" condition="Integer.IsGreater(Container(77777).Position,14)">Conditional</animation>
        <animation effect="slide" end="0,$PARAM[FixedAnimationHeight]" condition="Integer.IsGreater(Container(77777).Position,16)">Conditional</animation>
        <animation effect="slide" end="0,$PARAM[FixedAnimationHeight]" condition="Integer.IsGreater(Container(77777).Position,18)">Conditional</animation>
        <animation effect="slide" end="0,$PARAM[FixedAnimationHeight]" condition="Integer.IsGreater(Container(77777).Position,20)">Conditional</animation>
        <animation effect="slide" end="0,$PARAM[FixedAnimationHeight]" condition="Integer.IsGreater(Container(77777).Position,22)">Conditional</animation>
        <animation effect="slide" end="0,$PARAM[FixedAnimationHeight]" condition="Integer.IsGreater(Container(77777).Position,24)">Conditional</animation>
        <animation effect="slide" end="0,$PARAM[FixedAnimationHeight]" condition="Integer.IsGreater(Container(77777).Position,26)">Conditional</animation>
        <animation effect="slide" end="0,$PARAM[FixedAnimationHeight]" condition="Integer.IsGreater(Container(77777).Position,28)">Conditional</animation>
        <animation effect="slide" end="0,$PARAM[FixedAnimationHeight]" condition="Integer.IsGreater(Container(77777).Position,30)">Conditional</animation>
        <animation effect="slide" end="0,$PARAM[FixedAnimationHeight]" condition="Integer.IsGreater(Container(77777).Position,32)">Conditional</animation>
        <animation effect="slide" end="0,$PARAM[FixedAnimationHeight]" condition="Integer.IsGreater(Container(77777).Position,34)">Conditional</animation>
        <animation effect="slide" end="0,$PARAM[FixedAnimationHeight]" condition="Integer.IsGreater(Container(77777).Position,36)">Conditional</animation>
        <animation effect="slide" end="0,$PARAM[FixedAnimationHeight]" condition="Integer.IsGreater(Container(77777).Position,38)">Conditional</animation>
        <animation effect="slide" end="0,$PARAM[FixedAnimationHeight]" condition="Integer.IsGreater(Container(77777).Position,40)">Conditional</animation>
        <animation effect="slide" end="0,$PARAM[FixedAnimationHeight]" condition="Integer.IsGreater(Container(77777).Position,42)">Conditional</animation>
        <animation effect="slide" end="0,$PARAM[FixedAnimationHeight]" condition="Integer.IsGreater(Container(77777).Position,44)">Conditional</animation>
        <animation effect="slide" end="0,$PARAM[FixedAnimationHeight]" condition="Integer.IsGreater(Container(77777).Position,46)">Conditional</animation>
        <animation effect="slide" end="0,$PARAM[FixedAnimationHeight]" condition="Integer.IsGreater(Container(77777).Position,48)">Conditional</animation>
        <animation effect="slide" end="0,$PARAM[FixedAnimationHeight]" condition="Integer.IsGreater(Container(77777).Position,50)">Conditional</animation>
        <animation effect="slide" end="0,$PARAM[FixedAnimationHeight]" condition="Integer.IsGreater(Container(77777).Position,52)">Conditional</animation>
        <animation effect="slide" end="0,$PARAM[FixedAnimationHeight]" condition="Integer.IsGreater(Container(77777).Position,54)">Conditional</animation>
        <animation effect="slide" end="0,$PARAM[FixedAnimationHeight]" condition="Integer.IsGreater(Container(77777).Position,56)">Conditional</animation>
        <animation effect="slide" end="0,$PARAM[FixedAnimationHeight]" condition="Integer.IsGreater(Container(77777).Position,58)">Conditional</animation>
        <animation effect="slide" end="0,$PARAM[FixedAnimationHeight]" condition="Integer.IsGreater(Container(77777).Position,60)">Conditional</animation>
        <animation effect="slide" end="0,$PARAM[FixedAnimationHeight]" condition="Integer.IsGreater(Container(77777).Position,62)">Conditional</animation>
        <animation effect="slide" end="0,$PARAM[FixedAnimationHeight]" condition="Integer.IsGreater(Container(77777).Position,64)">Conditional</animation>
        <animation effect="slide" end="0,$PARAM[FixedAnimationHeight]" condition="Integer.IsGreater(Container(77777).Position,66)">Conditional</animation>
        <animation effect="slide" end="0,$PARAM[FixedAnimationHeight]" condition="Integer.IsGreater(Container(77777).Position,68)">Conditional</animation>
        <animation effect="slide" end="0,$PARAM[FixedAnimationHeight]" condition="Integer.IsGreater(Container(77777).Position,70)">Conditional</animation>
        <animation effect="slide" end="0,$PARAM[FixedAnimationHeight]" condition="Integer.IsGreater(Container(77777).Position,72)">Conditional</animation>
        <animation effect="slide" end="0,$PARAM[FixedAnimationHeight]" condition="Integer.IsGreater(Container(77777).Position,74)">Conditional</animation>
        <animation effect="slide" end="0,$PARAM[FixedAnimationHeight]" condition="Integer.IsGreater(Container(77777).Position,76)">Conditional</animation>
        <animation effect="slide" end="0,$PARAM[FixedAnimationHeight]" condition="Integer.IsGreater(Container(77777).Position,78)">Conditional</animation>
        <animation effect="slide" end="0,$PARAM[FixedAnimationHeight]" condition="Integer.IsGreater(Container(77777).Position,80)">Conditional</animation>

        <!-- up/down animation -->
        <animation effect="fade" start="100" end="0" condition="Integer.IsGreater(Container(77777).Position, Window(Home).Property(PrevWidgetPos))
         + Integer.IsGreater(Window(Home).Property(CurrentWidgetID), $PARAM[widgetid])">Conditional</animation>
        <animation effect="fade" start="100" end="0" condition="Integer.IsGreater(Window(Home).Property(PrevWidgetPos), Container(77777).Position)
         + Integer.IsGreater($PARAM[widgetid], Window(Home).Property(CurrentWidgetID))">Conditional</animation>
        <!-- special case with spotlight -->
        <animation effect="fade" start="100" end="0" condition="!ControlGroup(505).HasFocus() + !String.IsEqual(Window(Home).Property(CurrentWidgetID), 1508)
         + String.IsEqual(Window(Home).Property(PrevWidgetID), 1508)  + !String.IsEqual(Container(77777).Position, 2)
         + !String.IsEqual(Window(Home).Property(CurrentWidgetID), $PARAM[widgetid])">Conditional</animation>
    </include>

    <!-- Fixed Focus Navigation Factory -->
    <include name="Fixed_Focus_Navigation_Factory">
        <include content="Fixed_Focus_Navigation" condition="String.IsEqual(Skin.String(widgetstyle),landscape)">
            <param name="widgetid" value="$PARAM[widgetid]"/>
            <param name="FixedAnimationHeight" value="-250"/>
        </include>
        <include content="Fixed_Focus_Navigation" condition="String.IsEqual(Skin.String(widgetstyle),landscapelarge)">
            <param name="widgetid" value="$PARAM[widgetid]"/>
            <param name="FixedAnimationHeight" value="-300"/>
        </include>
        <include content="Fixed_Focus_Navigation" condition="String.IsEqual(Skin.String(widgetstyle),poster)">
            <param name="widgetid" value="$PARAM[widgetid]"/>
            <param name="FixedAnimationHeight" value="-420"/>
        </include>
        <include content="Fixed_Focus_Navigation" condition="String.IsEqual(Skin.String(widgetstyle),landscapesmall)">
            <param name="widgetid" value="$PARAM[widgetid]"/>
            <param name="FixedAnimationHeight" value="-188"/>
        </include>
        <include content="Fixed_Focus_Navigation" condition="String.IsEqual(Skin.String(widgetstyle),singlebox)">
            <param name="widgetid" value="$PARAM[widgetid]"/>
            <param name="FixedAnimationHeight" value="-380"/>
        </include>
        <include content="Fixed_Focus_Navigation" condition="String.IsEqual(Skin.String(widgetstyle),widebox)">
            <param name="widgetid" value="$PARAM[widgetid]"/>
            <param name="FixedAnimationHeight" value="-305"/>
        </include>
        <include content="Fixed_Focus_Navigation" condition="String.IsEqual(Skin.String(widgetstyle),smallposter)">
            <param name="widgetid" value="$PARAM[widgetid]"/>
            <param name="FixedAnimationHeight" value="-293"/>
        </include>
        <include content="Fixed_Focus_Navigation" condition="String.IsEqual(Skin.String(widgetstyle),square)">
            <param name="widgetid" value="$PARAM[widgetid]"/>
            <param name="FixedAnimationHeight" value="-303"/>
        </include>
        <include content="Fixed_Focus_Navigation" condition="String.IsEqual(Skin.String(widgetstyle),minisquare)">
            <param name="widgetid" value="$PARAM[widgetid]"/>
            <param name="FixedAnimationHeight" value="-171"/>
        </include>
        <include content="Fixed_Focus_Navigation" condition="String.IsEqual(Skin.String(widgetstyle),landscapedetails)">
            <param name="widgetid" value="$PARAM[widgetid]"/>
            <param name="FixedAnimationHeight" value="-250"/>
        </include>
        <include content="Fixed_Focus_Navigation" condition="String.IsEqual(Skin.String(widgetstyle),posterdetails)">
            <param name="widgetid" value="$PARAM[widgetid]"/>
            <param name="FixedAnimationHeight" value="-420"/>
        </include>
        <include content="Fixed_Focus_Navigation" condition="String.IsEqual(Skin.String(widgetstyle),landscapewidebox)">
            <param name="widgetid" value="$PARAM[widgetid]"/>
            <param name="FixedAnimationHeight" value="-460"/>
        </include>
        <include content="Fixed_Focus_Navigation" condition="String.IsEqual(Skin.String(widgetstyle),banner)">
            <param name="widgetid" value="$PARAM[widgetid]"/>
            <param name="FixedAnimationHeight" value="-166"/>
        </include>
    </include>

    <include name="ContainerShowInfoOnclick">
        <onclick condition="String.IsEqual(Container($PARAM[widgetid]).ListItem.DBType,movie) | String.IsEqual(Container($PARAM[widgetid]).ListItem.DBType,tvshow) | String.IsEqual(Container($PARAM[widgetid]).ListItem.DBType,episode)">Action(info)</onclick>
    </include>

    <include name="CustomBingieWinProps">
        <onload>ClearProperty(ShowViewSubMenu,Home)</onload>
        <onload>SetProperty(bingieviews,1,Home)</onload>
        <onunload>ClearProperty(ShowViewSubMenu,Home)</onunload>
        <onunload condition="!String.IsEqual(Skin.String(HomeLayout),bingie)">ClearProperty(bingieviews,Home)</onunload>
        <onunload condition="System.HasAlarm(trailer_delay)">CancelAlarm(trailer_delay,silent)</onunload>
    </include>

    <!-- DETAILS ROW INCLUDES -->
    <!-- New Tag -->
    <include name="New_Tag_Details_Row">
        <control type="label" id="6110">
            <visible>!String.IsEmpty(Control.GetLabel(6110))</visible>
            <posy>5</posy>
            <height>35</height>
            <width>auto</width>
            <aligny>center</aligny>
            <font>Reg22</font>
            <textcolor>green</textcolor>
            <label>$VAR[NewItem]</label>
            <include>Default_Visible_Fade</include>
        </control>
    </include>

    <!-- Thumbs Up/Down -->
    <include name="Thumbs_Up_Down_Details_Row">
        <control type="group" id="6111">
            <visible>Control.IsVisible(61111) | Control.IsVisible(61112)</visible>
            <include>Default_Visible_Fade</include>
            <width>25</width>
            <height>30</height>
            <!-- Thumbs Up -->
            <control type="image" id="61111">
                <include>ThumbsUpMinCondition</include>
                <posy>5</posy>
                <width>25</width>
                <height>30</height>
                <aspectratio align="left" aligny="center">keep</aspectratio>
                <colordiffuse>$INFO[Skin.String(BingiePrimaryTextColor)]</colordiffuse>
                <texture>dialogs/videoinfo/info/thumbs-up.png</texture>
            </control>
            <!-- Thumbs Down -->
            <control type="image" id="61112">
                <include>ThumbsDownMaxCondition</include>
                <posy>10</posy>
                <width>25</width>
                <height>30</height>
                <aspectratio align="left" aligny="center">keep</aspectratio>
                <colordiffuse>$INFO[Skin.String(BingiePrimaryTextColor)]</colordiffuse>
                <texture flipy="true">dialogs/videoinfo/info/thumbs-up.png</texture>
            </control>
        </control>
    </include>

    <!-- Stars rating -->
    <include name="Stars_Rating_Details_Row">
        <control type="image" id="6112">
            <visible>!String.IsEmpty(Control.GetLabel(6112)) + !Control.IsVisible(6111)</visible>
            <posy>5</posy>
            <width>160</width>
            <height>35</height>
            <aspectratio align="left" aligny="center">keep</aspectratio>
            <colordiffuse>$INFO[Skin.String(BingieRatingInDetailsColor)]</colordiffuse>
            <texture>$VAR[rating_value_texture]</texture>
            <include>Default_Visible_Fade</include>
        </control>
    </include>

    <!-- Percentage Based Rating -->
    <include name="Percentage_Rating_Details_Row">
        <control type="label" id="6113">
            <visible>!String.IsEmpty(Control.GetLabel(6113)) + !Control.IsVisible(6111)</visible>
            <posy>5</posy>
            <height>35</height>
            <width>auto</width>
            <aligny>center</aligny>
            <font>Reg24</font>
            <textcolor>$INFO[Skin.String(BingieRatingInDetailsColor)]</textcolor>
            <label>$VAR[RatingDecimalToPercentage,[B],% $LOCALIZE[31857][/B]]</label>
            <include>Default_Visible_Fade</include>
        </control>
    </include>

    <!-- Year / Premiered / PVR Time -->
    <include name="Year_Premiered_PVRTime_Details_Row">
        <control type="label" id="6114">
            <visible>!String.IsEmpty(Control.GetLabel(6114))</visible>
            <posy>5</posy>
            <height>35</height>
            <width>auto</width>
            <aligny>center</aligny>
            <font>Reg22</font>
            <textcolor>$INFO[Skin.String(BingiePrimaryTextColor)]</textcolor>
            <label>$VAR[YearOrPremieredOrPVR]</label>
            <include>Default_Visible_Fade</include>
        </control>
    </include>

    <!-- MPAA -->
    <include name="MPAA_Details_Row">
        <control type="group">
            <visible>!String.IsEmpty(Control.GetLabel(6115))</visible>
            <width>90</width>
            <height>39</height>
            <include>Default_Visible_Fade</include>
            <control type="image">
                <height>100%</height>
                <width>100%</width>
                <texture colordiffuse="$INFO[Skin.String(BingieDetailsFlagColor)]">bingie/flags/square-rounded.png</texture>
            </control>
            <control type="label" id="6115">
                <height>100%</height>
                <width>100%</width>
                <font>Reg22</font>
                <textcolor>$INFO[Skin.String(BingiePrimaryTextColor)]</textcolor>
                <align>center</align>
                <aligny>center</aligny>
                <scroll>false</scroll>
                <label>$VAR[GetMPAA]</label>
            </control>
        </control>
    </include>

    <!-- Duration / Total Seasons/Episodes -->
    <include name="Duration_TotalSeasonsEpisodes_Details_Row">
        <control type="label" id="6116">
            <posy>5</posy>
            <visible>!String.IsEmpty(Control.GetLabel(6116))</visible>
            <width>auto</width>
            <label>$VAR[DurationOrTotalSECount]</label>
            <height>35</height>
            <aligny>center</aligny>
            <textcolor>$INFO[Skin.String(BingiePrimaryTextColor)]</textcolor>
            <font>Reg22</font>
            <include>Default_Visible_Fade</include>
        </control>
    </include>

    <!-- Resolution -->
    <include name="Resolution_Details_Row">
        <control type="group">
            <visible>!String.IsEmpty(Control.GetLabel(6117))</visible>
            <width>65</width>
            <height>40</height>
            <include>Default_Visible_Fade</include>
            <control type="image">
                <height>100%</height>
                <width>100%</width>
                <texture colordiffuse="$INFO[Skin.String(BingieDetailsFlagColor)]">bingie/flags/frame.png</texture>
            </control>
            <control type="label" id="6117">
                <width>100%</width>
                <height>100%</height>
                <aligny>center</aligny>
                <align>center</align>
                <textcolor>$INFO[Skin.String(BingiePrimaryTextColor)]</textcolor>
                <font>Reg22</font>
                <scroll>false</scroll>
                <label>$VAR[GetResolution,[B],[/B]]</label>
            </control>
        </control>
    </include>

    <!-- Audio Channels -->
    <include name="Audio_Channels_Details_Row">
        <control type="group">
            <visible>!String.IsEmpty(Control.GetLabel(6118))</visible>
            <width>55</width>
            <height>40</height>
            <include>Default_Visible_Fade</include>
            <control type="image">
                <height>100%</height>
                <width>100%</width>
                <texture colordiffuse="$INFO[Skin.String(BingieDetailsFlagColor)]">bingie/flags/frame.png</texture>
            </control>
            <control type="label" id="6118">
                <width>100%</width>
                <height>100%</height>
                <aligny>center</aligny>
                <align>center</align>
                <textcolor>$INFO[Skin.String(BingiePrimaryTextColor)]</textcolor>
                <font>Reg22</font>
                <scroll>false</scroll>
                <label>$VAR[GetAudioChannels]</label>
            </control>
        </control>
    </include>
    <!-- END OF DETAILS ROW INCLUDES-->

	<!-- Spotlight Row Details -->
	<include name="SpotlightRowDetails">
		<control type="grouplist">
			<orientation>horizontal</orientation>
			<usecontrolcoords>true</usecontrolcoords>
			<height>40</height>
			<itemgap>15</itemgap>
            <include>New_Tag_Details_Row</include>
            <include condition="!Skin.HasSetting(DisableThumbsUpDown)">Thumbs_Up_Down_Details_Row</include>
            <include condition="Skin.HasSetting(PreferStarsRatingBingie)">Stars_Rating_Details_Row</include>
            <include condition="!Skin.HasSetting(PreferStarsRatingBingie)">Percentage_Rating_Details_Row</include>
            <include>Year_Premiered_PVRTime_Details_Row</include>
            <include>MPAA_Details_Row</include>
            <include>Duration_TotalSeasonsEpisodes_Details_Row</include>
            <include>Resolution_Details_Row</include>
            <include>Audio_Channels_Details_Row</include>
		</control>
	</include>

    <!-- Bingie additional info -->
    <include name="Bingie_Additional_Info">
          <control type="grouplist">
              <height>62</height>
              <width>800</width>
              <itemgap>25</itemgap>
              <orientation>horizontal</orientation>
              <usecontrolcoords>true</usecontrolcoords>
              <include>Default_Visible_Fade</include>
              <!-- additional info respective image -->
              <control type="group">
                  <visible>!String.IsEmpty(Control.GetLabel(84))</visible>
                  <top>3</top>
                  <height>56</height>
                  <width>56</width>
                  <control type="image">
                      <animation effect="fade" time="150">Visible</animation>
                      <animation effect="fade" time="0" end="60" condition="true">Conditional</animation>
                      <align>left</align>
                      <aligny>center</aligny>
                      <texture>$VAR[BingieMoreDetailsImage,bingie/details/,.png]</texture>
                      <colordiffuse>$INFO[Skin.String(ViewDetailsHighlightTextColor)]</colordiffuse>
                  </control>
              </control>
              <!-- additional info text -->
              <control type="textbox" id="84">
                  <animation effect="fade" time="150">Visible</animation>
                  <height>60</height>
                  <width>550</width>
                  <label>$VAR[BingieMoreDetails]</label>
                  <textcolor>$INFO[Skin.String(BingieSecondaryTextColor)]</textcolor>
                  <align>left</align>
                  <aligny>center</aligny>
                  <font>Reg22</font>
                  <autoscroll>false</autoscroll>
              </control>
          </control>
    </include>

    <!-- Thumbs Down/Up Includes -->
    <include name="ThumbsUpMinCondition">
        <include condition="String.IsEqual(Skin.String(ThumbsUpMin),-1)">DisableVisibility</include>
        <include condition="String.IsEqual(Skin.String(ThumbsUpMin),6)">ThumbsUpMin6</include>
        <include condition="String.IsEqual(Skin.String(ThumbsUpMin),7)">ThumbsUpMin7</include>
        <include condition="String.IsEqual(Skin.String(ThumbsUpMin),8)">ThumbsUpMin8</include>
        <include condition="String.IsEqual(Skin.String(ThumbsUpMin),9)">ThumbsUpMin9</include>
        <include condition="String.IsEqual(Skin.String(ThumbsUpMin),10)">ThumbsUpMin10</include>
    </include>

    <include name="ThumbsDownMaxCondition">
        <include condition="String.IsEqual(Skin.String(ThumbsDownMax),-1)">DisableVisibility</include>
        <include condition="String.IsEqual(Skin.String(ThumbsDownMax),5)">ThumbsDownMax5</include>
        <include condition="String.IsEqual(Skin.String(ThumbsDownMax),4)">ThumbsDownMax4</include>
        <include condition="String.IsEqual(Skin.String(ThumbsDownMax),3)">ThumbsDownMax3</include>
        <include condition="String.IsEqual(Skin.String(ThumbsDownMax),2)">ThumbsDownMax2</include>
        <include condition="String.IsEqual(Skin.String(ThumbsDownMax),1)">ThumbsDownMax1</include>
    </include>

    <include name="ThumbsUpMin6"><visible>[Integer.IsGreaterOrEqual(ListItem.UserRating,6) + String.IsEmpty(Window(Home).Property(RateTitle))] | [String.IsEqual(Window(Home).Property(RateTitle.Action),like) + String.IsEqual(Window(Home).Property(RateTitle),ListItem.DBID)]</visible></include>
    <include name="ThumbsUpMin7"><visible>[Integer.IsGreaterOrEqual(ListItem.UserRating,7) + String.IsEmpty(Window(Home).Property(RateTitle))] | [String.IsEqual(Window(Home).Property(RateTitle.Action),like) + String.IsEqual(Window(Home).Property(RateTitle),ListItem.DBID)]</visible></include>
    <include name="ThumbsUpMin8"><visible>[Integer.IsGreaterOrEqual(ListItem.UserRating,8) + String.IsEmpty(Window(Home).Property(RateTitle))] | [String.IsEqual(Window(Home).Property(RateTitle.Action),like) + String.IsEqual(Window(Home).Property(RateTitle),ListItem.DBID)]</visible></include>
    <include name="ThumbsUpMin9"><visible>[Integer.IsGreaterOrEqual(ListItem.UserRating,9) + String.IsEmpty(Window(Home).Property(RateTitle))] | [String.IsEqual(Window(Home).Property(RateTitle.Action),like) + String.IsEqual(Window(Home).Property(RateTitle),ListItem.DBID)]</visible></include>
    <include name="ThumbsUpMin10"><visible>[Integer.IsGreaterOrEqual(ListItem.UserRating,10) + String.IsEmpty(Window(Home).Property(RateTitle))] | [String.IsEqual(Window(Home).Property(RateTitle.Action),like) + String.IsEqual(Window(Home).Property(RateTitle),ListItem.DBID)]</visible></include>

    <include name="ThumbsDownMax5"><visible>[!String.IsEmpty(ListItem.UserRating) + Integer.IsLessOrEqual(ListItem.UserRating,5) + String.IsEmpty(Window(Home).Property(RateTitle))] | [String.IsEqual(Window(Home).Property(RateTitle.Action),dislike) + String.IsEqual(Window(Home).Property(RateTitle),ListItem.DBID)]</visible></include>
    <include name="ThumbsDownMax4"><visible>[!String.IsEmpty(ListItem.UserRating) + Integer.IsLessOrEqual(ListItem.UserRating,4) + String.IsEmpty(Window(Home).Property(RateTitle))] | [String.IsEqual(Window(Home).Property(RateTitle.Action),dislike) + String.IsEqual(Window(Home).Property(RateTitle),ListItem.DBID)]</visible></include>
    <include name="ThumbsDownMax3"><visible>[!String.IsEmpty(ListItem.UserRating) + Integer.IsLessOrEqual(ListItem.UserRating,3) + String.IsEmpty(Window(Home).Property(RateTitle))] | [String.IsEqual(Window(Home).Property(RateTitle.Action),dislike) + String.IsEqual(Window(Home).Property(RateTitle),ListItem.DBID)]</visible></include>
    <include name="ThumbsDownMax2"><visible>[!String.IsEmpty(ListItem.UserRating) + Integer.IsLessOrEqual(ListItem.UserRating,2) + String.IsEmpty(Window(Home).Property(RateTitle))] | [String.IsEqual(Window(Home).Property(RateTitle.Action),dislike) + String.IsEqual(Window(Home).Property(RateTitle),ListItem.DBID)]</visible></include>
    <include name="ThumbsDownMax1"><visible>[!String.IsEmpty(ListItem.UserRating) + Integer.IsLessOrEqual(ListItem.UserRating,1) + String.IsEmpty(Window(Home).Property(RateTitle))] | [String.IsEqual(Window(Home).Property(RateTitle.Action),dislike) + String.IsEqual(Window(Home).Property(RateTitle),ListItem.DBID)]</visible></include>

    <!-- disable visibility -->
    <include name="DisableVisibility"><visible>false</visible></include>

    <include name="hiddenSubmenu">
        <!-- hidden submenu to do count calculations -->
        <control type="list" id="4445">
            <left>-3000</left>
            <top>-3000</top>
            <width>1</width>
            <height>1</height>
            <pagecontrol/>
            <orientation>vertical</orientation>
            <itemlayout width="1" height="1">
            </itemlayout>
            <focusedlayout width="1" height="1">
            </focusedlayout>
            <content><include>skinshortcuts-submenu</include></content>
        </control>
    </include>

    <include name="MainMenuContent">
        <content>
            <include>skinshortcuts-mainmenu</include>
        </content>
    </include>
    <!-- variables -->

    <!-- New Item Tag -->
    <variable name="NewItem">
        <value condition="$EXP[IsMovieDBType]">$VAR[NewMovieItem]</value>
        <value condition="$EXP[IsEpisodeDBType]">$VAR[NewEpisodeItem]</value>
        <value condition="$EXP[IsTvShowDBType]">$VAR[NewTVShowItem]</value>
    </variable>

    <!-- New Movie -->
    <variable name="NewMovieItem">
        <!-- last 10 added movies -->
        <value condition="String.IsEqual(Window(Home).Property(LatestMovie.1.Title),ListItem.Title) | String.IsEqual(Window(Home).Property(LatestMovie.2.Title),ListItem.Title) |
        String.IsEqual(Window(Home).Property(LatestMovie.3.Title),ListItem.Title) | String.IsEqual(Window(Home).Property(LatestMovie.4.Title),ListItem.Title) |
        String.IsEqual(Window(Home).Property(LatestMovie.5.Title),ListItem.Title) | String.IsEqual(Window(Home).Property(LatestMovie.6.Title),ListItem.Title) |
        String.IsEqual(Window(Home).Property(LatestMovie.7.Title),ListItem.Title) | String.IsEqual(Window(Home).Property(LatestMovie.8.Title),ListItem.Title) |
        String.IsEqual(Window(Home).Property(LatestMovie.9.Title),ListItem.Title) | String.IsEqual(Window(Home).Property(LatestMovie.10.Title),ListItem.Title)">$LOCALIZE[31837]</value>
    </variable>

    <!-- New TVShow -->
    <variable name="NewTVShowItem">
        <!-- last 10 added episodes that are ep. in season 1 of the tvshow -->
        <value condition="[String.IsEqual(Window(Home).Property(LatestEpisode.10.ShowTitle),ListItem.Title) + String.IsEqual(Window(Home).Property(LatestEpisode.10.EpisodeSeason),1)] |
        [String.IsEqual(Window(Home).Property(LatestEpisode.9.ShowTitle),ListItem.Title) + String.IsEqual(Window(Home).Property(LatestEpisode.9.EpisodeSeason),1)] |
        [String.IsEqual(Window(Home).Property(LatestEpisode.8.ShowTitle),ListItem.Title) + String.IsEqual(Window(Home).Property(LatestEpisode.8.EpisodeSeason),1)] |
        [String.IsEqual(Window(Home).Property(LatestEpisode.7.ShowTitle),ListItem.Title) + String.IsEqual(Window(Home).Property(LatestEpisode.7.EpisodeSeason),1)] |
        [String.IsEqual(Window(Home).Property(LatestEpisode.6.ShowTitle),ListItem.Title) + String.IsEqual(Window(Home).Property(LatestEpisode.6.EpisodeSeason),1)] |
        [String.IsEqual(Window(Home).Property(LatestEpisode.5.ShowTitle),ListItem.Title) + String.IsEqual(Window(Home).Property(LatestEpisode.5.EpisodeSeason),1)] |
        [String.IsEqual(Window(Home).Property(LatestEpisode.4.ShowTitle),ListItem.Title) + String.IsEqual(Window(Home).Property(LatestEpisode.4.EpisodeSeason),1)] |
        [String.IsEqual(Window(Home).Property(LatestEpisode.3.ShowTitle),ListItem.Title) + String.IsEqual(Window(Home).Property(LatestEpisode.3.EpisodeSeason),1)] |
        [String.IsEqual(Window(Home).Property(LatestEpisode.2.ShowTitle),ListItem.Title) + String.IsEqual(Window(Home).Property(LatestEpisode.2.EpisodeSeason),1)] |
        [String.IsEqual(Window(Home).Property(LatestEpisode.1.ShowTitle),ListItem.Title) + String.IsEqual(Window(Home).Property(LatestEpisode.1.EpisodeSeason),1)]">$LOCALIZE[31837]</value>
    </variable>

    <!-- New Episode -->
    <variable name="NewEpisodeItem">
        <!-- new episode: last 10 added ep. -->
        <value condition="[String.IsEqual(Window(Home).Property(LatestEpisode.1.EpisodeTitle),ListItem.Title) + String.IsEqual(Window(Home).Property(LatestEpisode.1.ShowTitle),ListItem.TVShowTitle)] |
        [String.IsEqual(Window(Home).Property(LatestEpisode.2.EpisodeTitle),ListItem.Title) + String.IsEqual(Window(Home).Property(LatestEpisode.2.ShowTitle),ListItem.TVShowTitle)] |
        [String.IsEqual(Window(Home).Property(LatestEpisode.3.EpisodeTitle),ListItem.Title) + String.IsEqual(Window(Home).Property(LatestEpisode.3.ShowTitle),ListItem.TVShowTitle)] |
        [String.IsEqual(Window(Home).Property(LatestEpisode.4.EpisodeTitle),ListItem.Title) + String.IsEqual(Window(Home).Property(LatestEpisode.4.ShowTitle),ListItem.TVShowTitle)] |
        [String.IsEqual(Window(Home).Property(LatestEpisode.5.EpisodeTitle),ListItem.Title) + String.IsEqual(Window(Home).Property(LatestEpisode.5.ShowTitle),ListItem.TVShowTitle)] |
        [String.IsEqual(Window(Home).Property(LatestEpisode.6.EpisodeTitle),ListItem.Title) + String.IsEqual(Window(Home).Property(LatestEpisode.6.ShowTitle),ListItem.TVShowTitle)] |
        [String.IsEqual(Window(Home).Property(LatestEpisode.7.EpisodeTitle),ListItem.Title) + String.IsEqual(Window(Home).Property(LatestEpisode.7.ShowTitle),ListItem.TVShowTitle)] |
        [String.IsEqual(Window(Home).Property(LatestEpisode.8.EpisodeTitle),ListItem.Title) + String.IsEqual(Window(Home).Property(LatestEpisode.8.ShowTitle),ListItem.TVShowTitle)] |
        [String.IsEqual(Window(Home).Property(LatestEpisode.9.EpisodeTitle),ListItem.Title) + String.IsEqual(Window(Home).Property(LatestEpisode.9.ShowTitle),ListItem.TVShowTitle)] |
        [String.IsEqual(Window(Home).Property(LatestEpisode.10.EpisodeTitle),ListItem.Title) + String.IsEqual(Window(Home).Property(LatestEpisode.10.ShowTitle),ListItem.TVShowTitle)]">$LOCALIZE[31837]</value>
    </variable>

	<!-- Choose Year / Premiered / PVR -->
	<variable name="YearOrPremieredOrPVR">
		<value condition="$EXP[IsEpisodeDBType]">$VAR[GetPremiered]</value>
        <value condition="String.IsEmpty(ListItem.DBTYPE) + [!String.IsEmpty(ListItem.Property(StartDateTime)) | !String.IsEmpty(ListItem.Property(DateTime)) | !String.IsEmpty(ListItem.StartTime)]">$VAR[GetPVRTimings]</value>
        <value>$VAR[GetYear]</value>
	</variable>

	<!-- Choose Duration Or Total Seasons/Episodes count -->
	<variable name="DurationOrTotalSECount">
		<value condition="$EXP[IsTvShowDBType]">$VAR[GetTotalSeasonEpisodeCount]</value>
		<value condition="">$VAR[GetDuration]</value>
	</variable>

	<!-- Premiered Info -->
	<variable name="GetPremiered">
		<value condition="!String.IsEmpty(ListItem.Premiered)">$INFO[ListItem.Premiered]</value>
		<value condition="[Control.HasFocus(1508) | ControlGroup(505).HasFocus()] + !String.IsEmpty(Container(1508).ListItem.Premiered)">$INFO[Container(1508).ListItem.Premiered]</value>
		<value condition="!String.IsEmpty(Window(Home).Property(ListItem.Premiered))">$INFO[Window(Home).Property(ListItem.Premiered)]</value>
		<value condition="!String.IsEmpty(Window(Home).Property(SkinHelper.ListItem.Premiered))">$INFO[Window(Home).Property(SkinHelper.ListItem.Premiered)]</value>
	</variable>

	<!--Year Info -->
	<variable name="GetYear">
		<value condition="!String.IsEmpty(ListItem.Year)">$INFO[ListItem.Year]</value>
		<value condition="[Control.HasFocus(1508) | ControlGroup(505).HasFocus()] + !String.IsEmpty(Container(1508).ListItem.Year)">$INFO[Container(1508).ListItem.Year]</value>
		<value condition="!String.IsEmpty(Window(Home).Property(ListItem.Year))">$INFO[Window(Home).Property(ListItem.Year)]</value>
		<value condition="!String.IsEmpty(Window(Home).Property(SkinHelper.ListItem.Year))">$INFO[Window(Home).Property(SkinHelper.ListItem.Year)]</value>
	</variable>

    <!-- PVR Times Info (Start, Date, etc) -->
    <variable name="GetPVRTimings">
        <value condition="!String.IsEmpty(ListItem.Property(StartDateTime))">$INFO[ListItem.Property(StartDateTime)]</value>
        <value condition="!String.IsEmpty(ListItem.Property(DateTime)) + !String.IsEmpty(ListItem.Label2)">$INFO[ListItem.Property(DateTime)]</value>
        <value condition="!String.IsEmpty(ListItem.StartTime)">$INFO[ListItem.StartTime]</value>
    </variable>

    <!--Duration Info -->
    <variable name="GetDuration">
        <!-- Hours not disabled -->
        <!-- normal -->
        <value condition="!Skin.HasSetting(DisableHoursDuration) + Integer.IsGreater(ListItem.Duration(h),0)">$INFO[ListItem.Duration(h),,h ]$INFO[ListItem.Duration(m),,m]</value>
        <value condition="!Skin.HasSetting(DisableHoursDuration) + !String.IsEmpty(ListItem.Duration) + Integer.IsEqual(ListItem.Duration(h),0)">$INFO[ListItem.Duration(mins),,m]</value>
        <!-- spotlight -->
        <value condition="!Skin.HasSetting(DisableHoursDuration) + [Control.HasFocus(1508) | ControlGroup(505).HasFocus()] + Integer.IsGreater(Container(1508).ListItem.Duration(h),0)">$INFO[Container(1508).ListItem.Duration(h),,h ]$INFO[Container(1508).ListItem.Duration(m),,m]</value>
        <value condition="!Skin.HasSetting(DisableHoursDuration) + [Control.HasFocus(1508) | ControlGroup(505).HasFocus()] + Integer.IsEqual(Container(1508).ListItem.Duration(h),0)">$INFO[Container(1508).ListItem.Duration(mins),,m]</value>
        <!-- fallback -->
        <value condition="!Skin.HasSetting(DisableHoursDuration) + Integer.IsGreater(Window(Home).Property(ListItem.Duration.Hours),0)">$INFO[Window(Home).Property(ListItem.Duration.Hours),,h ]$INFO[Window(Home).Property(ListItem.Duration.M),,m]</value>
        <value condition="!Skin.HasSetting(DisableHoursDuration) + !String.IsEmpty(Window(Home).Property(ListItem.Duration.Hours)) + Integer.IsEqual(Window(Home).Property(ListItem.Duration.Hours),0)">$INFO[Window(Home).Property(ListItem.Duration.Mins),,m]</value>
        <value condition="!Skin.HasSetting(DisableHoursDuration) + String.IsEqual(Window(Home).Property(SkinHelper.ListItem.Duration.Hours),00)">$INFO[Window(Home).Property(SkinHelper.ListItem.Duration.Minutes),,m]</value>
        <value condition="!Skin.HasSetting(DisableHoursDuration) + !String.IsEmpty(Window(Home).Property(SkinHelper.ListItem.Duration.Hours))">$INFO[Window(Home).Property(SkinHelper.ListItem.Duration.Hours),,h ]$INFO[Window(Home).Property(SkinHelper.ListItem.Duration.Minutes),,m]</value>
        <!-- Hours disabled -->
        <value condition="Skin.HasSetting(DisableHoursDuration) + !String.IsEmpty(ListItem.Duration)">$INFO[ListItem.Duration(mins),,m]</value>
        <value condition="Skin.HasSetting(DisableHoursDuration) + [Control.HasFocus(1508) | ControlGroup(505).HasFocus()] + !String.IsEmpty(Container(1508).ListItem.Duration)">$INFO[Container(1508).ListItem.Duration(mins),,m]</value>
        <value condition="Skin.HasSetting(DisableHoursDuration) + !String.IsEmpty(Window(Home).Property(ListItem.Duration))">$INFO[Window(Home).Property(ListItem.Duration)(mins),,m]</value>
        <!-- regular fortmat fallback -->
        <value condition="!String.IsEmpty(ListItem.Duration)">$INFO[ListItem.Duration]</value>
        <value condition="!String.IsEmpty(Window(Home).Property(ListItem.Duration))">$INFO[Window(Home).Property(ListItem.Duration)]</value>
        <value condition="!String.IsEmpty(Window(Home).Property(SkinHelper.ListItem.Duration))">$INFO[Window(Home).Property(SkinHelper.ListItem.Duration)]</value>
    </variable>

    <!-- Total Seasons/Episodes Info -->
    <variable name="GetTotalSeasonEpisodeCount">
        <!--normal-->
        <value condition="Integer.IsGreater(ListItem.Property(TotalEpisodes),1) + Integer.IsGreater(ListItem.Property(TotalSeasons),1)">$INFO[ListItem.Property(TotalSeasons),, $LOCALIZE[33054]]</value>
        <value condition="Integer.IsGreater(ListItem.Property(TotalEpisodes),1) + Integer.IsEqual(ListItem.Property(TotalSeasons),1)">$INFO[ListItem.Property(TotalSeasons),, $LOCALIZE[20373]]</value>
        <value condition="Integer.IsEqual(ListItem.Property(TotalEpisodes),1)">$INFO[ListItem.Property(TotalEpisodes),, $LOCALIZE[20359]]</value>
        <value condition="!String.IsEmpty(ListItem.Property(TotalEpisodes)) + Integer.IsEqual(ListItem.Property(TotalEpisodes),0)">$INFO[ListItem.Property(TotalEpisodes),, $LOCALIZE[20360]]</value>
        <!--spotlight-->
        <value condition="ControlGroup(505).HasFocus() + !String.IsEmpty(Container(1508).ListItem.Property(TotalEpisodes)) + Integer.IsGreater(Container(1508).ListItem.Property(TotalEpisodes),1) + !String.IsEmpty(Container(1508).ListItem.Property(TotalSeasons)) + Integer.IsGreater(Container(1508).ListItem.Property(TotalSeasons),1)">$INFO[Container(1508).ListItem.Property(TotalSeasons),, $LOCALIZE[33054]]</value>
        <value condition="ControlGroup(505).HasFocus() + !String.IsEmpty(Container(1508).ListItem.Property(TotalEpisodes)) + Integer.IsGreater(Container(1508).ListItem.Property(TotalEpisodes),1) + !String.IsEmpty(Container(1508).ListItem.Property(TotalSeasons)) + Integer.IsEqual(Container(1508).ListItem.Property(TotalSeasons),1)">$INFO[Container(1508).ListItem.Property(TotalSeasons),, $LOCALIZE[20373]]</value>
        <value condition="ControlGroup(505).HasFocus() + Integer.IsEqual(Container(1508).ListItem.Property(TotalEpisodes),1)">$INFO[Container(1508).ListItem.Property(TotalEpisodes),, $LOCALIZE[20359]]</value>
        <value condition="ControlGroup(505).HasFocus() + Integer.IsEqual(Container(1508).ListItem.Property(TotalEpisodes),0)">$INFO[Container(1508).ListItem.Property(TotalEpisodes),, $LOCALIZE[20360]]</value>
        <!-- fallback -->
        <value condition="!String.IsEmpty(Window(Home).Property(ListItem.TotalEpisodes)) + Integer.IsGreater(Window(Home).Property(ListItem.TotalSeasons),1)">$INFO[Window(Home).Property(ListItem.TotalSeasons),, $LOCALIZE[33054]]</value>
        <value condition="Integer.IsGreater(Window(Home).Property(ListItem.TotalEpisodes),1) + Integer.IsEqual(Window(Home).Property(ListItem.TotalSeasons),1)">$INFO[Window(Home).Property(ListItem.TotalSeasons),, $LOCALIZE[20373]]</value>
        <value condition="Integer.IsEqual(Window(Home).Property(ListItem.TotalEpisodes),1)">$INFO[Window(Home).Property(ListItem.TotalEpisodes),, $LOCALIZE[20359]]</value>
        <value condition="Integer.IsEqual(Window(Home).Property(ListItem.TotalEpisodes),0)">$INFO[Window(Home).Property(ListItem.TotalEpisodes),, $LOCALIZE[20360]]</value>
    </variable>

    <!-- MPAA Info -->
    <variable name="GetMPAA">
        <!-- contains is very slow! -->
        <!-- normal listitems -->
        <!-- US -->
        <value condition="String.Contains(ListItem.mpaa,US:G) | String.Contains(ListItem.mpaa,USA:G) | String.Contains(ListItem.mpaa,Rated G)">G</value>
        <value condition="String.Contains(ListItem.mpaa,PG-13)">PG-13</value>
        <value condition="String.Contains(ListItem.mpaa,Rated PG) | String.IsEqual(ListItem.Mpaa,PG)">PG</value>
        <value condition="String.Contains(ListItem.mpaa,US:R) | String.Contains(ListItem.mpaa,USA:R) | String.Contains(ListItem.mpaa,Rated R) | String.IsEqual(ListItem.mpaa,R)">R</value>
        <value condition="String.Contains(ListItem.mpaa,US:NC-17)| String.Contains(ListItem.mpaa,USA:NC-17)| String.Contains(ListItem.mpaa,Rated NC-17)">NC-17</value>
        <!-- UK -->
        <value condition="String.Contains(ListItem.mpaa,UK:U)">UK-ALL</value>
        <value condition="String.Contains(ListItem.mpaa,UK:PG)">UK-PG</value>
        <value condition="String.Contains(ListItem.mpaa,UK:12A)">UK-12A</value>
        <value condition="String.Contains(ListItem.mpaa,UK:12)">UK-12</value>
        <value condition="String.Contains(ListItem.mpaa,UK:15)">UK-15</value>
        <value condition="String.Contains(ListItem.mpaa,UK:18)">UK-18</value>
        <!-- DE -->
        <value condition="String.Contains(ListItem.mpaa,Germany:16) | String.Contains(ListItem.mpaa,ab 16) | String.Contains(ListItem.mpaa,FSK 16)">FSK-16</value>
        <value condition="String.Contains(ListItem.mpaa,Germany:6)| String.Contains(ListItem.mpaa,ab 6) | String.Contains(ListItem.mpaa,FSK 6)">FSK-6</value>
        <value condition="String.Contains(ListItem.mpaa,Germany:12) | String.Contains(ListItem.mpaa,ab 12) | String.Contains(ListItem.mpaa,FSK 12)">FSK-12</value>
        <value condition="String.Contains(ListItem.mpaa,Germany:18) | String.Contains(ListItem.mpaa,ab 18) | String.Contains(ListItem.mpaa,FSK 18)">FSK-18</value>
        <value condition="String.Contains(ListItem.mpaa,Germany)|String.Contains(ListItem.mpaa,FSK)| String.Contains(ListItem.mpaa,o.A) | String.Contains(ListItem.mpaa,FSK 0)">FSK-0</value>
        <value condition="String.Contains(ListItem.mpaa,besorolás alatt)">BA</value>
        <!-- HU -->
        <value condition="String.Contains(ListItem.mpaa,korhatárra való tekintett nélkül megtekintetheto)">KN</value>
        <value condition="String.Contains(ListItem.mpaa,12 éven aluliak számára a megtekintése nagykorú felügyelete mellett ajánlott)">12</value>
        <value condition="String.Contains(ListItem.mpaa,16 éven aluliak számára nem ajánlott)">16</value>
        <value condition="String.Contains(ListItem.mpaa,18 éven aluliak számára nem ajánlott)">18</value>
        <!-- FR -->
        <value condition="String.Contains(ListItem.mpaa,France:U) | String.Contains(ListItem.mpaa,partir de 3 ans) | String.Contains(ListItem.mpaa,partir de 6 ans)">CSA-U</value>
        <value condition="String.Contains(ListItem.mpaa,France:-10) | String.Contains(ListItem.mpaa,Interdit aux moins de 10 ans) | String.Contains(ListItem.mpaa,des propos ou des images peuvent heurter)">CSA-10</value>
        <value condition="String.Contains(ListItem.mpaa,France:-12) | String.Contains(ListItem.mpaa,Interdit aux moins de 12 ans)">CSA-12</value>
        <value condition="String.Contains(ListItem.mpaa,France:-16) | String.Contains(ListItem.mpaa,Interdit aux moins de 16 ans)">CSA-16</value>
        <value condition="String.Contains(ListItem.mpaa,France:-18) | String.Contains(ListItem.mpaa,Interdit aux moins de 18 ans)">CSA-18</value>
        <!-- BR -->
        <value condition="String.Contains(ListItem.mpaa,Brazil:Livre) | String.Contains(ListItem.mpaa,Livre)">L</value>
        <value condition="String.Contains(ListItem.mpaa,Brazil:10) | String.Contains(ListItem.mpaa,10 anos)">10</value>
        <value condition="String.Contains(ListItem.mpaa,Brazil:12) | String.Contains(ListItem.mpaa,12 anos)">12</value>
        <value condition="String.Contains(ListItem.mpaa,Brazil:14) | String.Contains(ListItem.mpaa,14 anos)">14</value>
        <value condition="String.Contains(ListItem.mpaa,Brazil:16) | String.Contains(ListItem.mpaa,16 anos)">16</value>
        <value condition="String.Contains(ListItem.mpaa,Brazil:18) | String.Contains(ListItem.mpaa,18 anos)">18</value>
        <value condition="!String.IsEmpty(ListItem.mpaa) + !String.Contains(ListItem.mpaa,not rated) + !String.Contains(ListItem.mpaa,n/a)">$INFO[ListItem.MPAA]</value>
        <!-- home widgets -->
        <value condition="[String.Contains(Window(Home).Property(ListItem.mpaa),US:G) | String.Contains(Window(Home).Property(ListItem.mpaa),USA:G) | String.Contains(Window(Home).Property(ListItem.mpaa),Rated G)]">G</value>
        <value condition="String.Contains(Window(Home).Property(ListItem.mpaa),PG-13)">PG-13</value>
        <value condition="[String.Contains(Window(Home).Property(ListItem.mpaa),Rated PG) | String.IsEqual(Window(Home).Property(ListItem.Mpaa),PG)]">PG</value>
        <value condition="[String.Contains(Window(Home).Property(ListItem.mpaa),US:R) | String.Contains(Window(Home).Property(ListItem.mpaa),USA:R) | String.Contains(Window(Home).Property(ListItem.mpaa),Rated R) | String.IsEqual(Window(Home).Property(ListItem.mpaa),R)]">R</value>
        <value condition="[String.Contains(Window(Home).Property(ListItem.mpaa),US:NC-17)| String.Contains(Window(Home).Property(ListItem.mpaa),USA:NC-17)| String.Contains(Window(Home).Property(ListItem.mpaa),Rated NC-17)]">NC-17</value>
        <value condition="String.Contains(Window(Home).Property(ListItem.mpaa),UK:U)">UK-ALL</value>
        <value condition="String.Contains(Window(Home).Property(ListItem.mpaa),UK:PG)">UK-PG</value>
        <value condition="String.Contains(Window(Home).Property(ListItem.mpaa),UK:12A)">UK-12A</value>
        <value condition="String.Contains(Window(Home).Property(ListItem.mpaa),UK:12)">UK-12</value>
        <value condition="String.Contains(Window(Home).Property(ListItem.mpaa),UK:15)">UK-15</value>
        <value condition="String.Contains(Window(Home).Property(ListItem.mpaa),UK:18)">UK-18</value>
        <value condition="[String.Contains(Window(Home).Property(ListItem.mpaa),Germany:16) | String.Contains(Window(Home).Property(ListItem.mpaa),ab 16) | String.Contains(Window(Home).Property(ListItem.mpaa),FSK 16)]">FSK-16</value>
        <value condition="[String.Contains(Window(Home).Property(ListItem.mpaa),Germany:6)| String.Contains(Window(Home).Property(ListItem.mpaa),ab 6) | String.Contains(Window(Home).Property(ListItem.mpaa),FSK 6)]">FSK-6</value>
        <value condition="[String.Contains(Window(Home).Property(ListItem.mpaa),Germany:12) | String.Contains(Window(Home).Property(ListItem.mpaa),ab 12) | String.Contains(Window(Home).Property(ListItem.mpaa),FSK 12)]">FSK-12</value>
        <value condition="[String.Contains(Window(Home).Property(ListItem.mpaa),Germany:18) | String.Contains(Window(Home).Property(ListItem.mpaa),ab 18) | String.Contains(Window(Home).Property(ListItem.mpaa),FSK 18)]">FSK-18</value>
        <value condition="[String.Contains(Window(Home).Property(ListItem.mpaa),Germany)|String.Contains(Window(Home).Property(ListItem.mpaa),FSK)| String.Contains(Window(Home).Property(ListItem.mpaa),o.A) | String.Contains(Window(Home).Property(ListItem.mpaa),FSK 0)]">FSK-0</value>
        <value condition="String.Contains(Window(Home).Property(ListItem.mpaa),besorolás alatt)">BA</value>
        <value condition="String.Contains(Window(Home).Property(ListItem.mpaa),korhatárra való tekintett nélkül megtekintetheto)">KN</value>
        <value condition="String.Contains(Window(Home).Property(ListItem.mpaa),12 éven aluliak számára a megtekintése nagykorú felügyelete mellett ajánlott)">12</value>
        <value condition="String.Contains(Window(Home).Property(ListItem.mpaa),16 éven aluliak számára nem ajánlott)">16</value>
        <value condition="String.Contains(Window(Home).Property(ListItem.mpaa),18 éven aluliak számára nem ajánlott)">18</value>
        <value condition="[String.Contains(Window(Home).Property(ListItem.mpaa),France:U) | String.Contains(Window(Home).Property(ListItem.mpaa),partir de 3 ans) | String.Contains(Window(Home).Property(ListItem.mpaa),partir de 6 ans)]">CSA-U</value>
        <value condition="[String.Contains(Window(Home).Property(ListItem.mpaa),France:-10) | String.Contains(Window(Home).Property(ListItem.mpaa),Interdit aux moins de 10 ans) | String.Contains(Window(Home).Property(ListItem.mpaa),des propos ou des images peuvent heurter)]">CSA-10</value>
        <value condition="[String.Contains(Window(Home).Property(ListItem.mpaa),France:-12) | String.Contains(Window(Home).Property(ListItem.mpaa),Interdit aux moins de 12 ans)]">CSA-12</value>
        <value condition="[String.Contains(Window(Home).Property(ListItem.mpaa),France:-16) | String.Contains(Window(Home).Property(ListItem.mpaa),Interdit aux moins de 16 ans)]">CSA-16</value>
        <value condition="[String.Contains(Window(Home).Property(ListItem.mpaa),France:-18) | String.Contains(Window(Home).Property(ListItem.mpaa),Interdit aux moins de 18 ans)]">CSA-18</value>
        <value condition="[String.Contains(Window(Home).Property(ListItem.mpaa),Brazil:Livre) | String.Contains(Window(Home).Property(ListItem.mpaa),Livre)]">L</value>
        <value condition="[String.Contains(Window(Home).Property(ListItem.mpaa),Brazil:10) | String.Contains(Window(Home).Property(ListItem.mpaa),10 anos)]">10</value>
        <value condition="[String.Contains(Window(Home).Property(ListItem.mpaa),Brazil:12) | String.Contains(Window(Home).Property(ListItem.mpaa),12 anos)]">12</value>
        <value condition="[String.Contains(Window(Home).Property(ListItem.mpaa),Brazil:14) | String.Contains(Window(Home).Property(ListItem.mpaa),14 anos)]">14</value>
        <value condition="[String.Contains(Window(Home).Property(ListItem.mpaa),Brazil:16) | String.Contains(Window(Home).Property(ListItem.mpaa),16 anos)]">16</value>
        <value condition="[String.Contains(Window(Home).Property(ListItem.mpaa),Brazil:18) | String.Contains(Window(Home).Property(ListItem.mpaa),18 anos)]">18</value>
        <value condition="!String.IsEmpty(Window(Home).Property(ListItem.mpaa)) + !String.Contains(Window(Home).Property(ListItem.mpaa),not rated)">$INFO[Window(Home).Property(ListItem.MPAA)]</value>
        <!-- fallback -->
        <value condition="!String.IsEmpty(Window(Home).Property(SkinHelper.ListItem.MPAA)) + !String.Contains(Window(Home).Property(SkinHelper.ListItem.MPAA),not rated)">$INFO[Window(Home).Property(SkinHelper.ListItem.MPAA)]</value>
    </variable>

    <!-- Resolution Info -->
	<variable name="GetResolution">
		<!--normal-->
		<value condition="ListItem.IsStereoscopic">3D</value>
		<value condition="Integer.IsGreater(ListItem.VideoResolution,1080) | String.IsEqual(ListItem.VideoResolution,4K) | String.IsEqual(ListItem.VideoResolution,8K)">UHD</value>
		<value condition="Integer.IsGreater(ListItem.VideoResolution,700)">HD</value>
		<value condition="!String.IsEmpty(ListItem.VideoResolution)">SD</value>
		<!--home-->
		<value condition="Window(Home).Property(ListItem.IsStereoscopic)">3D</value>
		<value condition="Integer.IsGreater(Window(Home).Property(ListItem.VideoResolution),1080) | String.IsEqual(Window(Home).Property(ListItem.VideoResolution),4K)
		 | String.IsEqual(Window(Home).Property(ListItem.VideoResolution),8K)">UHD</value>
		<value condition="Integer.IsGreater(Window(Home).Property(ListItem.VideoResolution),700)">HD</value>
		<value condition="!String.IsEmpty(Window(Home).Property(ListItem.VideoResolution))">SD</value>
	</variable>

	<!-- Audio Channels Info (from 5.1 and up) -->
	<variable name="GetAudioChannels">
		<!--normal-->
		<value condition="String.IsEqual(ListItem.AudioChannels,6)">5.1</value>
		<value condition="String.IsEqual(ListItem.AudioChannels,7)">6.1</value>
		<value condition="String.IsEqual(ListItem.AudioChannels,8)">7.1</value>
		<value condition="String.IsEqual(ListItem.AudioChannels,9)">8.1</value>
		<value condition="String.IsEqual(ListItem.AudioChannels,10)">9.1</value>
		<!--home-->
		<value condition="String.IsEqual(Window(Home).Property(ListItem.AudioChannels),6)">5.1</value>
		<value condition="String.IsEqual(Window(Home).Property(ListItem.AudioChannels),7)">6.1</value>
		<value condition="String.IsEqual(Window(Home).Property(ListItem.AudioChannels),8)">7.1</value>
		<value condition="String.IsEqual(Window(Home).Property(ListItem.AudioChannels),9)">8.1</value>
		<value condition="String.IsEqual(Window(Home).Property(ListItem.AudioChannels),10)">9.1</value>
	</variable>

    <!-- bingie home clearlogo -->
    <variable name="BingieInfoClearlogo">
        <!-- normal -->
        <value condition="!String.IsEmpty(ListItem.Art(tvshow.clearlogo))">$INFO[ListItem.Art(tvshow.clearlogo)]</value>
        <value condition="!String.IsEmpty(ListItem.Art(clearlogo))">$INFO[ListItem.Art(clearlogo)]</value>
        <value condition="!String.IsEmpty(ListItem.Property(ChannelLogo))">$INFO[ListItem.Property(ChannelLogo)]</value>
        <!-- spotlight -->
        <value condition="[Control(1508).HasFocus | ControlGroup(505).HasFocus()] + !String.IsEmpty(Container(1508).ListItem.Art(tvshow.clearlogo))">$INFO[Container(1508).ListItem.Art(tvshow.clearlogo)]</value>
        <value condition="[Control(1508).HasFocus | ControlGroup(505).HasFocus()] + !String.IsEmpty(Container(1508).ListItem.Art(clearlogo))">$INFO[Container(1508).ListItem.Art(clearlogo)]</value>
        <!-- home -->
        <value condition="ControlGroup(900).HasFocus() + !String.IsEmpty(Window(Home).Property(ListItem.Art.tvshow.clearlogo))">$INFO[Window(Home).Property(ListItem.Art.tvshow.clearlogo)]</value>
        <value condition="ControlGroup(900).HasFocus() + !String.IsEmpty(Window(Home).Property(ListItem.Art.ClearLogo))">$INFO[Window(Home).Property(ListItem.Art.ClearLogo)]</value>
        <value condition="ControlGroup(900).HasFocus() + !String.IsEmpty(Window(Home).Property(ListItem.ChannelLogo))">$INFO[Window(Home).Property(ListItem.ChannelLogo)]</value>
        <!-- skinhelper fallback -->
        <value condition="!String.IsEmpty(Window(Home).Property(SkinHelper.ListItem.Art.Clearlogo))">$INFO[Window(Home).Property(SkinHelper.ListItem.Art.Clearlogo)]</value>
        <value condition="!String.IsEmpty(Window(Home).Property(SkinHelper.ListItem.ChannelLogo))">$INFO[Window(Home).Property(SkinHelper.ListItem.ChannelLogo)]</value>
    </variable>

    <variable name="BingieInfoLabel">
        <value condition="ControlGroup(77777).HasFocus() + String.IsEqual(ListItem.Property(DBTYPE), systeminfo)">[B]$INFO[ListItem.label][/B] $INFO[ListItem.label2]</value>
        <value condition="ControlGroup(77777).HasFocus() + !String.IsEmpty(ListItem.Title) + String.StartsWith(ListItem.FolderPath, pvr://)">[B]$INFO[ListItem.Title][/B]</value>
        <value condition="ControlGroup(77777).HasFocus() + !String.IsEmpty(ListItem.Season) + !String.IsEmpty(ListItem.Episode) + !String.IsEqual(ListItem.TvShowTitle,ListItem.Title)">[B]$VAR[TVShowTitle][/B]</value>
        <value condition="ControlGroup(77777).HasFocus() + !String.IsEmpty(ListItem.Artist)">[B]$INFO[ListItem.Artist][/B]</value>
        <value condition="ControlGroup(77777).HasFocus() + !String.IsEmpty(ListItem.Title)">[B]$INFO[ListItem.Title][/B]</value>
        <value condition="ControlGroup(77777).HasFocus() + !String.IsEmpty(ListItem.Label)">[B]$INFO[ListItem.Label][/B]</value>
        <!-- spotlight widget-->
        <value condition="[Control(1508).HasFocus | ControlGroup(505).HasFocus()] + String.IsEqual(Container(1508).ListItem.Property(DBTYPE), systeminfo)">[B]$INFO[Container(1508).ListItem.label][/B] $INFO[Container(1508).ListItem.label2]</value>
        <value condition="[Control(1508).HasFocus | ControlGroup(505).HasFocus()] + !String.IsEmpty(Container(1508).ListItem.Title) + String.StartsWith(Container(1508).ListItem.FolderPath, pvr://)">[B]$INFO[Container(1508).ListItem.Title][/B]</value>
        <value condition="[Control(1508).HasFocus | ControlGroup(505).HasFocus()] + !String.IsEmpty(Container(1508).ListItem.Season) + !String.IsEmpty(Container(1508).ListItem.Episode) + !String.IsEqual(Container(1508).ListItem.TvShowTitle,Container(1508).ListItem.Title)">[B]$INFO[Container(1508).ListItem.TvShowTitle][/B]</value>
        <value condition="[Control(1508).HasFocus | ControlGroup(505).HasFocus()] + !String.IsEmpty(Container(1508).ListItem.Title)">[B]$INFO[Container(1508).ListItem.Title][/B]</value>
        <value condition="[Control(1508).HasFocus | ControlGroup(505).HasFocus()] + !String.IsEmpty(Container(1508).ListItem.Label)">[B]$INFO[Container(1508).ListItem.Label][/B]</value>
        <!--widgets -->
        <value condition="String.IsEqual(Window(Home).Property(ListItem.DBTYPE), systeminfo)">[B]$INFO[Window(Home).Property(ListItem.label)][/B] $INFO[Window(Home).Property(ListItem.label2)]</value>
        <value condition="!String.IsEmpty(Window(Home).Property(ListItem.Title)) + String.StartsWith(Window(Home).Property(ListItem.FolderPath), pvr://)">[B]$INFO[Window(Home).Property(ListItem.Title)][/B]</value>
        <value condition="!String.IsEmpty(Window(Home).Property(ListItem.Season)) + !String.IsEmpty(Window(Home).Property(ListItem.Episode)) + !String.IsEqual(Window(Home).Property(ListItem.TvShowTitle),Window(Home).Property(ListItem.Title))">[B]$INFO[Window(Home).Property(ListItem.TvShowTitle)][/B]</value>
        <value condition="!String.IsEmpty(Window(Home).Property(ListItem.Title))">[B]$INFO[Window(Home).Property(ListItem.Title)][/B]</value>
        <value condition="!String.IsEmpty(Window(Home).Property(ListItem.Label))">[B]$INFO[Window(Home).Property(ListItem.Label)][/B]</value>
        <!--widgets fallback-->
        <value condition="String.IsEqual(Window(Home).Property(SkinHelper.ListItem.DBTYPE), systeminfo)">[B]$INFO[Window(Home).Property(SkinHelper.ListItem.label)][/B] $INFO[Window(Home).Property(SkinHelper.ListItem.label2)]</value>
        <value condition="!String.IsEmpty(Window(Home).Property(SkinHelper.ListItem.Title)) + String.StartsWith(Window(Home).Property(SkinHelper.ListItem.FolderPath), pvr://)">[B]$INFO[Window(Home).Property(SkinHelper.ListItem.Title)][/B]</value>
        <value condition="!String.IsEmpty(Window(Home).Property(SkinHelper.ListItem.Season)) + !String.IsEmpty(Window(Home).Property(SkinHelper.ListItem.Episode)) + !String.IsEqual(Window(Home).Property(SkinHelper.ListItem.TvShowTitle),Window(Home).Property(SkinHelper.ListItem.Title))">[B]$INFO[Window(Home).Property(SkinHelper.ListItem.TvShowTitle)][/B]</value>
        <value condition="!String.IsEmpty(Window(Home).Property(SkinHelper.ListItem.Title))">[B]$INFO[Window(Home).Property(SkinHelper.ListItem.Title)][/B]</value>
        <value condition="!String.IsEmpty(Window(Home).Property(SkinHelper.ListItem.Label))">[B]$INFO[Window(Home).Property(SkinHelper.ListItem.Label)][/B]</value>
    </variable>

    <!-- Bingie Sublabel - tagline/watch now/album or song/pvr -->
    <variable name="BingieSublabel">
        <!-- Tagline Info -->
        <value condition="!String.IsEmpty(ListItem.TagLine)">[B]$INFO[ListItem.TagLine][/B]</value>
        <value condition="ControlGroup(900).HasFocus() + !String.IsEmpty(Window(Home).Property(ListItem.TagLine))">[B]$INFO[Window(Home).Property(ListItem.TagLine)][/B]</value>
        <!-- Watch Tag Info -->
        <value condition="[ControlGroup(505).HasFocus() + Integer.IsGreater(Container(1508).NumItems,0)] | String.IsEqual(ListItem.DBTYPE,tvshow)">$VAR[WatchNowTagInfo]</value>
        <!-- Album/Song Info -->
        <value condition="[String.IsEqual(ListItem.DBTYPE,album)  | String.IsEqual(Window(Home).Property(ListItem.DBTYPE),album)]">$INFO[ListItem.Album]</value>
        <value condition="!String.IsEmpty(ListItem.Artist)">$INFO[ListItem.TrackNumber,#, ]$INFO[ListItem.Title, ","]$INFO[ListItem.Album, (,)]</value>
        <!-- PVR Info -->
        <value condition="String.IsEmpty(ListItem.DBTYPE) + !String.IsEmpty(ListItem.Property(StartDateTime))">$INFO[ListItem.Channel]</value>
        <value condition="String.IsEmpty(ListItem.DBTYPE) + !String.IsEmpty(ListItem.Property(DateTime)) + !String.IsEmpty(ListItem.Label2)">$INFO[ListItem.Label2]</value>
        <value condition="String.IsEmpty(ListItem.DBTYPE) + !String.IsEmpty(ListItem.StartTime)">$INFO[ListItem.Label]</value>
    </variable>

    <!-- Watch Tag Info -->
    <variable name="WatchNowTagInfo">
        <value condition="!String.IsEmpty(ListItem.Property(TotalSeasons)) + !Integer.IsEqual(ListItem.Property(TotalSeasons),0) + !Integer.IsEqual(ListItem.Property(TotalSeasons),1) + String.IsEqual(ListItem.Property(UnWatchedEpisodes),ListItem.Property(TotalEpisodes))">[B]$LOCALIZE[31840][/B]</value>
        <value condition="ControlGroup(505).HasFocus()">[B]$LOCALIZE[31841][/B]</value>
    </variable>

    <!-- Bingie More Details (pseudo-random) -->
    <variable name="BingieMoreDetails">
        <value condition="Integer.IsLessOrEqual(System.Time(ss),15) + !String.IsEmpty(Window(Home).Property(SkinHelper.ListItem.Awards))">$INFO[Window(Home).Property(SkinHelper.ListItem.Awards)]</value>
        <value condition="Integer.IsLessOrEqual(System.Time(ss),30) + !String.IsEmpty(Window(Home).Property(SkinHelper.ListItem.CastListing))">$INFO[Window(Home).Property(SkinHelper.ListItem.CastListing)]</value>
        <value condition="Integer.IsGreater(System.Time(ss),15) + Integer.IsLessOrEqual(System.Time(ss),30) + Integer.IsGreater(Window(Home).Property(SkinHelper.ListItem.IMDB.Top250),0)">$INFO[Window(Home).Property(SkinHelper.ListItem.IMDB.Top250),#, $LOCALIZE[31859]]</value>
        <value condition="Integer.IsGreater(System.Time(ss),15) + Integer.IsLessOrEqual(System.Time(ss),30) + !String.IsEmpty(ListItem.Director)">$INFO[ListItem.Director]</value>
        <value condition="!String.IsEmpty(ListItem.Genre)">$INFO[ListItem.Genre]</value>
    </variable>
    <!-- Bingie More Details Image (pseudo-random) -->
    <variable name="BingieMoreDetailsImage">
        <value condition="Integer.IsLessOrEqual(System.Time(ss),15) + !String.IsEmpty(Window(Home).Property(SkinHelper.ListItem.Awards))">awards</value>
        <value condition="Integer.IsLessOrEqual(System.Time(ss),30) + !String.IsEmpty(Window(Home).Property(SkinHelper.ListItem.CastListing))">star</value>
        <value condition="Integer.IsGreater(System.Time(ss),15) + Integer.IsLessOrEqual(System.Time(ss),30) + Integer.IsGreater(Window(Home).Property(SkinHelper.ListItem.IMDB.Top250),0)">awards</value>
        <value condition="Integer.IsGreater(System.Time(ss),15) + Integer.IsLessOrEqual(System.Time(ss),30) + !String.IsEmpty(ListItem.Director)">director</value>
        <value condition="!String.IsEmpty(ListItem.Genre)">genre</value>
    </variable>

    <!-- line1: 'Season X Episode X' line: 2 'episode title' format -->
    <variable name="BingieEpisodeInfoLabel">
        <value condition="!String.IsEmpty(ListItem.Season) + !String.IsEmpty(ListItem.Episode) +
        !String.IsEmpty(ListItem.Title)">[B][CAPITALIZE]$INFO[ListItem.Season,$LOCALIZE[36904] ,]$INFO[ListItem.Episode, $LOCALIZE[36906] ,][/CAPITALIZE][/B][CR]$INFO[ListItem.Title]</value>
        <value condition="!String.IsEmpty(Window(Home).Property(ListItem.Season)) + !String.IsEmpty(Window(Home).Property(ListItem.Episode)) + !String.IsEmpty(Window(Home).Property(ListItem.Title))">[B][CAPITALIZE]$INFO[Window(Home).Property(ListItem.Season),$LOCALIZE[36904] ,]$INFO[Window(Home).Property(ListItem.Episode), $LOCALIZE[36906] ,][/CAPITALIZE][/B][CR]$INFO[Window(Home).Property(ListItem.Title)]</value>
        <!-- fallback -->
        <value>[B][CAPITALIZE]$INFO[Window(Home).Property(ListItem.Label)][/CAPITALIZE][/B]</value>
    </variable>

    <!-- 'SxxExx "episode_title"' format-->
    <variable name="BingieDialogEpisodeInfoLabel">
        <value condition="[String.IsEqual(ListItem.DBType,tvshow) | Container.Content(tvshows)] + !String.IsEmpty(Container(5050).ListItem.Season) + !String.IsEmpty(Container(5050).ListItem.Episode) +
        !String.IsEmpty(Container(5050).ListItem.Title)">[B]$INFO[Container(5050).ListItem.Season,$LOCALIZE[31871],]$INFO[Container(5050).ListItem.Episode,$LOCALIZE[31872],]$INFO[Container(5050).ListItem.Title, ","][/B]</value>
        <!--<value condition="Skin.HasSetting(EnableEpisodeInfoBypass) + [String.IsEqual(ListItem.DBType,episode) | Container.Content(episode)] + !String.IsEmpty(Container(5050).ListItem.Season) + !String.IsEmpty(Container(5050).ListItem.Episode) +
        !String.IsEmpty(Container(5050).ListItem.Title)">[B]$INFO[Container(5050).ListItem.Season,$LOCALIZE[31871],]$INFO[Container(5050).ListItem.Episode,$LOCALIZE[31872],]$INFO[Container(5050).ListItem.Title, ","][/B]</value>-->
        <value condition="!String.IsEmpty(ListItem.Season) + !String.IsEmpty(ListItem.Episode) +
        !String.IsEmpty(ListItem.Title)">[B][UPPERCASE]$INFO[ListItem.Season,$LOCALIZE[31871],]$INFO[ListItem.Episode,$LOCALIZE[31872],][/UPPERCASE]$INFO[ListItem.Title, ","][/B]</value>
        <!-- fallback -->
        <value>[B]$INFO[Window(Home).Property(ListItem.Label)][/B]</value>
    </variable>

    <variable name="BingiePlot">
        <!-- spotlight widget (inside container) -->
        <value condition="Skin.HasSetting(WidgetsPreferPlotOutline) + !String.IsEmpty(ListItem.PlotOutline)">$INFO[ListItem.PlotOutline]</value>
        <value condition="Skin.HasSetting(WidgetsPreferPlotOutline) + !String.IsEmpty(Window(Home).Property(ListItem.PlotOutline))">$INFO[Window(Home).Property(ListItem.PlotOutline)]</value>

        <value condition="!String.IsEmpty(ListItem.Plot)">$INFO[ListItem.Plot]</value>
        <value condition="!String.IsEmpty(ListItem.Property(Plot))">$INFO[ListItem.Property(Plot)]</value>
        <value condition="!String.IsEmpty(ListItem.Property(Album_Description))">$INFO[ListItem.Property(Album_Description)]</value>
        <value condition="!String.IsEmpty(ListItem.Property(Artist_Description))">$INFO[ListItem.Property(Artist_Description)]</value>
        <value condition="!String.IsEmpty(ListItem.PictureDesc)">$INFO[ListItem.PictureDesc]</value>
        <value condition="!String.IsEmpty(ListItem.PictureComment)">$INFO[ListItem.PictureComment]</value>
        <value condition="!String.IsEmpty(ListItem.PictureKeywords)">$INFO[ListItem.PictureKeywords]</value>
        <!-- spotlight widget -->
        <value condition="[ControlGroup(505).HasFocus() | Control.HasFocus(1508)] + !String.IsEmpty(Container(1508).ListItem.PlotOutline)">$INFO[Container(1508).ListItem.PlotOutline]</value>
        <value condition="[ControlGroup(505).HasFocus() | Control.HasFocus(1508)] + !String.IsEmpty(Container(1508).ListItem.Plot)">$INFO[Container(1508).ListItem.Plot]</value>
        <value condition="[ControlGroup(505).HasFocus() | Control.HasFocus(1508)] + !String.IsEmpty(Container(1508).ListItem.Property(Plot))">$INFO[Container(1508).ListItem.Property(Plot)]</value>
        <value condition="[ControlGroup(505).HasFocus() | Control.HasFocus(1508)] + !String.IsEmpty(Container(1508).ListItem.Property(Album_Description))">$INFO[Container(1508).ListItem.Property(Album_Description)]</value>
        <value condition="[ControlGroup(505).HasFocus() | Control.HasFocus(1508)] + !String.IsEmpty(Container(1508).ListItem.Property(Artist_Description))">$INFO[Container(1508).ListItem.Property(Artist_Description)]</value>
        <value condition="[ControlGroup(505).HasFocus() | Control.HasFocus(1508)] + !String.IsEmpty(Container(1508).ListItem.PictureDesc)">$INFO[Container(1508).ListItem.PictureDesc]</value>
        <value condition="[ControlGroup(505).HasFocus() | Control.HasFocus(1508)] + !String.IsEmpty(Container(1508).ListItem.PictureComment)">$INFO[Container(1508).ListItem.PictureComment]</value>
        <value condition="[ControlGroup(505).HasFocus() | Control.HasFocus(1508)] + !String.IsEmpty(Container(1508).ListItem.PictureKeywords)">$INFO[Container(1508).ListItem.PictureKeywords]</value>
        <!-- normal widgets info -->
        <value condition="!String.IsEmpty(Window(Home).Property(ListItem.PlotOutline)) + Skin.HasSetting(WidgetsPreferPlotOutline)">$INFO[Window(Home).Property(ListItem.PlotOutline)]</value>
        <value condition="!String.IsEmpty(Window(Home).Property(ListItem.Plot))">$INFO[Window(Home).Property(ListItem.Plot)]$INFO[Window(Home).Property(ListItem.label2)]</value>
        <value condition="!String.IsEmpty(Window(Home).Property(ListItem.Album_Description))">$INFO[Window(Home).Property(ListItem.Album_Description)]</value>
        <value condition="!String.IsEmpty(Window(Home).Property(ListItem.Artist_Description))">$INFO[Window(Home).Property(ListItem.Artist_Description)]</value>
        <value condition="!String.IsEmpty(Window(Home).Property(ListItem.PictureDesc))">$INFO[Window(Home).Property(ListItem.PictureDesc)]</value>
        <value condition="!String.IsEmpty(Window(Home).Property(ListItem.PictureComment))">$INFO[Window(Home).Property(ListItem.PictureComment)]</value>
        <value condition="!String.IsEmpty(Window(Home).Property(ListItem.PictureKeywords))">$INFO[Window(Home).Property(ListItem.PictureKeywords)]</value>
        <!-- skinhelper fallback-->
        <value condition="!String.IsEmpty(Window(Home).Property(SkinHelper.ListItem.PlotOutline)) + Skin.HasSetting(WidgetsPreferPlotOutline)">$INFO[Window(Home).Property(SkinHelper.ListItem.PlotOutline)]</value>
        <value condition="!String.IsEmpty(Window(Home).Property(SkinHelper.ListItem.Plot))">$INFO[Window(Home).Property(SkinHelper.ListItem.Plot)]$INFO[Window(Home).Property(SkinHelper.ListItem.label2)]</value>
        <value condition="!String.IsEmpty(Window(Home).Property(SkinHelper.ListItem.Album_Description))">$INFO[Window(Home).Property(SkinHelper.ListItem.Album_Description)]</value>
        <value condition="!String.IsEmpty(Window(Home).Property(SkinHelper.ListItem.Artist_Description))">$INFO[Window(Home).Property(SkinHelper.ListItem.Artist_Description)]</value>
        <value condition="!String.IsEmpty(Window(Home).Property(SkinHelper.ListItem.PictureDesc))">$INFO[Window(Home).Property(SkinHelper.ListItem.PictureDesc)]</value>
        <value condition="!String.IsEmpty(Window(Home).Property(SkinHelper.ListItem.PictureComment))">$INFO[Window(Home).Property(SkinHelper.ListItem.PictureComment)]</value>
        <value condition="!String.IsEmpty(Window(Home).Property(SkinHelper.ListItem.PictureKeywords))">$INFO[Window(Home).Property(SkinHelper.ListItem.PictureKeywords)]</value>
    </variable>

    <!-- seasons content for view525 -->
    <variable name="View525SeasonsContent">
        <value condition="[String.IsEqual(ListItem.DBType,episode) | Container.Content(episodes)] + !String.IsEmpty(ListItem.DBID) + !String.IsEmpty(Window(Home).Property(ListItem.TVShowID))">$INFO[Window(Home).Property(ListItem.TVShowID),videodb://tvshows/titles/,/]</value>
        <value/>
    </variable>

    <!-- plot outline prioritized and per-episode plot -->
    <variable name="BingieInfoDialogPlot">
        <value condition="Skin.HasSetting(ShowEpisodePlotInfoDialog) + [String.IsEqual(ListItem.DBType,tvshow) | Container.Content(tvshows)] + !String.IsEmpty(Container(5050).ListItem.Plot)">$INFO[Container(5050).ListItem.Plot]</value>
        <!-- contains is a workaround to ignore bad scraped outline plots, should be solved at scraper level -->
        <value condition="!String.IsEmpty(ListItem.PlotOutline) + !String.Contains(ListItem.PlotOutline,$LOCALIZE[20339]: )">$INFO[ListItem.PlotOutline]</value>
        <value>$VAR[Plots]</value>
    </variable>

    <!-- plot outline prioritized for views -->
    <variable name="ViewsPlotWithOutline">
        <value condition="!String.IsEmpty(ListItem.PlotOutline) + Skin.HasSetting(WidgetsPreferPlotOutline) + !String.Contains(ListItem.PlotOutline,$LOCALIZE[20339]: )">$INFO[ListItem.PlotOutline]</value>
        <value>$VAR[Plots]</value>
    </variable>

    <variable name="BingieInfoDialogDetailsTextColor">
        <value condition="!String.IsEmpty(Window(Home).Property(TrailerOnLoad)) + String.IsEqual(Window(Home).Property(TrailerPlaying),windowed)">white</value>
        <value>$INFO[Skin.String(BingieSecondaryTextColor)]</value>
    </variable>

    <variable name="BingieInfoDialogIconColor">
        <value condition="!String.IsEmpty(Window(Home).Property(TrailerOnLoad)) + String.IsEqual(Window(Home).Property(TrailerPlaying),windowed)">white</value>
        <value>$INFO[Skin.String(BingieInfoDialogIconColor)]</value>
    </variable>

    <variable name="BingieInfoDialogButtonsTextColor">
        <value condition="!String.IsEmpty(Window(Home).Property(TrailerOnLoad)) + String.IsEqual(Window(Home).Property(TrailerPlaying),windowed)">white</value>
        <value>$INFO[Skin.String(BingiePrimaryTextColor)]</value>
    </variable>

    <variable name="BingieInfoDialogPlotTextColor">
        <value condition="!String.IsEmpty(Window(Home).Property(TrailerOnLoad)) + String.IsEqual(Window(Home).Property(TrailerPlaying),windowed)">white</value>
        <value>$INFO[Skin.String(BingiePrimaryTextColor)]</value>
    </variable>

    <!-- TVShow title & fallback for skin widgets -->
    <variable name="TVShowTitle">
        <value condition="String.IsEqual(ListItem.DBType,episode) + !String.IsEmpty(ListItem.TVShowTitle)">$INFO[ListItem.TVShowTitle]</value>
        <value condition="String.IsEqual(ListItem.DBType,episode) + !String.IsEmpty(Window(Home).Property(ListItem.TvShowTitle))">$INFO[Window(Home).Property(ListItem.TvShowTitle)]</value>
        <value>$INFO[ListItem.Title]</value>
    </variable>

    <!-- Profile name for widgets 'for you' -->
    <variable name="ForCurrentProfileNameLabel">
        <value condition="!String.IsEqual(System.ProfileName,Master user)">$INFO[System.ProfileName,$LOCALIZE[31862] ,]</value>
        <value>$LOCALIZE[31863]</value>
    </variable>

    <!-- Welcome notification message -->
    <variable name="WelcomeNotificationMsg">
        <value condition="!Skin.HasSetting(BingieFirstStartupDone) | !Skin.HasSetting(BingieSecondStartupDone)">[B]$LOCALIZE[31387]![/B]</value>
        <value condition="!String.IsEqual(System.ProfileName,Master user)">$INFO[System.ProfileName,$LOCALIZE[31858][CR][B],[/B]!]</value>
        <value>[B]$LOCALIZE[31858]![/B]</value>
    </variable>

    <variable name="BingieGenreIconVarList">
        <value condition="System.HasAddon(resource.images.moviegenreicons.bingie)">$INFO[ListItem.Label,resource://resource.images.moviegenreicons.bingie/,.jpg]</value>
        <value>$VAR[MovieGenreIconVarList]</value>
    </variable>

    <variable name="CategoriesBricks">
        <value>$INFO[ListItem.Label,bingie/categories/,.jpg]</value>
    </variable>

    <variable name="CategoriesFanart">
        <value condition="String.IsEqual(ListItem.Label,movies)">$INFO[Window(Home).Property(SkinHelper.AllMoviesBackground)]</value>
        <value condition="String.IsEqual(ListItem.Label,tvshows)">$INFO[Window(Home).Property(SkinHelper.AllTvShowsBackground)]</value>
        <value condition="String.IsEqual(ListItem.Label,recentlyadded)">$INFO[Window(Home).Property(SkinHelper.RecentVideosBackground)]</value>
    </variable>

    <!-- global background with fade-panel overlay -->
    <include name="GlobalFanartWithOverlay">
        <include>GlobalBackground</include>
        <control type="image">
            <width>100%</width>
            <height>100%</height>
            <texture background="true" colordiffuse="$VAR[BingiePanelColor]">colors/color_white.png</texture>
            <animation effect="fade" start="100" end="$PARAM[overlay_percent]" time="0" condition="true">Conditional</animation>
        </control>
    </include>

    <variable name="WidgetBusySpinnerPath">
        <value condition="System.HasAddon(resource.images.busyspinners.basic) + Skin.String(SkinHelper.WidgetSpinnerTexture.Path)">$INFO[Skin.String(SkinHelper.WidgetSpinnerTexture.Path)]</value>
        <value>spinner/widgets_busy_loader/</value>
    </variable>

    <variable name="DialogBusySpinnerPath">
        <value condition="System.HasAddon(resource.images.busyspinners.basic) + Skin.String(SkinHelper.SpinnerTexture.Path)">$INFO[Skin.String(SkinHelper.SpinnerTexture.Path)]</value>
        <value>spinner/busy_spinner/</value>
    </variable>

    <!-- Up Next addon vars -->
    <!-- next up resolution - is currently missing in UP-NEXT addon
    <variable name="NextUpResolution">
        <value condition="Integer.IsGreater(Control.GetLabel(3011),1080)">UHD</value>
        <value condition="Integer.IsGreater(Control.GetLabel(3011),700)">HD</value>
        <value condition="Integer.IsLess(Control.GetLabel(3011),700)">SD</value>
    </variable> -->

    <!-- next up thumb episode/tvshow based on setting preference -->
    <variable name="NextUpThumb">
        <value condition="!String.IsEmpty(Window.Property(fanart)) + Skin.HasSetting(PreferTvShowThumbWidget)">$INFO[Window.Property(fanart)]</value>
        <value condition="!String.IsEmpty(Window.Property(thumb))">$INFO[Window.Property(thumb)]</value>
        <value condition="!String.IsEmpty(Window.Property(fanart))">$INFO[Window.Property(fanart)]</value>
    </variable>

    <!-- Jedi mind tricks inventory -->

    <!-- Get NextUp Episode number and subtracts one for playoffset (play from beginning workaround) -->
    <variable name="NextUpEpisodeMinusOne">
        <value condition="Integer.IsEqual(Container(5050).ListItem.Episode,1)">0</value>
        <value condition="Integer.IsEqual(Container(5050).ListItem.Episode,2)">1</value>
        <value condition="Integer.IsEqual(Container(5050).ListItem.Episode,3)">2</value>
        <value condition="Integer.IsEqual(Container(5050).ListItem.Episode,4)">3</value>
        <value condition="Integer.IsEqual(Container(5050).ListItem.Episode,5)">4</value>
        <value condition="Integer.IsEqual(Container(5050).ListItem.Episode,6)">5</value>
        <value condition="Integer.IsEqual(Container(5050).ListItem.Episode,7)">6</value>
        <value condition="Integer.IsEqual(Container(5050).ListItem.Episode,8)">7</value>
        <value condition="Integer.IsEqual(Container(5050).ListItem.Episode,9)">8</value>
        <value condition="Integer.IsEqual(Container(5050).ListItem.Episode,10)">9</value>
        <value condition="Integer.IsEqual(Container(5050).ListItem.Episode,11)">10</value>
        <value condition="Integer.IsEqual(Container(5050).ListItem.Episode,12)">11</value>
        <value condition="Integer.IsEqual(Container(5050).ListItem.Episode,13)">12</value>
        <value condition="Integer.IsEqual(Container(5050).ListItem.Episode,14)">13</value>
        <value condition="Integer.IsEqual(Container(5050).ListItem.Episode,15)">14</value>
        <value condition="Integer.IsEqual(Container(5050).ListItem.Episode,16)">15</value>
        <value condition="Integer.IsEqual(Container(5050).ListItem.Episode,17)">16</value>
        <value condition="Integer.IsEqual(Container(5050).ListItem.Episode,18)">17</value>
        <value condition="Integer.IsEqual(Container(5050).ListItem.Episode,19)">18</value>
        <value condition="Integer.IsEqual(Container(5050).ListItem.Episode,20)">19</value>
        <value condition="Integer.IsEqual(Container(5050).ListItem.Episode,21)">20</value>
        <value condition="Integer.IsEqual(Container(5050).ListItem.Episode,22)">21</value>
        <value condition="Integer.IsEqual(Container(5050).ListItem.Episode,23)">22</value>
        <value condition="Integer.IsEqual(Container(5050).ListItem.Episode,24)">23</value>
        <value condition="Integer.IsEqual(Container(5050).ListItem.Episode,25)">24</value>
        <value condition="Integer.IsEqual(Container(5050).ListItem.Episode,26)">25</value>
        <value condition="Integer.IsEqual(Container(5050).ListItem.Episode,27)">26</value>
        <value condition="Integer.IsEqual(Container(5050).ListItem.Episode,28)">27</value>
        <value condition="Integer.IsEqual(Container(5050).ListItem.Episode,29)">28</value>
        <value condition="Integer.IsEqual(Container(5050).ListItem.Episode,30)">29</value>
        <value condition="Integer.IsEqual(Container(5050).ListItem.Episode,31)">30</value>
        <value condition="Integer.IsEqual(Container(5050).ListItem.Episode,32)">31</value>
        <value condition="Integer.IsEqual(Container(5050).ListItem.Episode,33)">32</value>
        <value condition="Integer.IsEqual(Container(5050).ListItem.Episode,34)">33</value>
        <value condition="Integer.IsEqual(Container(5050).ListItem.Episode,35)">34</value>
        <value condition="Integer.IsEqual(Container(5050).ListItem.Episode,36)">35</value>
        <value condition="Integer.IsEqual(Container(5050).ListItem.Episode,37)">36</value>
        <value condition="Integer.IsEqual(Container(5050).ListItem.Episode,38)">37</value>
        <value condition="Integer.IsEqual(Container(5050).ListItem.Episode,39)">38</value>
        <value condition="Integer.IsEqual(Container(5050).ListItem.Episode,40)">39</value>
        <value>-1</value>
    </variable>

    <!-- painful way to get percentage based rating
    Note: intentionally disregarding 0 and 100 -->
    <variable name="RatingDecimalToPercentage">
        <!-- user rating -->
        <value condition="!String.IsEmpty(ListItem.UserRating)">$VAR[RatingDecimalToPercentageListItemUserRating]</value>
        <value condition="!String.IsEmpty(ListItem.Rating)">$VAR[RatingDecimalToPercentageListItemRating]</value>
        <value condition="!String.IsEmpty(Window(Home).Property(ListItem.UserRating))">$VAR[RatingDecimalToPercentageHomeListItemUserRating]</value>
        <value condition="!String.IsEmpty(Window(Home).Property(ListItem.Rating))">$VAR[RatingDecimalToPercentageHomeListItemRating]</value>
        <value condition="!String.IsEmpty(Window(Home).Property(SkinHelper.ListItem.UserRating))">$VAR[RatingDecimalToPercentageSkinHelperListItemUserRating]</value>
        <value condition="!String.IsEmpty(Window(Home).Property(SkinHelper.ListItem.Rating))">$VAR[RatingDecimalToPercentageSkinHelperListItemRating]</value>
        <!-- Window(Home).Property(SkinHelper.ListItem.Rating.percent.IMDB), Window(Home).Property(SkinHelper.ListItem.RottenTomatoes.Rating.Percent) -->
    </variable>

    <!-- ListItem.UserRating -->
    <variable name="RatingDecimalToPercentageListItemUserRating">
        <value condition="String.IsEqual(ListItem.UserRating,0)"/>
        <value condition="String.IsEqual(ListItem.UserRating,0.0)"/>
        <value condition="String.IsEqual(ListItem.UserRating,0.1)">1</value>
        <value condition="String.IsEqual(ListItem.UserRating,0.2)">2</value>
        <value condition="String.IsEqual(ListItem.UserRating,0.3)">3</value>
        <value condition="String.IsEqual(ListItem.UserRating,0.4)">4</value>
        <value condition="String.IsEqual(ListItem.UserRating,0.5)">5</value>
        <value condition="String.IsEqual(ListItem.UserRating,0.6)">6</value>
        <value condition="String.IsEqual(ListItem.UserRating,0.7)">7</value>
        <value condition="String.IsEqual(ListItem.UserRating,0.8)">8</value>
        <value condition="String.IsEqual(ListItem.UserRating,0.9)">9</value>
        <value condition="String.IsEqual(ListItem.UserRating,1)">10</value>
        <value condition="String.IsEqual(ListItem.UserRating,1.0)">10</value>
        <value condition="String.IsEqual(ListItem.UserRating,1.1)">11</value>
        <value condition="String.IsEqual(ListItem.UserRating,1.2)">12</value>
        <value condition="String.IsEqual(ListItem.UserRating,1.3)">13</value>
        <value condition="String.IsEqual(ListItem.UserRating,1.4)">14</value>
        <value condition="String.IsEqual(ListItem.UserRating,1.5)">15</value>
        <value condition="String.IsEqual(ListItem.UserRating,1.6)">16</value>
        <value condition="String.IsEqual(ListItem.UserRating,1.7)">17</value>
        <value condition="String.IsEqual(ListItem.UserRating,1.8)">18</value>
        <value condition="String.IsEqual(ListItem.UserRating,1.9)">19</value>
        <value condition="String.IsEqual(ListItem.UserRating,2)">20</value>
        <value condition="String.IsEqual(ListItem.UserRating,2.0)">20</value>
        <value condition="String.IsEqual(ListItem.UserRating,2.1)">21</value>
        <value condition="String.IsEqual(ListItem.UserRating,2.2)">22</value>
        <value condition="String.IsEqual(ListItem.UserRating,2.3)">23</value>
        <value condition="String.IsEqual(ListItem.UserRating,2.4)">24</value>
        <value condition="String.IsEqual(ListItem.UserRating,2.5)">25</value>
        <value condition="String.IsEqual(ListItem.UserRating,2.6)">26</value>
        <value condition="String.IsEqual(ListItem.UserRating,2.7)">27</value>
        <value condition="String.IsEqual(ListItem.UserRating,2.8)">28</value>
        <value condition="String.IsEqual(ListItem.UserRating,2.9)">29</value>
        <value condition="String.IsEqual(ListItem.UserRating,3)">30</value>
        <value condition="String.IsEqual(ListItem.UserRating,3.0)">30</value>
        <value condition="String.IsEqual(ListItem.UserRating,3.1)">31</value>
        <value condition="String.IsEqual(ListItem.UserRating,3.2)">32</value>
        <value condition="String.IsEqual(ListItem.UserRating,3.3)">33</value>
        <value condition="String.IsEqual(ListItem.UserRating,3.4)">34</value>
        <value condition="String.IsEqual(ListItem.UserRating,3.5)">35</value>
        <value condition="String.IsEqual(ListItem.UserRating,3.6)">36</value>
        <value condition="String.IsEqual(ListItem.UserRating,3.7)">37</value>
        <value condition="String.IsEqual(ListItem.UserRating,3.8)">38</value>
        <value condition="String.IsEqual(ListItem.UserRating,3.9)">39</value>
        <value condition="String.IsEqual(ListItem.UserRating,4)">40</value>
        <value condition="String.IsEqual(ListItem.UserRating,4.0)">40</value>
        <value condition="String.IsEqual(ListItem.UserRating,4.1)">41</value>
        <value condition="String.IsEqual(ListItem.UserRating,4.2)">42</value>
        <value condition="String.IsEqual(ListItem.UserRating,4.3)">43</value>
        <value condition="String.IsEqual(ListItem.UserRating,4.4)">44</value>
        <value condition="String.IsEqual(ListItem.UserRating,4.5)">45</value>
        <value condition="String.IsEqual(ListItem.UserRating,4.6)">46</value>
        <value condition="String.IsEqual(ListItem.UserRating,4.7)">47</value>
        <value condition="String.IsEqual(ListItem.UserRating,4.8)">48</value>
        <value condition="String.IsEqual(ListItem.UserRating,4.9)">49</value>
        <value condition="String.IsEqual(ListItem.UserRating,5)">50</value>
        <value condition="String.IsEqual(ListItem.UserRating,5.0)">50</value>
        <value condition="String.IsEqual(ListItem.UserRating,5.1)">51</value>
        <value condition="String.IsEqual(ListItem.UserRating,5.2)">52</value>
        <value condition="String.IsEqual(ListItem.UserRating,5.3)">53</value>
        <value condition="String.IsEqual(ListItem.UserRating,5.4)">54</value>
        <value condition="String.IsEqual(ListItem.UserRating,5.5)">55</value>
        <value condition="String.IsEqual(ListItem.UserRating,5.6)">56</value>
        <value condition="String.IsEqual(ListItem.UserRating,5.7)">57</value>
        <value condition="String.IsEqual(ListItem.UserRating,5.8)">58</value>
        <value condition="String.IsEqual(ListItem.UserRating,5.9)">59</value>
        <value condition="String.IsEqual(ListItem.UserRating,6)">60</value>
        <value condition="String.IsEqual(ListItem.UserRating,6.0)">60</value>
        <value condition="String.IsEqual(ListItem.UserRating,6.1)">61</value>
        <value condition="String.IsEqual(ListItem.UserRating,6.2)">62</value>
        <value condition="String.IsEqual(ListItem.UserRating,6.3)">63</value>
        <value condition="String.IsEqual(ListItem.UserRating,6.4)">64</value>
        <value condition="String.IsEqual(ListItem.UserRating,6.5)">65</value>
        <value condition="String.IsEqual(ListItem.UserRating,6.6)">66</value>
        <value condition="String.IsEqual(ListItem.UserRating,6.7)">67</value>
        <value condition="String.IsEqual(ListItem.UserRating,6.8)">68</value>
        <value condition="String.IsEqual(ListItem.UserRating,6.9)">69</value>
        <value condition="String.IsEqual(ListItem.UserRating,7)">70</value>
        <value condition="String.IsEqual(ListItem.UserRating,7.0)">70</value>
        <value condition="String.IsEqual(ListItem.UserRating,7.1)">71</value>
        <value condition="String.IsEqual(ListItem.UserRating,7.2)">72</value>
        <value condition="String.IsEqual(ListItem.UserRating,7.3)">73</value>
        <value condition="String.IsEqual(ListItem.UserRating,7.4)">74</value>
        <value condition="String.IsEqual(ListItem.UserRating,7.5)">75</value>
        <value condition="String.IsEqual(ListItem.UserRating,7.6)">76</value>
        <value condition="String.IsEqual(ListItem.UserRating,7.7)">77</value>
        <value condition="String.IsEqual(ListItem.UserRating,7.8)">78</value>
        <value condition="String.IsEqual(ListItem.UserRating,7.9)">79</value>
        <value condition="String.IsEqual(ListItem.UserRating,8)">80</value>
        <value condition="String.IsEqual(ListItem.UserRating,8.0)">80</value>
        <value condition="String.IsEqual(ListItem.UserRating,8.1)">81</value>
        <value condition="String.IsEqual(ListItem.UserRating,8.2)">82</value>
        <value condition="String.IsEqual(ListItem.UserRating,8.3)">83</value>
        <value condition="String.IsEqual(ListItem.UserRating,8.4)">84</value>
        <value condition="String.IsEqual(ListItem.UserRating,8.5)">85</value>
        <value condition="String.IsEqual(ListItem.UserRating,8.6)">86</value>
        <value condition="String.IsEqual(ListItem.UserRating,8.7)">87</value>
        <value condition="String.IsEqual(ListItem.UserRating,8.8)">88</value>
        <value condition="String.IsEqual(ListItem.UserRating,8.9)">89</value>
        <value condition="String.IsEqual(ListItem.UserRating,9)">90</value>
        <value condition="String.IsEqual(ListItem.UserRating,9.0)">90</value>
        <value condition="String.IsEqual(ListItem.UserRating,9.1)">91</value>
        <value condition="String.IsEqual(ListItem.UserRating,9.2)">92</value>
        <value condition="String.IsEqual(ListItem.UserRating,9.3)">93</value>
        <value condition="String.IsEqual(ListItem.UserRating,9.4)">94</value>
        <value condition="String.IsEqual(ListItem.UserRating,9.5)">95</value>
        <value condition="String.IsEqual(ListItem.UserRating,9.6)">96</value>
        <value condition="String.IsEqual(ListItem.UserRating,9.7)">97</value>
        <value condition="String.IsEqual(ListItem.UserRating,9.8)">98</value>
        <value condition="String.IsEqual(ListItem.UserRating,9.9)">99</value>
        <value condition="String.IsEqual(ListItem.UserRating,10)"/>
        <value condition="String.IsEqual(ListItem.UserRating,10.0)"/>
    </variable>

    <!-- Window(Home).Property(ListItem.UserRating) -->
    <variable name="RatingDecimalToPercentageHomeListItemUserRating">
        <value condition="String.IsEqual(Window(Home).Property(ListItem.UserRating),0)"/>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.UserRating),0.0)"/>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.UserRating),0.1)">1</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.UserRating),0.2)">2</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.UserRating),0.3)">3</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.UserRating),0.4)">4</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.UserRating),0.5)">5</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.UserRating),0.6)">6</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.UserRating),0.7)">7</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.UserRating),0.8)">8</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.UserRating),0.9)">9</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.UserRating),1)">10</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.UserRating),1.0)">10</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.UserRating),1.1)">11</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.UserRating),1.2)">12</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.UserRating),1.3)">13</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.UserRating),1.4)">14</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.UserRating),1.5)">15</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.UserRating),1.6)">16</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.UserRating),1.7)">17</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.UserRating),1.8)">18</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.UserRating),1.9)">19</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.UserRating),2)">20</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.UserRating),2.0)">20</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.UserRating),2.1)">21</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.UserRating),2.2)">22</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.UserRating),2.3)">23</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.UserRating),2.4)">24</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.UserRating),2.5)">25</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.UserRating),2.6)">26</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.UserRating),2.7)">27</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.UserRating),2.8)">28</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.UserRating),2.9)">29</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.UserRating),3)">30</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.UserRating),3.0)">30</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.UserRating),3.1)">31</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.UserRating),3.2)">32</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.UserRating),3.3)">33</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.UserRating),3.4)">34</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.UserRating),3.5)">35</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.UserRating),3.6)">36</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.UserRating),3.7)">37</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.UserRating),3.8)">38</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.UserRating),3.9)">39</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.UserRating),4)">40</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.UserRating),4.0)">40</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.UserRating),4.1)">41</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.UserRating),4.2)">42</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.UserRating),4.3)">43</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.UserRating),4.4)">44</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.UserRating),4.5)">45</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.UserRating),4.6)">46</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.UserRating),4.7)">47</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.UserRating),4.8)">48</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.UserRating),4.9)">49</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.UserRating),5)">50</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.UserRating),5.0)">50</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.UserRating),5.1)">51</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.UserRating),5.2)">52</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.UserRating),5.3)">53</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.UserRating),5.4)">54</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.UserRating),5.5)">55</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.UserRating),5.6)">56</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.UserRating),5.7)">57</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.UserRating),5.8)">58</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.UserRating),5.9)">59</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.UserRating),6)">60</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.UserRating),6.0)">60</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.UserRating),6.1)">61</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.UserRating),6.2)">62</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.UserRating),6.3)">63</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.UserRating),6.4)">64</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.UserRating),6.5)">65</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.UserRating),6.6)">66</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.UserRating),6.7)">67</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.UserRating),6.8)">68</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.UserRating),6.9)">69</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.UserRating),7)">70</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.UserRating),7.0)">70</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.UserRating),7.1)">71</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.UserRating),7.2)">72</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.UserRating),7.3)">73</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.UserRating),7.4)">74</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.UserRating),7.5)">75</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.UserRating),7.6)">76</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.UserRating),7.7)">77</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.UserRating),7.8)">78</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.UserRating),7.9)">79</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.UserRating),8)">80</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.UserRating),8.0)">80</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.UserRating),8.1)">81</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.UserRating),8.2)">82</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.UserRating),8.3)">83</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.UserRating),8.4)">84</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.UserRating),8.5)">85</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.UserRating),8.6)">86</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.UserRating),8.7)">87</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.UserRating),8.8)">88</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.UserRating),8.9)">89</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.UserRating),9)">90</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.UserRating),9.0)">90</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.UserRating),9.1)">91</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.UserRating),9.2)">92</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.UserRating),9.3)">93</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.UserRating),9.4)">94</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.UserRating),9.5)">95</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.UserRating),9.6)">96</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.UserRating),9.7)">97</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.UserRating),9.8)">98</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.UserRating),9.9)">99</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.UserRating),10)"/>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.UserRating),10.0)"/>
    </variable>

    <!-- Window(Home).Property(SkinHelper.ListItem.UserRating) -->
    <variable name="RatingDecimalToPercentageSkinHelperListItemUserRating">
        <value condition="String.IsEqual(Window(Home).Property(SkinHelper.ListItem.UserRating),0)"/>
        <value condition="String.IsEqual(Window(Home).Property(SkinHelper.ListItem.UserRating),0.0)"/>
        <value condition="String.IsEqual(Window(Home).Property(SkinHelper.ListItem.UserRating),0.1)">1</value>
        <value condition="String.IsEqual(Window(Home).Property(SkinHelper.ListItem.UserRating),0.2)">2</value>
        <value condition="String.IsEqual(Window(Home).Property(SkinHelper.ListItem.UserRating),0.3)">3</value>
        <value condition="String.IsEqual(Window(Home).Property(SkinHelper.ListItem.UserRating),0.4)">4</value>
        <value condition="String.IsEqual(Window(Home).Property(SkinHelper.ListItem.UserRating),0.5)">5</value>
        <value condition="String.IsEqual(Window(Home).Property(SkinHelper.ListItem.UserRating),0.6)">6</value>
        <value condition="String.IsEqual(Window(Home).Property(SkinHelper.ListItem.UserRating),0.7)">7</value>
        <value condition="String.IsEqual(Window(Home).Property(SkinHelper.ListItem.UserRating),0.8)">8</value>
        <value condition="String.IsEqual(Window(Home).Property(SkinHelper.ListItem.UserRating),0.9)">9</value>
        <value condition="String.IsEqual(Window(Home).Property(SkinHelper.ListItem.UserRating),1)">10</value>
        <value condition="String.IsEqual(Window(Home).Property(SkinHelper.ListItem.UserRating),1.0)">10</value>
        <value condition="String.IsEqual(Window(Home).Property(SkinHelper.ListItem.UserRating),1.1)">11</value>
        <value condition="String.IsEqual(Window(Home).Property(SkinHelper.ListItem.UserRating),1.2)">12</value>
        <value condition="String.IsEqual(Window(Home).Property(SkinHelper.ListItem.UserRating),1.3)">13</value>
        <value condition="String.IsEqual(Window(Home).Property(SkinHelper.ListItem.UserRating),1.4)">14</value>
        <value condition="String.IsEqual(Window(Home).Property(SkinHelper.ListItem.UserRating),1.5)">15</value>
        <value condition="String.IsEqual(Window(Home).Property(SkinHelper.ListItem.UserRating),1.6)">16</value>
        <value condition="String.IsEqual(Window(Home).Property(SkinHelper.ListItem.UserRating),1.7)">17</value>
        <value condition="String.IsEqual(Window(Home).Property(SkinHelper.ListItem.UserRating),1.8)">18</value>
        <value condition="String.IsEqual(Window(Home).Property(SkinHelper.ListItem.UserRating),1.9)">19</value>
        <value condition="String.IsEqual(Window(Home).Property(SkinHelper.ListItem.UserRating),2)">20</value>
        <value condition="String.IsEqual(Window(Home).Property(SkinHelper.ListItem.UserRating),2.0)">20</value>
        <value condition="String.IsEqual(Window(Home).Property(SkinHelper.ListItem.UserRating),2.1)">21</value>
        <value condition="String.IsEqual(Window(Home).Property(SkinHelper.ListItem.UserRating),2.2)">22</value>
        <value condition="String.IsEqual(Window(Home).Property(SkinHelper.ListItem.UserRating),2.3)">23</value>
        <value condition="String.IsEqual(Window(Home).Property(SkinHelper.ListItem.UserRating),2.4)">24</value>
        <value condition="String.IsEqual(Window(Home).Property(SkinHelper.ListItem.UserRating),2.5)">25</value>
        <value condition="String.IsEqual(Window(Home).Property(SkinHelper.ListItem.UserRating),2.6)">26</value>
        <value condition="String.IsEqual(Window(Home).Property(SkinHelper.ListItem.UserRating),2.7)">27</value>
        <value condition="String.IsEqual(Window(Home).Property(SkinHelper.ListItem.UserRating),2.8)">28</value>
        <value condition="String.IsEqual(Window(Home).Property(SkinHelper.ListItem.UserRating),2.9)">29</value>
        <value condition="String.IsEqual(Window(Home).Property(SkinHelper.ListItem.UserRating),3)">30</value>
        <value condition="String.IsEqual(Window(Home).Property(SkinHelper.ListItem.UserRating),3.0)">30</value>
        <value condition="String.IsEqual(Window(Home).Property(SkinHelper.ListItem.UserRating),3.1)">31</value>
        <value condition="String.IsEqual(Window(Home).Property(SkinHelper.ListItem.UserRating),3.2)">32</value>
        <value condition="String.IsEqual(Window(Home).Property(SkinHelper.ListItem.UserRating),3.3)">33</value>
        <value condition="String.IsEqual(Window(Home).Property(SkinHelper.ListItem.UserRating),3.4)">34</value>
        <value condition="String.IsEqual(Window(Home).Property(SkinHelper.ListItem.UserRating),3.5)">35</value>
        <value condition="String.IsEqual(Window(Home).Property(SkinHelper.ListItem.UserRating),3.6)">36</value>
        <value condition="String.IsEqual(Window(Home).Property(SkinHelper.ListItem.UserRating),3.7)">37</value>
        <value condition="String.IsEqual(Window(Home).Property(SkinHelper.ListItem.UserRating),3.8)">38</value>
        <value condition="String.IsEqual(Window(Home).Property(SkinHelper.ListItem.UserRating),3.9)">39</value>
        <value condition="String.IsEqual(Window(Home).Property(SkinHelper.ListItem.UserRating),4)">40</value>
        <value condition="String.IsEqual(Window(Home).Property(SkinHelper.ListItem.UserRating),4.0)">40</value>
        <value condition="String.IsEqual(Window(Home).Property(SkinHelper.ListItem.UserRating),4.1)">41</value>
        <value condition="String.IsEqual(Window(Home).Property(SkinHelper.ListItem.UserRating),4.2)">42</value>
        <value condition="String.IsEqual(Window(Home).Property(SkinHelper.ListItem.UserRating),4.3)">43</value>
        <value condition="String.IsEqual(Window(Home).Property(SkinHelper.ListItem.UserRating),4.4)">44</value>
        <value condition="String.IsEqual(Window(Home).Property(SkinHelper.ListItem.UserRating),4.5)">45</value>
        <value condition="String.IsEqual(Window(Home).Property(SkinHelper.ListItem.UserRating),4.6)">46</value>
        <value condition="String.IsEqual(Window(Home).Property(SkinHelper.ListItem.UserRating),4.7)">47</value>
        <value condition="String.IsEqual(Window(Home).Property(SkinHelper.ListItem.UserRating),4.8)">48</value>
        <value condition="String.IsEqual(Window(Home).Property(SkinHelper.ListItem.UserRating),4.9)">49</value>
        <value condition="String.IsEqual(Window(Home).Property(SkinHelper.ListItem.UserRating),5)">50</value>
        <value condition="String.IsEqual(Window(Home).Property(SkinHelper.ListItem.UserRating),5.0)">50</value>
        <value condition="String.IsEqual(Window(Home).Property(SkinHelper.ListItem.UserRating),5.1)">51</value>
        <value condition="String.IsEqual(Window(Home).Property(SkinHelper.ListItem.UserRating),5.2)">52</value>
        <value condition="String.IsEqual(Window(Home).Property(SkinHelper.ListItem.UserRating),5.3)">53</value>
        <value condition="String.IsEqual(Window(Home).Property(SkinHelper.ListItem.UserRating),5.4)">54</value>
        <value condition="String.IsEqual(Window(Home).Property(SkinHelper.ListItem.UserRating),5.5)">55</value>
        <value condition="String.IsEqual(Window(Home).Property(SkinHelper.ListItem.UserRating),5.6)">56</value>
        <value condition="String.IsEqual(Window(Home).Property(SkinHelper.ListItem.UserRating),5.7)">57</value>
        <value condition="String.IsEqual(Window(Home).Property(SkinHelper.ListItem.UserRating),5.8)">58</value>
        <value condition="String.IsEqual(Window(Home).Property(SkinHelper.ListItem.UserRating),5.9)">59</value>
        <value condition="String.IsEqual(Window(Home).Property(SkinHelper.ListItem.UserRating),6)">60</value>
        <value condition="String.IsEqual(Window(Home).Property(SkinHelper.ListItem.UserRating),6.0)">60</value>
        <value condition="String.IsEqual(Window(Home).Property(SkinHelper.ListItem.UserRating),6.1)">61</value>
        <value condition="String.IsEqual(Window(Home).Property(SkinHelper.ListItem.UserRating),6.2)">62</value>
        <value condition="String.IsEqual(Window(Home).Property(SkinHelper.ListItem.UserRating),6.3)">63</value>
        <value condition="String.IsEqual(Window(Home).Property(SkinHelper.ListItem.UserRating),6.4)">64</value>
        <value condition="String.IsEqual(Window(Home).Property(SkinHelper.ListItem.UserRating),6.5)">65</value>
        <value condition="String.IsEqual(Window(Home).Property(SkinHelper.ListItem.UserRating),6.6)">66</value>
        <value condition="String.IsEqual(Window(Home).Property(SkinHelper.ListItem.UserRating),6.7)">67</value>
        <value condition="String.IsEqual(Window(Home).Property(SkinHelper.ListItem.UserRating),6.8)">68</value>
        <value condition="String.IsEqual(Window(Home).Property(SkinHelper.ListItem.UserRating),6.9)">69</value>
        <value condition="String.IsEqual(Window(Home).Property(SkinHelper.ListItem.UserRating),7)">70</value>
        <value condition="String.IsEqual(Window(Home).Property(SkinHelper.ListItem.UserRating),7.0)">70</value>
        <value condition="String.IsEqual(Window(Home).Property(SkinHelper.ListItem.UserRating),7.1)">71</value>
        <value condition="String.IsEqual(Window(Home).Property(SkinHelper.ListItem.UserRating),7.2)">72</value>
        <value condition="String.IsEqual(Window(Home).Property(SkinHelper.ListItem.UserRating),7.3)">73</value>
        <value condition="String.IsEqual(Window(Home).Property(SkinHelper.ListItem.UserRating),7.4)">74</value>
        <value condition="String.IsEqual(Window(Home).Property(SkinHelper.ListItem.UserRating),7.5)">75</value>
        <value condition="String.IsEqual(Window(Home).Property(SkinHelper.ListItem.UserRating),7.6)">76</value>
        <value condition="String.IsEqual(Window(Home).Property(SkinHelper.ListItem.UserRating),7.7)">77</value>
        <value condition="String.IsEqual(Window(Home).Property(SkinHelper.ListItem.UserRating),7.8)">78</value>
        <value condition="String.IsEqual(Window(Home).Property(SkinHelper.ListItem.UserRating),7.9)">79</value>
        <value condition="String.IsEqual(Window(Home).Property(SkinHelper.ListItem.UserRating),8)">80</value>
        <value condition="String.IsEqual(Window(Home).Property(SkinHelper.ListItem.UserRating),8.0)">80</value>
        <value condition="String.IsEqual(Window(Home).Property(SkinHelper.ListItem.UserRating),8.1)">81</value>
        <value condition="String.IsEqual(Window(Home).Property(SkinHelper.ListItem.UserRating),8.2)">82</value>
        <value condition="String.IsEqual(Window(Home).Property(SkinHelper.ListItem.UserRating),8.3)">83</value>
        <value condition="String.IsEqual(Window(Home).Property(SkinHelper.ListItem.UserRating),8.4)">84</value>
        <value condition="String.IsEqual(Window(Home).Property(SkinHelper.ListItem.UserRating),8.5)">85</value>
        <value condition="String.IsEqual(Window(Home).Property(SkinHelper.ListItem.UserRating),8.6)">86</value>
        <value condition="String.IsEqual(Window(Home).Property(SkinHelper.ListItem.UserRating),8.7)">87</value>
        <value condition="String.IsEqual(Window(Home).Property(SkinHelper.ListItem.UserRating),8.8)">88</value>
        <value condition="String.IsEqual(Window(Home).Property(SkinHelper.ListItem.UserRating),8.9)">89</value>
        <value condition="String.IsEqual(Window(Home).Property(SkinHelper.ListItem.UserRating),9)">90</value>
        <value condition="String.IsEqual(Window(Home).Property(SkinHelper.ListItem.UserRating),9.0)">90</value>
        <value condition="String.IsEqual(Window(Home).Property(SkinHelper.ListItem.UserRating),9.1)">91</value>
        <value condition="String.IsEqual(Window(Home).Property(SkinHelper.ListItem.UserRating),9.2)">92</value>
        <value condition="String.IsEqual(Window(Home).Property(SkinHelper.ListItem.UserRating),9.3)">93</value>
        <value condition="String.IsEqual(Window(Home).Property(SkinHelper.ListItem.UserRating),9.4)">94</value>
        <value condition="String.IsEqual(Window(Home).Property(SkinHelper.ListItem.UserRating),9.5)">95</value>
        <value condition="String.IsEqual(Window(Home).Property(SkinHelper.ListItem.UserRating),9.6)">96</value>
        <value condition="String.IsEqual(Window(Home).Property(SkinHelper.ListItem.UserRating),9.7)">97</value>
        <value condition="String.IsEqual(Window(Home).Property(SkinHelper.ListItem.UserRating),9.8)">98</value>
        <value condition="String.IsEqual(Window(Home).Property(SkinHelper.ListItem.UserRating),9.9)">99</value>
        <value condition="String.IsEqual(Window(Home).Property(SkinHelper.ListItem.UserRating),10)"/>
        <value condition="String.IsEqual(Window(Home).Property(SkinHelper.ListItem.UserRating),10.0)"/>
    </variable>


    <!-- ListItem.Rating -->
    <variable name="RatingDecimalToPercentageListItemRating">
        <value condition="String.IsEqual(ListItem.Rating,0)"/>
        <value condition="String.IsEqual(ListItem.Rating,0.0)"/>
        <value condition="String.IsEqual(ListItem.Rating,0.1)">1</value>
        <value condition="String.IsEqual(ListItem.Rating,0.2)">2</value>
        <value condition="String.IsEqual(ListItem.Rating,0.3)">3</value>
        <value condition="String.IsEqual(ListItem.Rating,0.4)">4</value>
        <value condition="String.IsEqual(ListItem.Rating,0.5)">5</value>
        <value condition="String.IsEqual(ListItem.Rating,0.6)">6</value>
        <value condition="String.IsEqual(ListItem.Rating,0.7)">7</value>
        <value condition="String.IsEqual(ListItem.Rating,0.8)">8</value>
        <value condition="String.IsEqual(ListItem.Rating,0.9)">9</value>
        <value condition="String.IsEqual(ListItem.Rating,1)">10</value>
        <value condition="String.IsEqual(ListItem.Rating,1.0)">10</value>
        <value condition="String.IsEqual(ListItem.Rating,1.1)">11</value>
        <value condition="String.IsEqual(ListItem.Rating,1.2)">12</value>
        <value condition="String.IsEqual(ListItem.Rating,1.3)">13</value>
        <value condition="String.IsEqual(ListItem.Rating,1.4)">14</value>
        <value condition="String.IsEqual(ListItem.Rating,1.5)">15</value>
        <value condition="String.IsEqual(ListItem.Rating,1.6)">16</value>
        <value condition="String.IsEqual(ListItem.Rating,1.7)">17</value>
        <value condition="String.IsEqual(ListItem.Rating,1.8)">18</value>
        <value condition="String.IsEqual(ListItem.Rating,1.9)">19</value>
        <value condition="String.IsEqual(ListItem.Rating,2)">20</value>
        <value condition="String.IsEqual(ListItem.Rating,2.0)">20</value>
        <value condition="String.IsEqual(ListItem.Rating,2.1)">21</value>
        <value condition="String.IsEqual(ListItem.Rating,2.2)">22</value>
        <value condition="String.IsEqual(ListItem.Rating,2.3)">23</value>
        <value condition="String.IsEqual(ListItem.Rating,2.4)">24</value>
        <value condition="String.IsEqual(ListItem.Rating,2.5)">25</value>
        <value condition="String.IsEqual(ListItem.Rating,2.6)">26</value>
        <value condition="String.IsEqual(ListItem.Rating,2.7)">27</value>
        <value condition="String.IsEqual(ListItem.Rating,2.8)">28</value>
        <value condition="String.IsEqual(ListItem.Rating,2.9)">29</value>
        <value condition="String.IsEqual(ListItem.Rating,3)">30</value>
        <value condition="String.IsEqual(ListItem.Rating,3.0)">30</value>
        <value condition="String.IsEqual(ListItem.Rating,3.1)">31</value>
        <value condition="String.IsEqual(ListItem.Rating,3.2)">32</value>
        <value condition="String.IsEqual(ListItem.Rating,3.3)">33</value>
        <value condition="String.IsEqual(ListItem.Rating,3.4)">34</value>
        <value condition="String.IsEqual(ListItem.Rating,3.5)">35</value>
        <value condition="String.IsEqual(ListItem.Rating,3.6)">36</value>
        <value condition="String.IsEqual(ListItem.Rating,3.7)">37</value>
        <value condition="String.IsEqual(ListItem.Rating,3.8)">38</value>
        <value condition="String.IsEqual(ListItem.Rating,3.9)">39</value>
        <value condition="String.IsEqual(ListItem.Rating,4)">40</value>
        <value condition="String.IsEqual(ListItem.Rating,4.0)">40</value>
        <value condition="String.IsEqual(ListItem.Rating,4.1)">41</value>
        <value condition="String.IsEqual(ListItem.Rating,4.2)">42</value>
        <value condition="String.IsEqual(ListItem.Rating,4.3)">43</value>
        <value condition="String.IsEqual(ListItem.Rating,4.4)">44</value>
        <value condition="String.IsEqual(ListItem.Rating,4.5)">45</value>
        <value condition="String.IsEqual(ListItem.Rating,4.6)">46</value>
        <value condition="String.IsEqual(ListItem.Rating,4.7)">47</value>
        <value condition="String.IsEqual(ListItem.Rating,4.8)">48</value>
        <value condition="String.IsEqual(ListItem.Rating,4.9)">49</value>
        <value condition="String.IsEqual(ListItem.Rating,5)">50</value>
        <value condition="String.IsEqual(ListItem.Rating,5.0)">50</value>
        <value condition="String.IsEqual(ListItem.Rating,5.1)">51</value>
        <value condition="String.IsEqual(ListItem.Rating,5.2)">52</value>
        <value condition="String.IsEqual(ListItem.Rating,5.3)">53</value>
        <value condition="String.IsEqual(ListItem.Rating,5.4)">54</value>
        <value condition="String.IsEqual(ListItem.Rating,5.5)">55</value>
        <value condition="String.IsEqual(ListItem.Rating,5.6)">56</value>
        <value condition="String.IsEqual(ListItem.Rating,5.7)">57</value>
        <value condition="String.IsEqual(ListItem.Rating,5.8)">58</value>
        <value condition="String.IsEqual(ListItem.Rating,5.9)">59</value>
        <value condition="String.IsEqual(ListItem.Rating,6)">60</value>
        <value condition="String.IsEqual(ListItem.Rating,6.0)">60</value>
        <value condition="String.IsEqual(ListItem.Rating,6.1)">61</value>
        <value condition="String.IsEqual(ListItem.Rating,6.2)">62</value>
        <value condition="String.IsEqual(ListItem.Rating,6.3)">63</value>
        <value condition="String.IsEqual(ListItem.Rating,6.4)">64</value>
        <value condition="String.IsEqual(ListItem.Rating,6.5)">65</value>
        <value condition="String.IsEqual(ListItem.Rating,6.6)">66</value>
        <value condition="String.IsEqual(ListItem.Rating,6.7)">67</value>
        <value condition="String.IsEqual(ListItem.Rating,6.8)">68</value>
        <value condition="String.IsEqual(ListItem.Rating,6.9)">69</value>
        <value condition="String.IsEqual(ListItem.Rating,7)">70</value>
        <value condition="String.IsEqual(ListItem.Rating,7.0)">70</value>
        <value condition="String.IsEqual(ListItem.Rating,7.1)">71</value>
        <value condition="String.IsEqual(ListItem.Rating,7.2)">72</value>
        <value condition="String.IsEqual(ListItem.Rating,7.3)">73</value>
        <value condition="String.IsEqual(ListItem.Rating,7.4)">74</value>
        <value condition="String.IsEqual(ListItem.Rating,7.5)">75</value>
        <value condition="String.IsEqual(ListItem.Rating,7.6)">76</value>
        <value condition="String.IsEqual(ListItem.Rating,7.7)">77</value>
        <value condition="String.IsEqual(ListItem.Rating,7.8)">78</value>
        <value condition="String.IsEqual(ListItem.Rating,7.9)">79</value>
        <value condition="String.IsEqual(ListItem.Rating,8)">80</value>
        <value condition="String.IsEqual(ListItem.Rating,8.0)">80</value>
        <value condition="String.IsEqual(ListItem.Rating,8.1)">81</value>
        <value condition="String.IsEqual(ListItem.Rating,8.2)">82</value>
        <value condition="String.IsEqual(ListItem.Rating,8.3)">83</value>
        <value condition="String.IsEqual(ListItem.Rating,8.4)">84</value>
        <value condition="String.IsEqual(ListItem.Rating,8.5)">85</value>
        <value condition="String.IsEqual(ListItem.Rating,8.6)">86</value>
        <value condition="String.IsEqual(ListItem.Rating,8.7)">87</value>
        <value condition="String.IsEqual(ListItem.Rating,8.8)">88</value>
        <value condition="String.IsEqual(ListItem.Rating,8.9)">89</value>
        <value condition="String.IsEqual(ListItem.Rating,9)">90</value>
        <value condition="String.IsEqual(ListItem.Rating,9.0)">90</value>
        <value condition="String.IsEqual(ListItem.Rating,9.1)">91</value>
        <value condition="String.IsEqual(ListItem.Rating,9.2)">92</value>
        <value condition="String.IsEqual(ListItem.Rating,9.3)">93</value>
        <value condition="String.IsEqual(ListItem.Rating,9.4)">94</value>
        <value condition="String.IsEqual(ListItem.Rating,9.5)">95</value>
        <value condition="String.IsEqual(ListItem.Rating,9.6)">96</value>
        <value condition="String.IsEqual(ListItem.Rating,9.7)">97</value>
        <value condition="String.IsEqual(ListItem.Rating,9.8)">98</value>
        <value condition="String.IsEqual(ListItem.Rating,9.9)">99</value>
        <value condition="String.IsEqual(ListItem.Rating,10)"/>
        <value condition="String.IsEqual(ListItem.Rating,10.0)"/>
    </variable>

    <!-- Window(Home).Property(ListItem.Rating) -->
    <variable name="RatingDecimalToPercentageHomeListItemRating">
        <value condition="String.IsEqual(Window(Home).Property(ListItem.Rating),0)"/>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.Rating),0.0)"/>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.Rating),0.1)">1</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.Rating),0.2)">2</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.Rating),0.3)">3</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.Rating),0.4)">4</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.Rating),0.5)">5</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.Rating),0.6)">6</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.Rating),0.7)">7</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.Rating),0.8)">8</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.Rating),0.9)">9</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.Rating),1)">10</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.Rating),1.0)">10</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.Rating),1.1)">11</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.Rating),1.2)">12</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.Rating),1.3)">13</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.Rating),1.4)">14</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.Rating),1.5)">15</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.Rating),1.6)">16</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.Rating),1.7)">17</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.Rating),1.8)">18</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.Rating),1.9)">19</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.Rating),2)">20</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.Rating),2.0)">20</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.Rating),2.1)">21</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.Rating),2.2)">22</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.Rating),2.3)">23</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.Rating),2.4)">24</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.Rating),2.5)">25</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.Rating),2.6)">26</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.Rating),2.7)">27</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.Rating),2.8)">28</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.Rating),2.9)">29</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.Rating),3)">30</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.Rating),3.0)">30</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.Rating),3.1)">31</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.Rating),3.2)">32</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.Rating),3.3)">33</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.Rating),3.4)">34</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.Rating),3.5)">35</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.Rating),3.6)">36</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.Rating),3.7)">37</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.Rating),3.8)">38</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.Rating),3.9)">39</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.Rating),4)">40</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.Rating),4.0)">40</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.Rating),4.1)">41</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.Rating),4.2)">42</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.Rating),4.3)">43</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.Rating),4.4)">44</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.Rating),4.5)">45</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.Rating),4.6)">46</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.Rating),4.7)">47</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.Rating),4.8)">48</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.Rating),4.9)">49</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.Rating),5)">50</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.Rating),5.0)">50</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.Rating),5.1)">51</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.Rating),5.2)">52</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.Rating),5.3)">53</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.Rating),5.4)">54</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.Rating),5.5)">55</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.Rating),5.6)">56</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.Rating),5.7)">57</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.Rating),5.8)">58</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.Rating),5.9)">59</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.Rating),6)">60</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.Rating),6.0)">60</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.Rating),6.1)">61</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.Rating),6.2)">62</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.Rating),6.3)">63</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.Rating),6.4)">64</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.Rating),6.5)">65</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.Rating),6.6)">66</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.Rating),6.7)">67</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.Rating),6.8)">68</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.Rating),6.9)">69</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.Rating),7)">70</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.Rating),7.0)">70</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.Rating),7.1)">71</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.Rating),7.2)">72</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.Rating),7.3)">73</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.Rating),7.4)">74</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.Rating),7.5)">75</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.Rating),7.6)">76</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.Rating),7.7)">77</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.Rating),7.8)">78</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.Rating),7.9)">79</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.Rating),8)">80</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.Rating),8.0)">80</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.Rating),8.1)">81</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.Rating),8.2)">82</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.Rating),8.3)">83</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.Rating),8.4)">84</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.Rating),8.5)">85</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.Rating),8.6)">86</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.Rating),8.7)">87</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.Rating),8.8)">88</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.Rating),8.9)">89</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.Rating),9)">90</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.Rating),9.0)">90</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.Rating),9.1)">91</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.Rating),9.2)">92</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.Rating),9.3)">93</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.Rating),9.4)">94</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.Rating),9.5)">95</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.Rating),9.6)">96</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.Rating),9.7)">97</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.Rating),9.8)">98</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.Rating),9.9)">99</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.Rating),10)"/>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.Rating),10.0)"/>
    </variable>

    <!-- Window(Home).Property(SkinHelper.ListItem.Rating) -->
    <variable name="RatingDecimalToPercentageSkinHelperListItemRating">
        <value condition="String.IsEqual(Window(Home).Property(SkinHelper.ListItem.Rating),0)"/>
        <value condition="String.IsEqual(Window(Home).Property(SkinHelper.ListItem.Rating),0.0)"/>
        <value condition="String.IsEqual(Window(Home).Property(SkinHelper.ListItem.Rating),0.1)">1</value>
        <value condition="String.IsEqual(Window(Home).Property(SkinHelper.ListItem.Rating),0.2)">2</value>
        <value condition="String.IsEqual(Window(Home).Property(SkinHelper.ListItem.Rating),0.3)">3</value>
        <value condition="String.IsEqual(Window(Home).Property(SkinHelper.ListItem.Rating),0.4)">4</value>
        <value condition="String.IsEqual(Window(Home).Property(SkinHelper.ListItem.Rating),0.5)">5</value>
        <value condition="String.IsEqual(Window(Home).Property(SkinHelper.ListItem.Rating),0.6)">6</value>
        <value condition="String.IsEqual(Window(Home).Property(SkinHelper.ListItem.Rating),0.7)">7</value>
        <value condition="String.IsEqual(Window(Home).Property(SkinHelper.ListItem.Rating),0.8)">8</value>
        <value condition="String.IsEqual(Window(Home).Property(SkinHelper.ListItem.Rating),0.9)">9</value>
        <value condition="String.IsEqual(Window(Home).Property(SkinHelper.ListItem.Rating),1)">10</value>
        <value condition="String.IsEqual(Window(Home).Property(SkinHelper.ListItem.Rating),1.0)">10</value>
        <value condition="String.IsEqual(Window(Home).Property(SkinHelper.ListItem.Rating),1.1)">11</value>
        <value condition="String.IsEqual(Window(Home).Property(SkinHelper.ListItem.Rating),1.2)">12</value>
        <value condition="String.IsEqual(Window(Home).Property(SkinHelper.ListItem.Rating),1.3)">13</value>
        <value condition="String.IsEqual(Window(Home).Property(SkinHelper.ListItem.Rating),1.4)">14</value>
        <value condition="String.IsEqual(Window(Home).Property(SkinHelper.ListItem.Rating),1.5)">15</value>
        <value condition="String.IsEqual(Window(Home).Property(SkinHelper.ListItem.Rating),1.6)">16</value>
        <value condition="String.IsEqual(Window(Home).Property(SkinHelper.ListItem.Rating),1.7)">17</value>
        <value condition="String.IsEqual(Window(Home).Property(SkinHelper.ListItem.Rating),1.8)">18</value>
        <value condition="String.IsEqual(Window(Home).Property(SkinHelper.ListItem.Rating),1.9)">19</value>
        <value condition="String.IsEqual(Window(Home).Property(SkinHelper.ListItem.Rating),2)">20</value>
        <value condition="String.IsEqual(Window(Home).Property(SkinHelper.ListItem.Rating),2.0)">20</value>
        <value condition="String.IsEqual(Window(Home).Property(SkinHelper.ListItem.Rating),2.1)">21</value>
        <value condition="String.IsEqual(Window(Home).Property(SkinHelper.ListItem.Rating),2.2)">22</value>
        <value condition="String.IsEqual(Window(Home).Property(SkinHelper.ListItem.Rating),2.3)">23</value>
        <value condition="String.IsEqual(Window(Home).Property(SkinHelper.ListItem.Rating),2.4)">24</value>
        <value condition="String.IsEqual(Window(Home).Property(SkinHelper.ListItem.Rating),2.5)">25</value>
        <value condition="String.IsEqual(Window(Home).Property(SkinHelper.ListItem.Rating),2.6)">26</value>
        <value condition="String.IsEqual(Window(Home).Property(SkinHelper.ListItem.Rating),2.7)">27</value>
        <value condition="String.IsEqual(Window(Home).Property(SkinHelper.ListItem.Rating),2.8)">28</value>
        <value condition="String.IsEqual(Window(Home).Property(SkinHelper.ListItem.Rating),2.9)">29</value>
        <value condition="String.IsEqual(Window(Home).Property(SkinHelper.ListItem.Rating),3)">30</value>
        <value condition="String.IsEqual(Window(Home).Property(SkinHelper.ListItem.Rating),3.0)">30</value>
        <value condition="String.IsEqual(Window(Home).Property(SkinHelper.ListItem.Rating),3.1)">31</value>
        <value condition="String.IsEqual(Window(Home).Property(SkinHelper.ListItem.Rating),3.2)">32</value>
        <value condition="String.IsEqual(Window(Home).Property(SkinHelper.ListItem.Rating),3.3)">33</value>
        <value condition="String.IsEqual(Window(Home).Property(SkinHelper.ListItem.Rating),3.4)">34</value>
        <value condition="String.IsEqual(Window(Home).Property(SkinHelper.ListItem.Rating),3.5)">35</value>
        <value condition="String.IsEqual(Window(Home).Property(SkinHelper.ListItem.Rating),3.6)">36</value>
        <value condition="String.IsEqual(Window(Home).Property(SkinHelper.ListItem.Rating),3.7)">37</value>
        <value condition="String.IsEqual(Window(Home).Property(SkinHelper.ListItem.Rating),3.8)">38</value>
        <value condition="String.IsEqual(Window(Home).Property(SkinHelper.ListItem.Rating),3.9)">39</value>
        <value condition="String.IsEqual(Window(Home).Property(SkinHelper.ListItem.Rating),4)">40</value>
        <value condition="String.IsEqual(Window(Home).Property(SkinHelper.ListItem.Rating),4.0)">40</value>
        <value condition="String.IsEqual(Window(Home).Property(SkinHelper.ListItem.Rating),4.1)">41</value>
        <value condition="String.IsEqual(Window(Home).Property(SkinHelper.ListItem.Rating),4.2)">42</value>
        <value condition="String.IsEqual(Window(Home).Property(SkinHelper.ListItem.Rating),4.3)">43</value>
        <value condition="String.IsEqual(Window(Home).Property(SkinHelper.ListItem.Rating),4.4)">44</value>
        <value condition="String.IsEqual(Window(Home).Property(SkinHelper.ListItem.Rating),4.5)">45</value>
        <value condition="String.IsEqual(Window(Home).Property(SkinHelper.ListItem.Rating),4.6)">46</value>
        <value condition="String.IsEqual(Window(Home).Property(SkinHelper.ListItem.Rating),4.7)">47</value>
        <value condition="String.IsEqual(Window(Home).Property(SkinHelper.ListItem.Rating),4.8)">48</value>
        <value condition="String.IsEqual(Window(Home).Property(SkinHelper.ListItem.Rating),4.9)">49</value>
        <value condition="String.IsEqual(Window(Home).Property(SkinHelper.ListItem.Rating),5)">50</value>
        <value condition="String.IsEqual(Window(Home).Property(SkinHelper.ListItem.Rating),5.0)">50</value>
        <value condition="String.IsEqual(Window(Home).Property(SkinHelper.ListItem.Rating),5.1)">51</value>
        <value condition="String.IsEqual(Window(Home).Property(SkinHelper.ListItem.Rating),5.2)">52</value>
        <value condition="String.IsEqual(Window(Home).Property(SkinHelper.ListItem.Rating),5.3)">53</value>
        <value condition="String.IsEqual(Window(Home).Property(SkinHelper.ListItem.Rating),5.4)">54</value>
        <value condition="String.IsEqual(Window(Home).Property(SkinHelper.ListItem.Rating),5.5)">55</value>
        <value condition="String.IsEqual(Window(Home).Property(SkinHelper.ListItem.Rating),5.6)">56</value>
        <value condition="String.IsEqual(Window(Home).Property(SkinHelper.ListItem.Rating),5.7)">57</value>
        <value condition="String.IsEqual(Window(Home).Property(SkinHelper.ListItem.Rating),5.8)">58</value>
        <value condition="String.IsEqual(Window(Home).Property(SkinHelper.ListItem.Rating),5.9)">59</value>
        <value condition="String.IsEqual(Window(Home).Property(SkinHelper.ListItem.Rating),6)">60</value>
        <value condition="String.IsEqual(Window(Home).Property(SkinHelper.ListItem.Rating),6.0)">60</value>
        <value condition="String.IsEqual(Window(Home).Property(SkinHelper.ListItem.Rating),6.1)">61</value>
        <value condition="String.IsEqual(Window(Home).Property(SkinHelper.ListItem.Rating),6.2)">62</value>
        <value condition="String.IsEqual(Window(Home).Property(SkinHelper.ListItem.Rating),6.3)">63</value>
        <value condition="String.IsEqual(Window(Home).Property(SkinHelper.ListItem.Rating),6.4)">64</value>
        <value condition="String.IsEqual(Window(Home).Property(SkinHelper.ListItem.Rating),6.5)">65</value>
        <value condition="String.IsEqual(Window(Home).Property(SkinHelper.ListItem.Rating),6.6)">66</value>
        <value condition="String.IsEqual(Window(Home).Property(SkinHelper.ListItem.Rating),6.7)">67</value>
        <value condition="String.IsEqual(Window(Home).Property(SkinHelper.ListItem.Rating),6.8)">68</value>
        <value condition="String.IsEqual(Window(Home).Property(SkinHelper.ListItem.Rating),6.9)">69</value>
        <value condition="String.IsEqual(Window(Home).Property(SkinHelper.ListItem.Rating),7)">70</value>
        <value condition="String.IsEqual(Window(Home).Property(SkinHelper.ListItem.Rating),7.0)">70</value>
        <value condition="String.IsEqual(Window(Home).Property(SkinHelper.ListItem.Rating),7.1)">71</value>
        <value condition="String.IsEqual(Window(Home).Property(SkinHelper.ListItem.Rating),7.2)">72</value>
        <value condition="String.IsEqual(Window(Home).Property(SkinHelper.ListItem.Rating),7.3)">73</value>
        <value condition="String.IsEqual(Window(Home).Property(SkinHelper.ListItem.Rating),7.4)">74</value>
        <value condition="String.IsEqual(Window(Home).Property(SkinHelper.ListItem.Rating),7.5)">75</value>
        <value condition="String.IsEqual(Window(Home).Property(SkinHelper.ListItem.Rating),7.6)">76</value>
        <value condition="String.IsEqual(Window(Home).Property(SkinHelper.ListItem.Rating),7.7)">77</value>
        <value condition="String.IsEqual(Window(Home).Property(SkinHelper.ListItem.Rating),7.8)">78</value>
        <value condition="String.IsEqual(Window(Home).Property(SkinHelper.ListItem.Rating),7.9)">79</value>
        <value condition="String.IsEqual(Window(Home).Property(SkinHelper.ListItem.Rating),8)">80</value>
        <value condition="String.IsEqual(Window(Home).Property(SkinHelper.ListItem.Rating),8.0)">80</value>
        <value condition="String.IsEqual(Window(Home).Property(SkinHelper.ListItem.Rating),8.1)">81</value>
        <value condition="String.IsEqual(Window(Home).Property(SkinHelper.ListItem.Rating),8.2)">82</value>
        <value condition="String.IsEqual(Window(Home).Property(SkinHelper.ListItem.Rating),8.3)">83</value>
        <value condition="String.IsEqual(Window(Home).Property(SkinHelper.ListItem.Rating),8.4)">84</value>
        <value condition="String.IsEqual(Window(Home).Property(SkinHelper.ListItem.Rating),8.5)">85</value>
        <value condition="String.IsEqual(Window(Home).Property(SkinHelper.ListItem.Rating),8.6)">86</value>
        <value condition="String.IsEqual(Window(Home).Property(SkinHelper.ListItem.Rating),8.7)">87</value>
        <value condition="String.IsEqual(Window(Home).Property(SkinHelper.ListItem.Rating),8.8)">88</value>
        <value condition="String.IsEqual(Window(Home).Property(SkinHelper.ListItem.Rating),8.9)">89</value>
        <value condition="String.IsEqual(Window(Home).Property(SkinHelper.ListItem.Rating),9)">90</value>
        <value condition="String.IsEqual(Window(Home).Property(SkinHelper.ListItem.Rating),9.0)">90</value>
        <value condition="String.IsEqual(Window(Home).Property(SkinHelper.ListItem.Rating),9.1)">91</value>
        <value condition="String.IsEqual(Window(Home).Property(SkinHelper.ListItem.Rating),9.2)">92</value>
        <value condition="String.IsEqual(Window(Home).Property(SkinHelper.ListItem.Rating),9.3)">93</value>
        <value condition="String.IsEqual(Window(Home).Property(SkinHelper.ListItem.Rating),9.4)">94</value>
        <value condition="String.IsEqual(Window(Home).Property(SkinHelper.ListItem.Rating),9.5)">95</value>
        <value condition="String.IsEqual(Window(Home).Property(SkinHelper.ListItem.Rating),9.6)">96</value>
        <value condition="String.IsEqual(Window(Home).Property(SkinHelper.ListItem.Rating),9.7)">97</value>
        <value condition="String.IsEqual(Window(Home).Property(SkinHelper.ListItem.Rating),9.8)">98</value>
        <value condition="String.IsEqual(Window(Home).Property(SkinHelper.ListItem.Rating),9.9)">99</value>
        <value condition="String.IsEqual(Window(Home).Property(SkinHelper.ListItem.Rating),10)"/>
        <value condition="String.IsEqual(Window(Home).Property(SkinHelper.ListItem.Rating),10.0)"/>
    </variable>
    <!-- END OF DecimalToPercentage -->
</includes>

